{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/oranges/source/css/base.css","path":"css/base.css","modified":0,"renderable":1},{"_id":"themes/oranges/source/css/color-scheme.css","path":"css/color-scheme.css","modified":0,"renderable":1},{"_id":"themes/oranges/source/css/comments.css","path":"css/comments.css","modified":0,"renderable":1},{"_id":"themes/oranges/source/css/github-markdown.css","path":"css/github-markdown.css","modified":0,"renderable":1},{"_id":"themes/oranges/source/css/highlight.css","path":"css/highlight.css","modified":0,"renderable":1},{"_id":"themes/oranges/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/oranges/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/oranges/source/images/favicon.png","path":"images/favicon.png","modified":0,"renderable":1},{"_id":"themes/oranges/source/js/activeNav.js","path":"js/activeNav.js","modified":0,"renderable":1},{"_id":"themes/oranges/source/js/backtotop.js","path":"js/backtotop.js","modified":0,"renderable":1},{"_id":"themes/oranges/source/js/catalog.js","path":"js/catalog.js","modified":0,"renderable":1},{"_id":"themes/oranges/source/js/codeCopy.js","path":"js/codeCopy.js","modified":0,"renderable":1},{"_id":"themes/oranges/source/js/colorscheme.js","path":"js/colorscheme.js","modified":0,"renderable":1},{"_id":"themes/oranges/source/js/fancybox.js","path":"js/fancybox.js","modified":0,"renderable":1},{"_id":"themes/oranges/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/oranges/source/js/shares.js","path":"js/shares.js","modified":0,"renderable":1},{"_id":"themes/oranges/source/plugins/clipboard.min.js","path":"plugins/clipboard.min.js","modified":0,"renderable":1},{"_id":"themes/oranges/source/plugins/gitalk.css","path":"plugins/gitalk.css","modified":0,"renderable":1},{"_id":"themes/oranges/source/plugins/gitalk.min.js","path":"plugins/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/oranges/source/plugins/jquery.fancybox.min.css","path":"plugins/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"themes/oranges/source/plugins/jquery.fancybox.min.js","path":"plugins/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"themes/oranges/source/plugins/jquery.min.js","path":"plugins/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/oranges/source/plugins/valine.min.js","path":"plugins/valine.min.js","modified":0,"renderable":1},{"_id":"themes/oranges/source/plugins/waline.css","path":"plugins/waline.css","modified":0,"renderable":1},{"_id":"themes/oranges/source/plugins/waline.js","path":"plugins/waline.js","modified":0,"renderable":1},{"_id":"themes/oranges/source/plugins/waline.mjs","path":"plugins/waline.mjs","modified":0,"renderable":1},{"_id":"themes/oranges/source/css/figcaption/mac-block.css","path":"css/figcaption/mac-block.css","modified":0,"renderable":1},{"_id":"themes/oranges/source/plugins/mathjax/tex-chtml.js","path":"plugins/mathjax/tex-chtml.js","modified":0,"renderable":1},{"_id":"themes/oranges/source/plugins/mathjax/output/chtml/fonts/woff-v2/MathJax_Main-Regular.woff","path":"plugins/mathjax/output/chtml/fonts/woff-v2/MathJax_Main-Regular.woff","modified":0,"renderable":1},{"_id":"themes/oranges/source/plugins/mathjax/output/chtml/fonts/woff-v2/MathJax_Math-Italic.woff","path":"plugins/mathjax/output/chtml/fonts/woff-v2/MathJax_Math-Italic.woff","modified":0,"renderable":1},{"_id":"themes/oranges/source/plugins/mathjax/output/chtml/fonts/woff-v2/MathJax_Size1-Regular.woff","path":"plugins/mathjax/output/chtml/fonts/woff-v2/MathJax_Size1-Regular.woff","modified":0,"renderable":1},{"_id":"themes/oranges/source/plugins/mathjax/output/chtml/fonts/woff-v2/MathJax_Zero.woff","path":"plugins/mathjax/output/chtml/fonts/woff-v2/MathJax_Zero.woff","modified":0,"renderable":1},{"_id":"source/img/arch1.png","path":"img/arch1.png","modified":0,"renderable":0},{"_id":"source/img/arch3.png","path":"img/arch3.png","modified":0,"renderable":0},{"_id":"source/img/arch2.png","path":"img/arch2.png","modified":0,"renderable":0},{"_id":"source/img/arch4.png","path":"img/arch4.png","modified":0,"renderable":0},{"_id":"source/img/kuma1.png","path":"img/kuma1.png","modified":0,"renderable":0},{"_id":"source/img/kuma2.png","path":"img/kuma2.png","modified":0,"renderable":0},{"_id":"source/img/network1.png","path":"img/network1.png","modified":0,"renderable":0},{"_id":"source/img/network3.png","path":"img/network3.png","modified":0,"renderable":0},{"_id":"source/img/network4.png","path":"img/network4.png","modified":0,"renderable":0},{"_id":"source/img/network5.png","path":"img/network5.png","modified":0,"renderable":0},{"_id":"source/img/network6.png","path":"img/network6.png","modified":0,"renderable":0},{"_id":"source/img/zcx.png","path":"img/zcx.png","modified":0,"renderable":0},{"_id":"source/img/zcxx0322.png","path":"img/zcxx0322.png","modified":0,"renderable":0},{"_id":"source/img/icon.png","path":"img/icon.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1759308509152},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1759308726311},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"6497b70356271fd6f9f1dc862353be844c457a53","modified":1759308726622},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"a93d7b3990e45bc7247eecf01888f71674887a63","modified":1759308726656},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"06889bee30e4c39479467021da434d3a6a0990fc","modified":1759308726620},{"_id":"node_modules/hexo-theme-landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1759308726658},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1759308726659},{"_id":"node_modules/hexo-theme-landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1759308726662},{"_id":"node_modules/hexo-theme-landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1759308726668},{"_id":"node_modules/hexo-theme-landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1759308726669},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1759308726671},{"_id":"node_modules/hexo-theme-landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1759308726673},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1759308726674},{"_id":"node_modules/hexo-theme-landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1759308726676},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1759308726677},{"_id":"node_modules/hexo-theme-landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1759308726678},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1759308726679},{"_id":"node_modules/hexo-theme-landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1759308726681},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1759308726682},{"_id":"node_modules/hexo-theme-landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1759308726683},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1759308726684},{"_id":"node_modules/hexo-theme-landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1759308726685},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1759308726686},{"_id":"node_modules/hexo-theme-landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1759308726704},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1759308726707},{"_id":"node_modules/hexo-theme-landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1759308726708},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1759308726709},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1759308726710},{"_id":"node_modules/hexo-theme-landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1759308726711},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1759308726712},{"_id":"node_modules/hexo-theme-landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1759308726713},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1759308726714},{"_id":"node_modules/hexo-theme-landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1759308726715},{"_id":"node_modules/hexo-theme-landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1759308726715},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1759308726717},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1759308726718},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1759308726719},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"97160b8111dd0283f8231408bcab4c87d31c1646","modified":1759308726470},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"97160b8111dd0283f8231408bcab4c87d31c1646","modified":1759308726505},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1759308726548},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"57281fc3812c877ec2d8e89ec87ede57b9789d4c","modified":1759308726545},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1759308726561},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1759308726558},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"97160b8111dd0283f8231408bcab4c87d31c1646","modified":1759308726578},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1759308726600},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"1b89d0caba03a66a43d9c290a5e94fa438a89210","modified":1759308726392},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1759308726415},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"0039146b8ccbdf9b9f8bee58fc6c238f0e9921fc","modified":1759308726430},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1759308726517},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"e9d4678e14be5e3cd5e34d783e5af6d6626092f5","modified":1759308726481},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1759308726527},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1759308726532},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"0e94f5722d4c44d3cc91be2f4fd30b9ab503b868","modified":1759308726536},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"6a5033d189554c9a6d42e2ef7952ae5c9742648e","modified":1759308726541},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1759308726551},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1759308726569},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1759308726453},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1759308726499},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1759308726564},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1759308726574},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1759308726580},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1759308726625},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"ca28281423ae57d76b6c1eb91cd845fd4e518bd6","modified":1759308726628},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"e55a1d92954ed20f6887f92dc727bb995a010a43","modified":1759308726654},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1759308726343},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1759308726617},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1759308726492},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1759308726511},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1759308726521},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1759308726554},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1759308726572},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1759308726583},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1759308726631},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"f608400a08cf137ab15ec1f44bac551950afe879","modified":1759308726633},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1759308726635},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1759308726637},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"268d2989acb06e2ddd06cc36a6918c6cd865476b","modified":1759308726642},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"9cc3b2927d814f2f6e8e188f9d3657b94f4c6ef3","modified":1759308726644},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1759308726648},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1759308726649},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1759308726651},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1759308726653},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1759308726640},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1759308726645},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1759308726614},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1759308726609},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1759308726597},{"_id":"source/about/index.md","hash":"ad4e0571b9d018868c6d9efd2fd4edd5341e534a","modified":1759390585856},{"_id":"themes/oranges/source/css/_common/layout/header.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1759309152316},{"_id":"themes/oranges/.gitignore","hash":"235a46a06c2464f3e8142d7b78d853ec621038b3","modified":1759309152304},{"_id":"themes/oranges/README.md","hash":"c5ca9783e7a0351de1909af1b59e1abe2cce4a31","modified":1759309152305},{"_id":"themes/oranges/LICENSE","hash":"dbd3fa0b99b0acb027e8671cef34a6491e839758","modified":1759309152305},{"_id":"themes/oranges/README-zh.md","hash":"3e9d9e066d298790df1663ea8a9bc598eddb7bcd","modified":1759309152305},{"_id":"themes/oranges/_config.yml","hash":"3513aea76bbfd34c288d342416989b73f5fbc26d","modified":1759309152306},{"_id":"themes/oranges/languages/de.yml","hash":"ad90132d331b9c5684129f2f08ddeaff27e1a4da","modified":1759309152306},{"_id":"themes/oranges/languages/default.yml","hash":"c0493633b1d07ec130b24ac3fd27717ffcd30731","modified":1759309152306},{"_id":"themes/oranges/languages/es.yml","hash":"a75cef476c5838772690240d23b36f334bfe147b","modified":1759309152307},{"_id":"themes/oranges/languages/fr.yml","hash":"dfc3fc2513f6d8a50babdb2076d5bcaba52339f7","modified":1759309152307},{"_id":"themes/oranges/languages/ja.yml","hash":"ebd19d2b2329767530145bc0822d1f883783049d","modified":1759309152307},{"_id":"themes/oranges/languages/nl.yml","hash":"728a17f83f604f59b52cf3fb0ce1b2434e96bf4c","modified":1759309152308},{"_id":"themes/oranges/languages/pt.yml","hash":"6d924968447e2b4a31de9ac1329326db89ab5a27","modified":1759309152308},{"_id":"themes/oranges/languages/ko.yml","hash":"382182478ffa99f9a3c8d025bf7de1bb1cb06c45","modified":1759309152307},{"_id":"themes/oranges/languages/no.yml","hash":"2c2038d86738da9de2c4b3668c5e5928240380ce","modified":1759309152308},{"_id":"themes/oranges/languages/zh-CN.yml","hash":"133c650074fbf18e4f90bfacb34487cdbfcc9191","modified":1759309152310},{"_id":"themes/oranges/languages/ru.yml","hash":"509cb6b67625d5b46a38fab387d946c7a336cad4","modified":1759309152308},{"_id":"themes/oranges/languages/zh-TW.yml","hash":"28ef519d0eccca0aa6f7637204fcdd8286532e78","modified":1759309152310},{"_id":"themes/oranges/layout/archive.ejs","hash":"ac08ee5bdb60b625896d16540ab444be844cab2b","modified":1759309152312},{"_id":"themes/oranges/layout/category.ejs","hash":"b731a87eab749d49b699af990149dfc53374f4ea","modified":1759309152313},{"_id":"themes/oranges/layout/layout.ejs","hash":"a4ca62256a067680d703c0b76d9b71cdd9773f2d","modified":1759309152313},{"_id":"themes/oranges/layout/index.ejs","hash":"9e05d7e8ca4bf38a0c36b8c1db29465b7cc561c7","modified":1759309152313},{"_id":"themes/oranges/layout/post.ejs","hash":"2dabf35adc38c640209f33eede3b9c92a2a9c6d2","modified":1759309152313},{"_id":"themes/oranges/layout/tag.ejs","hash":"209dc1ab4bfdf8123fc18a0ceefcd96787b44596","modified":1759309152314},{"_id":"themes/oranges/source/css/base.css","hash":"d3d22be5257d03a61f619cbd192c5c7afa69b0a9","modified":1759309152317},{"_id":"themes/oranges/source/css/color-scheme.css","hash":"b4a413e41e29e25e6472a1df2e8df36601c20174","modified":1759309152317},{"_id":"themes/oranges/source/css/comments.css","hash":"09d81f9c8dd8f5a716b8622f25bcb414aeb00281","modified":1759309152317},{"_id":"themes/oranges/source/css/github-markdown.css","hash":"805b32a92605b78cdc625c8e9339f92e13dfa575","modified":1759309152318},{"_id":"themes/oranges/source/css/highlight.css","hash":"960cfd4a2f66434c36d1d72731bb2e57a3740345","modified":1759309152318},{"_id":"themes/oranges/source/css/main.styl","hash":"988a14ee1cdad166c7a9c9bd58d025d5594076c1","modified":1759309152319},{"_id":"themes/oranges/source/images/avatar.png","hash":"642ef58c0781d0f1885775ddd349ca7af65f24b0","modified":1759309152319},{"_id":"themes/oranges/source/images/favicon.png","hash":"21cf9c2e9c36c244a6542a3b6c220f13fa1a67cc","modified":1759309152319},{"_id":"themes/oranges/layout/_partial/backtotop.ejs","hash":"6b19f389755cbad990905c9284a13c70971e72b0","modified":1759309152310},{"_id":"themes/oranges/layout/_partial/catalog.ejs","hash":"fb871254561b2b6e41d1e0195fc96684c6edc527","modified":1759309152310},{"_id":"themes/oranges/layout/_partial/clipboard.ejs","hash":"7fd17533fb4c5dd7524a381934ffcd5c27b0b6aa","modified":1759309152310},{"_id":"themes/oranges/layout/_partial/colorscheme.ejs","hash":"993af90279088a2934a857b4c51c8487e845d3e7","modified":1759309152311},{"_id":"themes/oranges/layout/_partial/footer.ejs","hash":"7e491f26c9eec689133f688a341d0bd2d3314a09","modified":1759309152311},{"_id":"themes/oranges/layout/_partial/comments.ejs","hash":"3e80be3f094767c672d7f34dd8611843641d6d44","modified":1759309152311},{"_id":"themes/oranges/layout/_partial/header.ejs","hash":"929efe6f82f96ab26a4a501922036ec5085846e5","modified":1759309152311},{"_id":"themes/oranges/layout/_partial/mathjax.ejs","hash":"456981c33c943454f25fd025b76ec082f1dc3368","modified":1759309152312},{"_id":"themes/oranges/layout/_partial/navigation.ejs","hash":"449e17212e5bd98575a4c157a61cf8c801ef0e7b","modified":1759309152312},{"_id":"themes/oranges/layout/_partial/search.ejs","hash":"a6df7b553ff03b5f292571168aefe9e6dbba656a","modified":1759309152312},{"_id":"themes/oranges/layout/_partial/shares.ejs","hash":"5d50422f3949695cd28a525ef23536d632c271f7","modified":1759309152312},{"_id":"themes/oranges/source/js/activeNav.js","hash":"65150cda5900eab5dc4652f9698512bafb5833e3","modified":1759309152319},{"_id":"themes/oranges/source/js/backtotop.js","hash":"1193edfd3cb032a72ba1c100be83bd459a2f63ac","modified":1759309152319},{"_id":"themes/oranges/source/js/catalog.js","hash":"3c8215aaad1ef05323b74b5f135b0bad2a3385a6","modified":1759309152321},{"_id":"themes/oranges/source/js/codeCopy.js","hash":"fd4b24a2cd985d857f6ab51853e72b623ce8765a","modified":1759309152321},{"_id":"themes/oranges/source/js/colorscheme.js","hash":"8b5626c40874c6cd39ba0fdeb3f2f3439d85da7d","modified":1759309152321},{"_id":"themes/oranges/source/js/fancybox.js","hash":"ed4c22785ec2c0764792011be19258dce3995487","modified":1759309152321},{"_id":"themes/oranges/source/js/search.js","hash":"fbac709e9a6befddbf8b31fd571b072e3de27b73","modified":1759309152322},{"_id":"themes/oranges/source/js/shares.js","hash":"838daa82d612ce632762343dbf6153343d0036f8","modified":1759309152322},{"_id":"themes/oranges/source/plugins/clipboard.min.js","hash":"d62dcb0905e038e69ff24ab9eef9e3306d45535e","modified":1759309152323},{"_id":"themes/oranges/source/plugins/gitalk.css","hash":"4c0d5510ea487b0fe63e96464ab0b381565cc273","modified":1759309152323},{"_id":"themes/oranges/source/plugins/jquery.fancybox.min.css","hash":"2e6a66987dbc7a57bbfd2655bce166739b4ba426","modified":1759309152326},{"_id":"themes/oranges/source/plugins/waline.css","hash":"25364b45ca67bc573d18bd15e252db737cfa3c0d","modified":1759309152334},{"_id":"themes/oranges/source/css/figcaption/mac-block.css","hash":"db51c58260e441632734d9bc2d41be2aa31df7c1","modified":1759309152318},{"_id":"themes/oranges/source/css/_common/comments/index.styl","hash":"7085df46c9d80aa1ea1cd361d75dfb8815e2d3da","modified":1759309152314},{"_id":"themes/oranges/source/css/_common/comments/valine.styl","hash":"23ee39dc6bb081fcb424746d1cc0c9a8cfa43d81","modified":1759309152315},{"_id":"themes/oranges/source/css/_common/components/fancybox.styl","hash":"9cf143a4215d28f851e7dd47dfa613719f4756d0","modified":1759309152315},{"_id":"themes/oranges/source/css/_common/layout/footer.styl","hash":"c83b8b135e10327f6c9779b4708bb625adc6462c","modified":1759309152316},{"_id":"themes/oranges/source/css/_common/components/index.styl","hash":"6aa40f2cfe058c7b73dcde03586c71421725f842","modified":1759309152315},{"_id":"themes/oranges/source/css/_common/utils/index.styl","hash":"cf587cb1e8cb0cc6b47efa9944094e7558a15c92","modified":1759309152316},{"_id":"themes/oranges/source/css/_common/layout/index.styl","hash":"967a2fc81e5394c95b5172680d41c48c35942995","modified":1759309152316},{"_id":"themes/oranges/source/plugins/mathjax/output/chtml/fonts/woff-v2/MathJax_Main-Regular.woff","hash":"89d2c8d274693c5a6e250e96e2a2e26e25619079","modified":1759309152329},{"_id":"themes/oranges/source/plugins/mathjax/output/chtml/fonts/woff-v2/MathJax_Math-Italic.woff","hash":"91a4025dd3b18ca6bda63a215869773705435041","modified":1759309152329},{"_id":"themes/oranges/source/plugins/mathjax/output/chtml/fonts/woff-v2/MathJax_Size1-Regular.woff","hash":"9c98f9f022647eb802434947e062b569ccedd5f0","modified":1759309152330},{"_id":"themes/oranges/source/plugins/mathjax/output/chtml/fonts/woff-v2/MathJax_Zero.woff","hash":"6712cf0aa5c12edc1cbbca8a1732a9cde0854c48","modified":1759309152330},{"_id":"themes/oranges/source/plugins/jquery.fancybox.min.js","hash":"3154fd527a002788848d9fec61d522048890e516","modified":1759309152327},{"_id":"themes/oranges/source/plugins/jquery.min.js","hash":"0c3192b500a4fd550e483cf77a49806a5872185b","modified":1759309152328},{"_id":"themes/oranges/source/plugins/valine.min.js","hash":"c2f2b1b0346e28ceae19f4b3d174f033311aa060","modified":1759309152334},{"_id":"themes/oranges/source/plugins/waline.js","hash":"0f46a69ce82aefd07e445cb05ff6c941e83da9d1","modified":1759309152335},{"_id":"themes/oranges/source/plugins/waline.mjs","hash":"5ead58d3654d8618fc6929e862d03c787cbf21f7","modified":1759309152337},{"_id":"themes/oranges/source/plugins/gitalk.min.js","hash":"1df59d7e5481ac2917c7043b28883393675dcaf9","modified":1759309152326},{"_id":"themes/oranges/source/plugins/mathjax/tex-chtml.js","hash":"bef586271c8246d003509a68b8f11181d967847d","modified":1759309152333},{"_id":"source/categories/index.md","hash":"38d2be7a952f97accf54c5602249d9c37bc60e1d","modified":1759310139465},{"_id":"source/friends/index.md","hash":"cbb322d590a2039ddca88ac079cd39b53acfdee5","modified":1759309732431},{"_id":"source/tags/index.md","hash":"d823b6a50eaa13e0df9205cd74b1c91d7ab9de0f","modified":1759310200472},{"_id":"source/_posts/初始化配置CentOS7.md","hash":"705f3afb281ebc1d719daf5bbf31963027de786f","modified":1759312148850},{"_id":"source/img/Mysql.png","hash":"919d97b14fea86117221ed96aa6eb8c5940c01f8","modified":1753282776688},{"_id":"source/img/CentOS7.png","hash":"eed79d8c6c3525520341aa0eb102173b9982d4ad","modified":1753282776687},{"_id":"source/img/arch3.png","hash":"0263c03ebf3c75d8588f7239f0db11a832fc24fe","modified":1753282776689},{"_id":"source/img/arch1.png","hash":"4a882870d680e359d3eec1906548544e620734b6","modified":1753282776688},{"_id":"source/img/arch4.png","hash":"8429323b3f5aa96b9451eb013e2682443e946377","modified":1753282776689},{"_id":"source/img/arch2.png","hash":"8ca8da55faefb5209eec112fed43d4cca213f61d","modified":1753282776688},{"_id":"source/img/archlinux.jpg","hash":"e37b39b7ad88ad3e09503ed706029d64c62578d7","modified":1753282776690},{"_id":"source/img/network1.png","hash":"d634bf2a22c3cdc726a47eaf6257950317bd92a8","modified":1753282776691},{"_id":"source/img/kvm.png","hash":"a17528664a9f04187cd2a295b1da60624a63ae12","modified":1753282776691},{"_id":"source/img/network3.png","hash":"9145207a440e89e63a5719e6d3fda633dfc6ffe7","modified":1753282776692},{"_id":"source/img/network5.png","hash":"e1d436f2462fbd40c59a17c0f961c84cdce890a8","modified":1753282776693},{"_id":"source/img/network4.png","hash":"69d525d3def6d74b5061234643fc63f398a67a42","modified":1753282776692},{"_id":"source/img/phpipam.jpg","hash":"715b1163c9a78f30b935bfbf09cff30199b2fc84","modified":1753282776693},{"_id":"source/img/network6.png","hash":"ae9b7e36357c2d0f323793d71a42f108bf3ca2b7","modified":1753282776693},{"_id":"source/img/prometheus.png","hash":"20e2260ede833607430531cbd1cc6545c15d7b9f","modified":1753282776694},{"_id":"source/img/updatekuma.jpg","hash":"9592ebecd4706cef6af4c9ff860d1844719aeed8","modified":1755698819978},{"_id":"source/img/zcx.jpg","hash":"76d0b2c91c000832711105a2e3a39c7a849dd2ee","modified":1753282776695},{"_id":"source/img/kuma1.png","hash":"1b25864a0d6b92cc230255bf2936effc5b648f77","modified":1755698819976},{"_id":"source/img/wechat.jpg","hash":"bc78356a0c02e23f1e1e0d0556b765949bc1efbd","modified":1753282776695},{"_id":"source/img/deepseek+ollama.png","hash":"026d6dceee95d5aecb59a50405739ac6e50a9c92","modified":1753282776691},{"_id":"source/img/kuma2.png","hash":"cd8c35977cb495b96e4c82b247a367c19b214c82","modified":1755698819977},{"_id":"public/about/index.html","hash":"3ec45a50c695e381823c24919cf843cc7af42956","modified":1759392911403},{"_id":"public/categories/index.html","hash":"51814a5af5487993e5dcb3165f6e73e59d9c16bd","modified":1759392911403},{"_id":"public/friends/index.html","hash":"3dfc40764de69742d772308d831a038e723a37f5","modified":1759392911403},{"_id":"public/tags/index.html","hash":"538cc5bb382cdd8361c563c0df6a7e5be200370c","modified":1759392911403},{"_id":"public/2025/10/01/hello-world/index.html","hash":"ce6465dc124a8d4ac6869193c7dece75f6156d81","modified":1759311186929},{"_id":"public/2024/11/21/初始化配置CentOS7/index.html","hash":"4a7f845df4856fcc08e55b2ccb694106ff2be916","modified":1759312158776},{"_id":"public/archives/index.html","hash":"a8be4a978ed9bf8a0c599131acce0068b48da33a","modified":1759392911403},{"_id":"public/archives/2024/index.html","hash":"1584032d89d598232e5016b5bb274b15e841364b","modified":1759392911403},{"_id":"public/archives/2024/11/index.html","hash":"d38a0cbde02ed0ac79f976854ece9b5f4d7adc41","modified":1759392911403},{"_id":"public/archives/2025/index.html","hash":"ffa5489f0860c10d8ccd9e8bbe23695fae4b6146","modified":1759392911403},{"_id":"public/archives/2025/10/index.html","hash":"e90da70664518938e38e2b263afc2dacb503a13f","modified":1759311186929},{"_id":"public/categories/CentOS7/index.html","hash":"f77dbe5ac2c2a1d4228aa95f629d9cf68700cda5","modified":1759392911403},{"_id":"public/tags/CentOS7/index.html","hash":"19fda880e19b9ab07db0c8810f09f5dbf9476b2f","modified":1759392911403},{"_id":"public/index.html","hash":"6a7936f396cda69db48c12339d393aa4b7fdf732","modified":1759392911403},{"_id":"public/images/favicon.png","hash":"21cf9c2e9c36c244a6542a3b6c220f13fa1a67cc","modified":1759311186929},{"_id":"public/images/avatar.png","hash":"642ef58c0781d0f1885775ddd349ca7af65f24b0","modified":1759311186929},{"_id":"public/plugins/mathjax/output/chtml/fonts/woff-v2/MathJax_Size1-Regular.woff","hash":"9c98f9f022647eb802434947e062b569ccedd5f0","modified":1759311186929},{"_id":"public/plugins/mathjax/output/chtml/fonts/woff-v2/MathJax_Main-Regular.woff","hash":"89d2c8d274693c5a6e250e96e2a2e26e25619079","modified":1759311186929},{"_id":"public/plugins/mathjax/output/chtml/fonts/woff-v2/MathJax_Math-Italic.woff","hash":"91a4025dd3b18ca6bda63a215869773705435041","modified":1759311186929},{"_id":"public/plugins/mathjax/output/chtml/fonts/woff-v2/MathJax_Zero.woff","hash":"6712cf0aa5c12edc1cbbca8a1732a9cde0854c48","modified":1759311186929},{"_id":"public/img/CentOS7.png","hash":"eed79d8c6c3525520341aa0eb102173b9982d4ad","modified":1759311186929},{"_id":"public/img/Mysql.png","hash":"919d97b14fea86117221ed96aa6eb8c5940c01f8","modified":1759311186929},{"_id":"public/img/arch1.png","hash":"4a882870d680e359d3eec1906548544e620734b6","modified":1759311186929},{"_id":"public/img/arch3.png","hash":"0263c03ebf3c75d8588f7239f0db11a832fc24fe","modified":1759311186929},{"_id":"public/img/arch2.png","hash":"8ca8da55faefb5209eec112fed43d4cca213f61d","modified":1759311186929},{"_id":"public/img/arch4.png","hash":"8429323b3f5aa96b9451eb013e2682443e946377","modified":1759311186929},{"_id":"public/img/archlinux.jpg","hash":"e37b39b7ad88ad3e09503ed706029d64c62578d7","modified":1759311186929},{"_id":"public/img/kvm.png","hash":"a17528664a9f04187cd2a295b1da60624a63ae12","modified":1759311186929},{"_id":"public/img/network1.png","hash":"d634bf2a22c3cdc726a47eaf6257950317bd92a8","modified":1759311186929},{"_id":"public/img/network3.png","hash":"9145207a440e89e63a5719e6d3fda633dfc6ffe7","modified":1759311186929},{"_id":"public/img/network4.png","hash":"69d525d3def6d74b5061234643fc63f398a67a42","modified":1759311186929},{"_id":"public/img/network5.png","hash":"e1d436f2462fbd40c59a17c0f961c84cdce890a8","modified":1759311186929},{"_id":"public/img/network6.png","hash":"ae9b7e36357c2d0f323793d71a42f108bf3ca2b7","modified":1759311186929},{"_id":"public/img/phpipam.jpg","hash":"715b1163c9a78f30b935bfbf09cff30199b2fc84","modified":1759311186929},{"_id":"public/img/prometheus.png","hash":"20e2260ede833607430531cbd1cc6545c15d7b9f","modified":1759311186929},{"_id":"public/img/updatekuma.jpg","hash":"9592ebecd4706cef6af4c9ff860d1844719aeed8","modified":1759311186929},{"_id":"public/img/zcx.jpg","hash":"76d0b2c91c000832711105a2e3a39c7a849dd2ee","modified":1759311186929},{"_id":"public/css/style.css","hash":"dafe68f1ca4e6664b95f2fecc4ef04addf473a2a","modified":1759311186929},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1759311186929},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1759311186929},{"_id":"public/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1759311186929},{"_id":"public/css/color-scheme.css","hash":"ec1e624f750e8caf5d463437b06bd1f705173467","modified":1759311186929},{"_id":"public/css/base.css","hash":"6fc8a265777c40336678c9b5cc033f7399b55459","modified":1759311186929},{"_id":"public/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1759311186929},{"_id":"public/css/comments.css","hash":"b482de7b2e284ea0750aba0c0f85aca3d42c0af8","modified":1759311186929},{"_id":"public/css/highlight.css","hash":"7ebfcbb58e87dd0436ab9538641eb6577fa7a8f8","modified":1759311186929},{"_id":"public/css/github-markdown.css","hash":"0dc8e66ad2121924445150eb59a5f6091662f6f7","modified":1759311186929},{"_id":"public/js/activeNav.js","hash":"06aa9a2985f1d328f0b7fe69a28bee31f16ebb1a","modified":1759311186929},{"_id":"public/css/main.css","hash":"bc42d2e3c1c705a20b96fa37313d8025c52c091e","modified":1759311186929},{"_id":"public/js/backtotop.js","hash":"0be1bd072a7a34ce50d72376cad722023e772e6d","modified":1759311186929},{"_id":"public/js/codeCopy.js","hash":"3fab7bf3e0d22326440af1963e83448f8b8b4ab6","modified":1759311186929},{"_id":"public/js/catalog.js","hash":"3f895778af2029bff0cd588eeca0a8b64845065d","modified":1759311186929},{"_id":"public/js/colorscheme.js","hash":"1290f902b5651bf4d66187b5695ec90dc3ec70a8","modified":1759311186929},{"_id":"public/js/fancybox.js","hash":"b217d56f8db94498d7e272d164abac6ab1c07ddd","modified":1759311186929},{"_id":"public/js/search.js","hash":"374efc788268330edd7ca0c91a43e75f7ec4149c","modified":1759311186929},{"_id":"public/plugins/clipboard.min.js","hash":"9a7cb405f9beed005891587d41f76a0720893ffc","modified":1759311186929},{"_id":"public/js/shares.js","hash":"aa0a3dd5c24efe7945351f7ac22d0f84a93e350c","modified":1759311186929},{"_id":"public/plugins/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1759311186929},{"_id":"public/plugins/jquery.fancybox.min.css","hash":"2e6a66987dbc7a57bbfd2655bce166739b4ba426","modified":1759311186929},{"_id":"public/plugins/waline.css","hash":"ba52d91d4685f8e07423a5651fea8a8f5151f457","modified":1759311186929},{"_id":"public/plugins/jquery.fancybox.min.js","hash":"b2b093d8f5ffeee250c8d0d3a2285a213318e4ea","modified":1759311186929},{"_id":"public/plugins/jquery.min.js","hash":"0dc32db4aa9c5f03f3b38c47d883dbd4fed13aae","modified":1759311186929},{"_id":"public/css/figcaption/mac-block.css","hash":"d923323312d78ecb40cb60c093dba36b0127db68","modified":1759311186929},{"_id":"public/plugins/valine.min.js","hash":"d081a412c63411a75a3a880ddece65335d1c3ee8","modified":1759311186929},{"_id":"public/plugins/waline.js","hash":"c26a8b22924813d883fb23e232063dce9b4e01c3","modified":1759311186929},{"_id":"public/img/kuma1.png","hash":"1b25864a0d6b92cc230255bf2936effc5b648f77","modified":1759311186929},{"_id":"public/img/wechat.jpg","hash":"bc78356a0c02e23f1e1e0d0556b765949bc1efbd","modified":1759311186929},{"_id":"public/plugins/waline.mjs","hash":"5ead58d3654d8618fc6929e862d03c787cbf21f7","modified":1759311186929},{"_id":"public/plugins/gitalk.min.js","hash":"564fc7c731d05fa70d71ef853a2c8cc7725739e2","modified":1759311186929},{"_id":"public/img/deepseek+ollama.png","hash":"026d6dceee95d5aecb59a50405739ac6e50a9c92","modified":1759311186929},{"_id":"public/img/kuma2.png","hash":"cd8c35977cb495b96e4c82b247a367c19b214c82","modified":1759311186929},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1759311186929},{"_id":"public/plugins/mathjax/tex-chtml.js","hash":"bef586271c8246d003509a68b8f11181d967847d","modified":1759311186929},{"_id":"source/_posts/CentOS7初始化与优化配置指南.md","hash":"281a2b7e85250eb290e0f0b1b2c21f2cd7af5cdb","modified":1759312286498},{"_id":"source/_posts/CentOS7配置静态IP.md","hash":"7a4d897b534fba16805afba2d7287038c98811a3","modified":1759392177937},{"_id":"public/2024/12/02/CentOS7配置静态IP/index.html","hash":"56f5f85cd6f4719e2ef38f0891df07d4bad659e2","modified":1759392911403},{"_id":"public/2024/11/21/CentOS7初始化与优化配置指南/index.html","hash":"8c166692fba75a468ebf843ccc44fa1d3c3bc73b","modified":1759312771159},{"_id":"public/archives/2024/12/index.html","hash":"404b56e487bef7d0fff556a556a5ff348f182753","modified":1759392911403},{"_id":"source/_posts/CentOS7离线升级内核.md","hash":"8eac8e774aa08cf23e19248e9ce537b40dbd9864","modified":1759392175589},{"_id":"public/2025/09/01/CentOS7离线升级内核/index.html","hash":"58fb091f766bf82b880d6284809440df20941f18","modified":1759392911403},{"_id":"public/archives/2025/09/index.html","hash":"5672b60fdf339232ee9b6e3092ab728d4201b9da","modified":1759392911403},{"_id":"source/_posts/CentOS7初始化与优化配置.md","hash":"57c98436ad1d9c3dc57fa914249643187c030031","modified":1759392168371},{"_id":"public/2024/11/21/CentOS7初始化与优化配置/index.html","hash":"85f4f343fe54c17e08bd7c2a9fee2dce86fc712f","modified":1759392911403},{"_id":"source/_posts/ArchLinux安装配置.md","hash":"fd3d12b633b293a2ce65d6c60eae2203d867f3d1","modified":1759392171554},{"_id":"public/2024/11/26/ArchLinux安装配置/index.html","hash":"1cc7fc24d211be005ca8a10ae3a2472e7583494c","modified":1759392911403},{"_id":"public/categories/ArchLinux/index.html","hash":"02c70a266ad73a1b832f81b520b9b4c656d6c8ff","modified":1759392911403},{"_id":"public/tags/ArchLinux/index.html","hash":"8080fb6d942a28bde9b28e5b5c12a29bcb2ae783","modified":1759392911403},{"_id":"source/_posts/Nginx.md","hash":"7bf0982aed509f93e5731c7f10002624aaa7295f","modified":1759392187553},{"_id":"public/2025/09/01/Nginx/index.html","hash":"1c21eeea8bb9cc57f069c61b190fdd44b502282d","modified":1759392911403},{"_id":"public/categories/Nginx/index.html","hash":"45eefc3ea6b0537d4b60547177cfbc3b8975f702","modified":1759392911403},{"_id":"public/tags/Nginx/index.html","hash":"aa34db0457fc83cdc883b888cfb758f6121e082e","modified":1759392911403},{"_id":"source/_posts/Phpipam.md","hash":"8a5dc917c45f196835705b8c6224d1a5c5452c24","modified":1759392227993},{"_id":"source/_posts/Uptime-Kuma.md","hash":"566e585a68e6d508322f992dd1e2b2af109d4dc5","modified":1759392232459},{"_id":"public/2025/08/19/Uptime-Kuma/index.html","hash":"490e1b9121cbdd99ec36678663f7b914fa3dd2e4","modified":1759392911403},{"_id":"public/2025/07/23/Phpipam/index.html","hash":"fb173f93711984b2d37e9f9bc2d5af49fd80b6b3","modified":1759392911403},{"_id":"public/archives/2025/07/index.html","hash":"7a80a7d7ba8bff2d9335c8037745532d65cc48f0","modified":1759392911403},{"_id":"public/archives/2025/08/index.html","hash":"0c8b673a16f12396085751c2b654c0750131e74b","modified":1759392911403},{"_id":"public/categories/phpipam/index.html","hash":"777e00a8979e6842f1872a73a3a6c6f1c8f353fa","modified":1759392911403},{"_id":"public/categories/Uptime-Kuma/index.html","hash":"9ff62585deb1073c5c3fbf97dd07ece26475fef1","modified":1759392911403},{"_id":"public/tags/phpipam/index.html","hash":"a1dacb4b6b24bb12e039fad84b3f007a0fdba978","modified":1759392911403},{"_id":"public/tags/Uptime-Kuma/index.html","hash":"6bc0aed87fffb1bc8b75584fe9605b9c29a11cdf","modified":1759392911403},{"_id":"source/_posts/KVM.md","hash":"5dc8e365c438c70c0f37194e721140c0453031cf","modified":1759392161085},{"_id":"source/_posts/Mysql.md","hash":"06ba57040b63de6b672791b6dfad694289c43fc6","modified":1759392183130},{"_id":"source/img/zcxx0322.jpg","hash":"3754cb11fcfc5e11b8a41d4ef83d8942f50948e1","modified":1759392405418},{"_id":"public/2025/03/12/KVM/index.html","hash":"7488b9d6efcdfdbf24dce4204a69db29563e3d5c","modified":1759392911403},{"_id":"public/2025/03/14/Mysql/index.html","hash":"ede2656de86328db6e159b6ca77feb512c9f02d4","modified":1759392911403},{"_id":"public/archives/2025/03/index.html","hash":"07acdfcfbd52704e47275bf593dc4980d3258493","modified":1759392911403},{"_id":"public/categories/KVM/index.html","hash":"6ab1d8b123fbaf3e203c1d860b357b10eecba6da","modified":1759392911403},{"_id":"public/categories/Mysql/index.html","hash":"c80104c99311198bb7ad18c2b90a27dea3f47e7c","modified":1759392911403},{"_id":"public/tags/Mysql/index.html","hash":"4f11943e5d1d3ac55398aa8586ae9c4a36d093e6","modified":1759392911403},{"_id":"public/tags/KVM/index.html","hash":"59b71a96ef5e558e1e7cbd8235533ab8941fd5a9","modified":1759392911403},{"_id":"public/img/zcxx0322.jpg","hash":"3754cb11fcfc5e11b8a41d4ef83d8942f50948e1","modified":1759392516732},{"_id":"source/img/icon.png","hash":"4c629263698c4e149a72b01615ad990105c9b71f","modified":1759392790061},{"_id":"source/img/zcx.png","hash":"76d0b2c91c000832711105a2e3a39c7a849dd2ee","modified":1753282776695},{"_id":"source/img/zcxx0322.png","hash":"3754cb11fcfc5e11b8a41d4ef83d8942f50948e1","modified":1759392405418},{"_id":"public/img/icon.png","hash":"4c629263698c4e149a72b01615ad990105c9b71f","modified":1759392867639},{"_id":"public/img/zcx.png","hash":"76d0b2c91c000832711105a2e3a39c7a849dd2ee","modified":1759392867639},{"_id":"public/img/zcxx0322.png","hash":"3754cb11fcfc5e11b8a41d4ef83d8942f50948e1","modified":1759392867639}],"Category":[{"name":"CentOS7","_id":"cmg7sgfys00010wj8af214822"},{"name":"ArchLinux","_id":"cmg94bm7900015kj8equt0p3v"},{"name":"Nginx","_id":"cmg94du2y000148j8bd6525nb"},{"name":"phpipam","_id":"cmg94h9ej0001r8j882jd44ot"},{"name":"Uptime-Kuma","_id":"cmg94h9el0006r8j8ht1l785d"},{"name":"KVM","_id":"cmg94vmft0001j4j8a5ro59xa"},{"name":"Mysql","_id":"cmg94vmfu0004j4j8fj8m0a5v"}],"Data":[],"Page":[{"title":"about","date":"2025-10-01T09:02:54.000Z","type":"about","categories":null,"tags":null,"_content":"# 嘿！这儿是 Zcxx0322的博客\n\n一个普通的技术爱好者，在这里记录一些不普通的想法。\n\n## 我在这里做什么？\n\n- ✍️ 写点有用的：分享关于运维和开发的笔记和心得。。\n\n## 找到我\n\n欢迎浏览我的Github仓库：\n- 💻 GitHub: [Zcxx0322](https://github.com/Zcxx0322)\n---","source":"about/index.md","raw":"---\ntitle: about\ndate: 2025-10-01 17:02:54\ntype: \"about\"\ncategories:\ntags:\n---\n# 嘿！这儿是 Zcxx0322的博客\n\n一个普通的技术爱好者，在这里记录一些不普通的想法。\n\n## 我在这里做什么？\n\n- ✍️ 写点有用的：分享关于运维和开发的笔记和心得。。\n\n## 找到我\n\n欢迎浏览我的Github仓库：\n- 💻 GitHub: [Zcxx0322](https://github.com/Zcxx0322)\n---","updated":"2025-10-02T07:36:25.856Z","path":"about/index.html","_id":"cmg7reek70000g4j8ex5d79ed","comments":1,"layout":"page","content":"<h1 id=\"嘿！这儿是-Zcxx0322的博客\"><a href=\"#嘿！这儿是-Zcxx0322的博客\" class=\"headerlink\" title=\"嘿！这儿是 Zcxx0322的博客\"></a>嘿！这儿是 Zcxx0322的博客</h1><p>一个普通的技术爱好者，在这里记录一些不普通的想法。</p>\n<h2 id=\"我在这里做什么？\"><a href=\"#我在这里做什么？\" class=\"headerlink\" title=\"我在这里做什么？\"></a>我在这里做什么？</h2><ul>\n<li>✍️ 写点有用的：分享关于运维和开发的笔记和心得。。</li>\n</ul>\n<h2 id=\"找到我\"><a href=\"#找到我\" class=\"headerlink\" title=\"找到我\"></a>找到我</h2><h2 id=\"欢迎浏览我的Github仓库：-💻-GitHub-Zcxx0322\"><a href=\"#欢迎浏览我的Github仓库：-💻-GitHub-Zcxx0322\" class=\"headerlink\" title=\"欢迎浏览我的Github仓库：- 💻 GitHub: Zcxx0322\"></a>欢迎浏览我的Github仓库：<br>- 💻 GitHub: <a href=\"https://github.com/Zcxx0322\">Zcxx0322</a></h2>","excerpt":"","more":"<h1 id=\"嘿！这儿是-Zcxx0322的博客\"><a href=\"#嘿！这儿是-Zcxx0322的博客\" class=\"headerlink\" title=\"嘿！这儿是 Zcxx0322的博客\"></a>嘿！这儿是 Zcxx0322的博客</h1><p>一个普通的技术爱好者，在这里记录一些不普通的想法。</p>\n<h2 id=\"我在这里做什么？\"><a href=\"#我在这里做什么？\" class=\"headerlink\" title=\"我在这里做什么？\"></a>我在这里做什么？</h2><ul>\n<li>✍️ 写点有用的：分享关于运维和开发的笔记和心得。。</li>\n</ul>\n<h2 id=\"找到我\"><a href=\"#找到我\" class=\"headerlink\" title=\"找到我\"></a>找到我</h2><h2 id=\"欢迎浏览我的Github仓库：-💻-GitHub-Zcxx0322\"><a href=\"#欢迎浏览我的Github仓库：-💻-GitHub-Zcxx0322\" class=\"headerlink\" title=\"欢迎浏览我的Github仓库：- 💻 GitHub: Zcxx0322\"></a>欢迎浏览我的Github仓库：<br>- 💻 GitHub: <a href=\"https://github.com/Zcxx0322\">Zcxx0322</a></h2>"},{"title":"categories","date":"2025-10-01T09:05:00.000Z","type":"categories","categories":null,"tags":null,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2025-10-01 17:05:00\ntype: \"categories\"\ncategories:\ntags:\n---\n","updated":"2025-10-01T09:15:39.465Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cmg7rupoy0000h8j84niwhzk0","content":"","excerpt":"","more":""},{"title":"friends","date":"2025-10-01T09:04:47.000Z","type":"friends","categories":null,"tags":null,"_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2025-10-01 17:04:47\ntype: \"friends\"\ncategories:\ntags:\n---\n","updated":"2025-10-01T09:08:52.431Z","path":"friends/index.html","comments":1,"layout":"page","_id":"cmg7rupp00001h8j89ub5acu8","content":"","excerpt":"","more":""},{"title":"tags","date":"2025-10-01T09:04:18.000Z","type":"tags","categories":null,"tags":null,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2025-10-01 17:04:18\ntype: \"tags\"\ncategories:\ntags:\n---\n","updated":"2025-10-01T09:16:40.472Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cmg7rvoqf0000dkj84e4xfgov","content":"","excerpt":"","more":""}],"Post":[{"title":"CentOS7配置静态IP","date":"2024-12-02T03:40:27.000Z","_content":"\n------\n\n# 1. 环境准备\n\n1. **Oracle VM VirtualBox**\n    下载地址：https://www.virtualbox.org/wiki/Downloads\n2. **CentOS 7.9**\n    下载地址：https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/?spm=a2c6h.25603864.0.0.3dccf5adbnhdJY\n\n------\n\n# 2. 调整网络模式\n\n*设置 → 网络 → 网卡1*\n\n- 连接方式：桥接网卡\n- 名称：本机上网使用的网卡名称\n\n![image-20241205104936386](/img/network1.png)\n\n------\n\n# 3. 网卡自启配置（可选）\n\n<font color='red'>如果在安装系统界面已经连接了网络，这一步可以跳过！</font>\n\n## 3.1. 检查网卡名称\n\n```bash\nnmcli device status\n```\n\n## 3.2. 配置网卡为开机自启\n\n假设网卡名称为 `enp0s3`（请根据实际情况替换）\n\n```bash\nnmcli connection modify enp0s3 connection.autoconnect yes\n```\n\n## 3.3. 验证网卡配置\n\n```bash\nnmcli connection show enp0s3 | grep autoconnect\n```\n\n**输出示例**\n\n```cmd\nconnection.autoconnect:                 yes\nconnection.autoconnect-priority:        0\nconnection.autoconnect-retries:         -1 (default)\nconnection.autoconnect-slaves:          -1 (default)\n```\n\n------\n\n# 4. 配置静态 IP\n\n## 4.1. 方法一：修改网卡配置文件\n\n### 4.1.1. 查看宿主机 IP\n\n```bash\nipconfig\n```\n\n![image-20241205113859194](/img/network3.png)\n\n<font color='red'>可以看到宿主机的网关为192.168.148.20，请记住它，待会儿要用！！！！！！！</font>\n\n### 4.1.2. 编辑配置文件\n\n```bash\nvi /etc/sysconfig/network-scripts/ifcfg-enp0s3\n```\n\n- 修改<font color='red'>BOOTPROTO=static</font>，既然要配置静态IP，那肯定要关闭DHCP嘛对吧！\n\n  添加<font color='red'>IPADDR=192.168.148.100</font>，IP不用多说吧，**IP地址必须与网关在同一个网段**，否则通信无法正常进行。\n\n  添加<font color='red'>GATEWAY=192.168.148.20</font>，来源于宿主机的网关。\n\n  添加<font color='red'>NETMASK=255.255.255.0</font>\n\n  添加<font color='red'>DNS1=8.8.8.8</font>\n\n  添加<font color='red'>DNS2=8.8.4.4</font>\n\n![image-20241205114551520](/img/network4.png)\n\n### 4.1.3. 重启服务\n\n```bash\nsystemctl restart network\n```\n\n### 4.1.4. 验证网络连通性\n\n```bash\nping www.baidu.com\n```\n\n------\n\n## 4.2. 方法二：使用 nmcli 工具\n\n### 4.2.1. 查看网卡名称\n\n```bash\nnmcli device status\n```\n\n**输出示例**\n\n```cmd\nDEVICE  TYPE      STATE      CONNECTION\nenp0s3  ethernet  connected  enp0s3\nlo      loopback  unmanaged  --\n```\n\n### 4.2.2. 配置静态 IP\n\n```bash\nnmcli connection modify enp0s3 ipv4.addresses 192.168.148.100/24\nnmcli connection modify enp0s3 ipv4.gateway 192.168.148.20\nnmcli connection modify enp0s3 ipv4.dns \"8.8.8.8,8.8.4.4\"\nnmcli connection modify enp0s3 ipv4.method manual\nnmcli connection up enp0s3\n```\n\n### 4.2.3. 验证配置\n\n```bash\nnmcli -f ipv4.addresses,ipv4.gateway,ipv4.dns connection show enp0s3\n```\n\n**输出示例**\n\n```cmd\nipv4.addresses:                         192.168.148.100/24\nipv4.gateway:                           192.168.148.20\nipv4.dns:                               8.8.8.8,8.8.4.4\n```\n\n### 4.2.4. 验证网络连通性\n\n```bash\nping www.baidu.com\n```\n\n### 4.2.5. 恢复 DHCP 模式（可选）\n\n```bash\nnmcli connection modify enp0s3 ipv4.method auto\nnmcli connection up enp0s3\n```\n\n### 4.2.6. 删除 nmcli 静态配置（可选）\n\n```bash\nnmcli connection delete enp0s3\nnmcli device connect enp0s3\n```\n\n------\n\n## 4.3. 方法三：使用 nmtui 工具\n\n### 4.3.1. 进入交互界面\n\n```bash\nnmtui\n```\n\n按照提示进入网卡配置界面\n\n![image-20241207104541968](/img/network5.png)\n\n### 4.3.2. 配置步骤\n\n1. IPv4 CONFIGURATION `<Automatic>` ------->>> <font color='red'>IPv4 CONFIGURATION` <Manual>`</font>\n2. <font color='red'>` show`</font>\n3. <font color='red'>`[X] Automatically connect`</font>\n4. <font color='red'>` <OK>`</font>\n5. <font color='red'>` <back>`</font>\n6. <font color='red'>` <quit>`</font>\n\n![image-20241207105524062](/img/network6.png)\n\n### 4.3.3. 重启系统\n\n```bash\nreboot\n```\n\n### 4.3.4. 验证 IP\n\n```bash\nip a\n```\n\n### 4.3.5. 验证网络连通性\n\n```bash\nping www.baidu.com\n```\n\n------\n\n","source":"_posts/CentOS7配置静态IP.md","raw":"---\ntitle: CentOS7配置静态IP\ntags: CentOS7\ncategories: CentOS7\ndate: 2024-12-02 11:40:27\n---\n\n------\n\n# 1. 环境准备\n\n1. **Oracle VM VirtualBox**\n    下载地址：https://www.virtualbox.org/wiki/Downloads\n2. **CentOS 7.9**\n    下载地址：https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/?spm=a2c6h.25603864.0.0.3dccf5adbnhdJY\n\n------\n\n# 2. 调整网络模式\n\n*设置 → 网络 → 网卡1*\n\n- 连接方式：桥接网卡\n- 名称：本机上网使用的网卡名称\n\n![image-20241205104936386](/img/network1.png)\n\n------\n\n# 3. 网卡自启配置（可选）\n\n<font color='red'>如果在安装系统界面已经连接了网络，这一步可以跳过！</font>\n\n## 3.1. 检查网卡名称\n\n```bash\nnmcli device status\n```\n\n## 3.2. 配置网卡为开机自启\n\n假设网卡名称为 `enp0s3`（请根据实际情况替换）\n\n```bash\nnmcli connection modify enp0s3 connection.autoconnect yes\n```\n\n## 3.3. 验证网卡配置\n\n```bash\nnmcli connection show enp0s3 | grep autoconnect\n```\n\n**输出示例**\n\n```cmd\nconnection.autoconnect:                 yes\nconnection.autoconnect-priority:        0\nconnection.autoconnect-retries:         -1 (default)\nconnection.autoconnect-slaves:          -1 (default)\n```\n\n------\n\n# 4. 配置静态 IP\n\n## 4.1. 方法一：修改网卡配置文件\n\n### 4.1.1. 查看宿主机 IP\n\n```bash\nipconfig\n```\n\n![image-20241205113859194](/img/network3.png)\n\n<font color='red'>可以看到宿主机的网关为192.168.148.20，请记住它，待会儿要用！！！！！！！</font>\n\n### 4.1.2. 编辑配置文件\n\n```bash\nvi /etc/sysconfig/network-scripts/ifcfg-enp0s3\n```\n\n- 修改<font color='red'>BOOTPROTO=static</font>，既然要配置静态IP，那肯定要关闭DHCP嘛对吧！\n\n  添加<font color='red'>IPADDR=192.168.148.100</font>，IP不用多说吧，**IP地址必须与网关在同一个网段**，否则通信无法正常进行。\n\n  添加<font color='red'>GATEWAY=192.168.148.20</font>，来源于宿主机的网关。\n\n  添加<font color='red'>NETMASK=255.255.255.0</font>\n\n  添加<font color='red'>DNS1=8.8.8.8</font>\n\n  添加<font color='red'>DNS2=8.8.4.4</font>\n\n![image-20241205114551520](/img/network4.png)\n\n### 4.1.3. 重启服务\n\n```bash\nsystemctl restart network\n```\n\n### 4.1.4. 验证网络连通性\n\n```bash\nping www.baidu.com\n```\n\n------\n\n## 4.2. 方法二：使用 nmcli 工具\n\n### 4.2.1. 查看网卡名称\n\n```bash\nnmcli device status\n```\n\n**输出示例**\n\n```cmd\nDEVICE  TYPE      STATE      CONNECTION\nenp0s3  ethernet  connected  enp0s3\nlo      loopback  unmanaged  --\n```\n\n### 4.2.2. 配置静态 IP\n\n```bash\nnmcli connection modify enp0s3 ipv4.addresses 192.168.148.100/24\nnmcli connection modify enp0s3 ipv4.gateway 192.168.148.20\nnmcli connection modify enp0s3 ipv4.dns \"8.8.8.8,8.8.4.4\"\nnmcli connection modify enp0s3 ipv4.method manual\nnmcli connection up enp0s3\n```\n\n### 4.2.3. 验证配置\n\n```bash\nnmcli -f ipv4.addresses,ipv4.gateway,ipv4.dns connection show enp0s3\n```\n\n**输出示例**\n\n```cmd\nipv4.addresses:                         192.168.148.100/24\nipv4.gateway:                           192.168.148.20\nipv4.dns:                               8.8.8.8,8.8.4.4\n```\n\n### 4.2.4. 验证网络连通性\n\n```bash\nping www.baidu.com\n```\n\n### 4.2.5. 恢复 DHCP 模式（可选）\n\n```bash\nnmcli connection modify enp0s3 ipv4.method auto\nnmcli connection up enp0s3\n```\n\n### 4.2.6. 删除 nmcli 静态配置（可选）\n\n```bash\nnmcli connection delete enp0s3\nnmcli device connect enp0s3\n```\n\n------\n\n## 4.3. 方法三：使用 nmtui 工具\n\n### 4.3.1. 进入交互界面\n\n```bash\nnmtui\n```\n\n按照提示进入网卡配置界面\n\n![image-20241207104541968](/img/network5.png)\n\n### 4.3.2. 配置步骤\n\n1. IPv4 CONFIGURATION `<Automatic>` ------->>> <font color='red'>IPv4 CONFIGURATION` <Manual>`</font>\n2. <font color='red'>` show`</font>\n3. <font color='red'>`[X] Automatically connect`</font>\n4. <font color='red'>` <OK>`</font>\n5. <font color='red'>` <back>`</font>\n6. <font color='red'>` <quit>`</font>\n\n![image-20241207105524062](/img/network6.png)\n\n### 4.3.3. 重启系统\n\n```bash\nreboot\n```\n\n### 4.3.4. 验证 IP\n\n```bash\nip a\n```\n\n### 4.3.5. 验证网络连通性\n\n```bash\nping www.baidu.com\n```\n\n------\n\n","slug":"CentOS7配置静态IP","published":1,"updated":"2025-10-02T08:02:57.937Z","_id":"cmg7teed30000g8j8dwp085vx","comments":1,"layout":"post","photos":[],"content":"<hr>\n<h1 id=\"1-环境准备\"><a href=\"#1-环境准备\" class=\"headerlink\" title=\"1. 环境准备\"></a>1. 环境准备</h1><ol>\n<li><strong>Oracle VM VirtualBox</strong><br> 下载地址：<a href=\"https://www.virtualbox.org/wiki/Downloads\">https://www.virtualbox.org/wiki/Downloads</a></li>\n<li><strong>CentOS 7.9</strong><br> 下载地址：<a href=\"https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/?spm=a2c6h.25603864.0.0.3dccf5adbnhdJY\">https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/?spm=a2c6h.25603864.0.0.3dccf5adbnhdJY</a></li>\n</ol>\n<hr>\n<h1 id=\"2-调整网络模式\"><a href=\"#2-调整网络模式\" class=\"headerlink\" title=\"2. 调整网络模式\"></a>2. 调整网络模式</h1><p><em>设置 → 网络 → 网卡1</em></p>\n<ul>\n<li>连接方式：桥接网卡</li>\n<li>名称：本机上网使用的网卡名称</li>\n</ul>\n<p><img src=\"/img/network1.png\" alt=\"image-20241205104936386\"></p>\n<hr>\n<h1 id=\"3-网卡自启配置（可选）\"><a href=\"#3-网卡自启配置（可选）\" class=\"headerlink\" title=\"3. 网卡自启配置（可选）\"></a>3. 网卡自启配置（可选）</h1><p><font color='red'>如果在安装系统界面已经连接了网络，这一步可以跳过！</font></p>\n<h2 id=\"3-1-检查网卡名称\"><a href=\"#3-1-检查网卡名称\" class=\"headerlink\" title=\"3.1. 检查网卡名称\"></a>3.1. 检查网卡名称</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmcli device status</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-2-配置网卡为开机自启\"><a href=\"#3-2-配置网卡为开机自启\" class=\"headerlink\" title=\"3.2. 配置网卡为开机自启\"></a>3.2. 配置网卡为开机自启</h2><p>假设网卡名称为 <code>enp0s3</code>（请根据实际情况替换）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmcli connection modify enp0s3 connection.autoconnect <span class=\"built_in\">yes</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-3-验证网卡配置\"><a href=\"#3-3-验证网卡配置\" class=\"headerlink\" title=\"3.3. 验证网卡配置\"></a>3.3. 验证网卡配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmcli connection show enp0s3 | grep autoconnect</span><br></pre></td></tr></table></figure>\n\n<p><strong>输出示例</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">connection.autoconnect:                 <span class=\"title\">yes</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">connection.autoconnect</span>-<span class=\"title\">priority</span>:        0</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">connection.autoconnect</span>-<span class=\"title\">retries</span>:         -1 (<span class=\"title\">default</span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">connection.autoconnect</span>-<span class=\"title\">slaves</span>:          -1 (<span class=\"title\">default</span>)</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"4-配置静态-IP\"><a href=\"#4-配置静态-IP\" class=\"headerlink\" title=\"4. 配置静态 IP\"></a>4. 配置静态 IP</h1><h2 id=\"4-1-方法一：修改网卡配置文件\"><a href=\"#4-1-方法一：修改网卡配置文件\" class=\"headerlink\" title=\"4.1. 方法一：修改网卡配置文件\"></a>4.1. 方法一：修改网卡配置文件</h2><h3 id=\"4-1-1-查看宿主机-IP\"><a href=\"#4-1-1-查看宿主机-IP\" class=\"headerlink\" title=\"4.1.1. 查看宿主机 IP\"></a>4.1.1. 查看宿主机 IP</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ipconfig</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/network3.png\" alt=\"image-20241205113859194\"></p>\n<p><font color='red'>可以看到宿主机的网关为192.168.148.20，请记住它，待会儿要用！！！！！！！</font></p>\n<h3 id=\"4-1-2-编辑配置文件\"><a href=\"#4-1-2-编辑配置文件\" class=\"headerlink\" title=\"4.1.2. 编辑配置文件\"></a>4.1.2. 编辑配置文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-enp0s3</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>修改<font color='red'>BOOTPROTO&#x3D;static</font>，既然要配置静态IP，那肯定要关闭DHCP嘛对吧！</p>\n<p>添加<font color='red'>IPADDR&#x3D;192.168.148.100</font>，IP不用多说吧，<strong>IP地址必须与网关在同一个网段</strong>，否则通信无法正常进行。</p>\n<p>添加<font color='red'>GATEWAY&#x3D;192.168.148.20</font>，来源于宿主机的网关。</p>\n<p>添加<font color='red'>NETMASK&#x3D;255.255.255.0</font></p>\n<p>添加<font color='red'>DNS1&#x3D;8.8.8.8</font></p>\n<p>添加<font color='red'>DNS2&#x3D;8.8.4.4</font></p>\n</li>\n</ul>\n<p><img src=\"/img/network4.png\" alt=\"image-20241205114551520\"></p>\n<h3 id=\"4-1-3-重启服务\"><a href=\"#4-1-3-重启服务\" class=\"headerlink\" title=\"4.1.3. 重启服务\"></a>4.1.3. 重启服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart network</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-1-4-验证网络连通性\"><a href=\"#4-1-4-验证网络连通性\" class=\"headerlink\" title=\"4.1.4. 验证网络连通性\"></a>4.1.4. 验证网络连通性</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ping www.baidu.com</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"4-2-方法二：使用-nmcli-工具\"><a href=\"#4-2-方法二：使用-nmcli-工具\" class=\"headerlink\" title=\"4.2. 方法二：使用 nmcli 工具\"></a>4.2. 方法二：使用 nmcli 工具</h2><h3 id=\"4-2-1-查看网卡名称\"><a href=\"#4-2-1-查看网卡名称\" class=\"headerlink\" title=\"4.2.1. 查看网卡名称\"></a>4.2.1. 查看网卡名称</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmcli device status</span><br></pre></td></tr></table></figure>\n\n<p><strong>输出示例</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEVICE  <span class=\"built_in\">TYPE</span>      STATE      CONNECTION</span><br><span class=\"line\">enp0s3  ethernet  connected  enp0s3</span><br><span class=\"line\">lo      loopback  unmanaged  --</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-2-配置静态-IP\"><a href=\"#4-2-2-配置静态-IP\" class=\"headerlink\" title=\"4.2.2. 配置静态 IP\"></a>4.2.2. 配置静态 IP</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmcli connection modify enp0s3 ipv4.addresses 192.168.148.100/24</span><br><span class=\"line\">nmcli connection modify enp0s3 ipv4.gateway 192.168.148.20</span><br><span class=\"line\">nmcli connection modify enp0s3 ipv4.dns <span class=\"string\">&quot;8.8.8.8,8.8.4.4&quot;</span></span><br><span class=\"line\">nmcli connection modify enp0s3 ipv4.method manual</span><br><span class=\"line\">nmcli connection up enp0s3</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-3-验证配置\"><a href=\"#4-2-3-验证配置\" class=\"headerlink\" title=\"4.2.3. 验证配置\"></a>4.2.3. 验证配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmcli -f ipv4.addresses,ipv4.gateway,ipv4.dns connection show enp0s3</span><br></pre></td></tr></table></figure>\n\n<p><strong>输出示例</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ipv4.addresses:                         192.168.148.100/24</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">ipv4.gateway</span>:                           192.168.148.20</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">ipv4.dns</span>:                               8.8.8.8,8.8.4.4</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-4-验证网络连通性\"><a href=\"#4-2-4-验证网络连通性\" class=\"headerlink\" title=\"4.2.4. 验证网络连通性\"></a>4.2.4. 验证网络连通性</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ping www.baidu.com</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-5-恢复-DHCP-模式（可选）\"><a href=\"#4-2-5-恢复-DHCP-模式（可选）\" class=\"headerlink\" title=\"4.2.5. 恢复 DHCP 模式（可选）\"></a>4.2.5. 恢复 DHCP 模式（可选）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmcli connection modify enp0s3 ipv4.method auto</span><br><span class=\"line\">nmcli connection up enp0s3</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-6-删除-nmcli-静态配置（可选）\"><a href=\"#4-2-6-删除-nmcli-静态配置（可选）\" class=\"headerlink\" title=\"4.2.6. 删除 nmcli 静态配置（可选）\"></a>4.2.6. 删除 nmcli 静态配置（可选）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmcli connection delete enp0s3</span><br><span class=\"line\">nmcli device connect enp0s3</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"4-3-方法三：使用-nmtui-工具\"><a href=\"#4-3-方法三：使用-nmtui-工具\" class=\"headerlink\" title=\"4.3. 方法三：使用 nmtui 工具\"></a>4.3. 方法三：使用 nmtui 工具</h2><h3 id=\"4-3-1-进入交互界面\"><a href=\"#4-3-1-进入交互界面\" class=\"headerlink\" title=\"4.3.1. 进入交互界面\"></a>4.3.1. 进入交互界面</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmtui</span><br></pre></td></tr></table></figure>\n\n<p>按照提示进入网卡配置界面</p>\n<p><img src=\"/img/network5.png\" alt=\"image-20241207104541968\"></p>\n<h3 id=\"4-3-2-配置步骤\"><a href=\"#4-3-2-配置步骤\" class=\"headerlink\" title=\"4.3.2. 配置步骤\"></a>4.3.2. 配置步骤</h3><ol>\n<li>IPv4 CONFIGURATION <code>&lt;Automatic&gt;</code> ——-&gt;&gt;&gt; <font color='red'>IPv4 CONFIGURATION<code> &lt;Manual&gt;</code></font></li>\n<li><font color='red'><code> show</code></font></li>\n<li><font color='red'><code>[X] Automatically connect</code></font></li>\n<li><font color='red'><code> &lt;OK&gt;</code></font></li>\n<li><font color='red'><code> &lt;back&gt;</code></font></li>\n<li><font color='red'><code> &lt;quit&gt;</code></font></li>\n</ol>\n<p><img src=\"/img/network6.png\" alt=\"image-20241207105524062\"></p>\n<h3 id=\"4-3-3-重启系统\"><a href=\"#4-3-3-重启系统\" class=\"headerlink\" title=\"4.3.3. 重启系统\"></a>4.3.3. 重启系统</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-4-验证-IP\"><a href=\"#4-3-4-验证-IP\" class=\"headerlink\" title=\"4.3.4. 验证 IP\"></a>4.3.4. 验证 IP</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip a</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-5-验证网络连通性\"><a href=\"#4-3-5-验证网络连通性\" class=\"headerlink\" title=\"4.3.5. 验证网络连通性\"></a>4.3.5. 验证网络连通性</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ping www.baidu.com</span><br></pre></td></tr></table></figure>\n\n<hr>\n","excerpt":"","more":"<hr>\n<h1 id=\"1-环境准备\"><a href=\"#1-环境准备\" class=\"headerlink\" title=\"1. 环境准备\"></a>1. 环境准备</h1><ol>\n<li><strong>Oracle VM VirtualBox</strong><br> 下载地址：<a href=\"https://www.virtualbox.org/wiki/Downloads\">https://www.virtualbox.org/wiki/Downloads</a></li>\n<li><strong>CentOS 7.9</strong><br> 下载地址：<a href=\"https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/?spm=a2c6h.25603864.0.0.3dccf5adbnhdJY\">https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/?spm=a2c6h.25603864.0.0.3dccf5adbnhdJY</a></li>\n</ol>\n<hr>\n<h1 id=\"2-调整网络模式\"><a href=\"#2-调整网络模式\" class=\"headerlink\" title=\"2. 调整网络模式\"></a>2. 调整网络模式</h1><p><em>设置 → 网络 → 网卡1</em></p>\n<ul>\n<li>连接方式：桥接网卡</li>\n<li>名称：本机上网使用的网卡名称</li>\n</ul>\n<p><img src=\"/img/network1.png\" alt=\"image-20241205104936386\"></p>\n<hr>\n<h1 id=\"3-网卡自启配置（可选）\"><a href=\"#3-网卡自启配置（可选）\" class=\"headerlink\" title=\"3. 网卡自启配置（可选）\"></a>3. 网卡自启配置（可选）</h1><p><font color='red'>如果在安装系统界面已经连接了网络，这一步可以跳过！</font></p>\n<h2 id=\"3-1-检查网卡名称\"><a href=\"#3-1-检查网卡名称\" class=\"headerlink\" title=\"3.1. 检查网卡名称\"></a>3.1. 检查网卡名称</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmcli device status</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-2-配置网卡为开机自启\"><a href=\"#3-2-配置网卡为开机自启\" class=\"headerlink\" title=\"3.2. 配置网卡为开机自启\"></a>3.2. 配置网卡为开机自启</h2><p>假设网卡名称为 <code>enp0s3</code>（请根据实际情况替换）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmcli connection modify enp0s3 connection.autoconnect <span class=\"built_in\">yes</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-3-验证网卡配置\"><a href=\"#3-3-验证网卡配置\" class=\"headerlink\" title=\"3.3. 验证网卡配置\"></a>3.3. 验证网卡配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmcli connection show enp0s3 | grep autoconnect</span><br></pre></td></tr></table></figure>\n\n<p><strong>输出示例</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">connection.autoconnect:                 <span class=\"title\">yes</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">connection.autoconnect</span>-<span class=\"title\">priority</span>:        0</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">connection.autoconnect</span>-<span class=\"title\">retries</span>:         -1 (<span class=\"title\">default</span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">connection.autoconnect</span>-<span class=\"title\">slaves</span>:          -1 (<span class=\"title\">default</span>)</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"4-配置静态-IP\"><a href=\"#4-配置静态-IP\" class=\"headerlink\" title=\"4. 配置静态 IP\"></a>4. 配置静态 IP</h1><h2 id=\"4-1-方法一：修改网卡配置文件\"><a href=\"#4-1-方法一：修改网卡配置文件\" class=\"headerlink\" title=\"4.1. 方法一：修改网卡配置文件\"></a>4.1. 方法一：修改网卡配置文件</h2><h3 id=\"4-1-1-查看宿主机-IP\"><a href=\"#4-1-1-查看宿主机-IP\" class=\"headerlink\" title=\"4.1.1. 查看宿主机 IP\"></a>4.1.1. 查看宿主机 IP</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ipconfig</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/network3.png\" alt=\"image-20241205113859194\"></p>\n<p><font color='red'>可以看到宿主机的网关为192.168.148.20，请记住它，待会儿要用！！！！！！！</font></p>\n<h3 id=\"4-1-2-编辑配置文件\"><a href=\"#4-1-2-编辑配置文件\" class=\"headerlink\" title=\"4.1.2. 编辑配置文件\"></a>4.1.2. 编辑配置文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-enp0s3</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>修改<font color='red'>BOOTPROTO&#x3D;static</font>，既然要配置静态IP，那肯定要关闭DHCP嘛对吧！</p>\n<p>添加<font color='red'>IPADDR&#x3D;192.168.148.100</font>，IP不用多说吧，<strong>IP地址必须与网关在同一个网段</strong>，否则通信无法正常进行。</p>\n<p>添加<font color='red'>GATEWAY&#x3D;192.168.148.20</font>，来源于宿主机的网关。</p>\n<p>添加<font color='red'>NETMASK&#x3D;255.255.255.0</font></p>\n<p>添加<font color='red'>DNS1&#x3D;8.8.8.8</font></p>\n<p>添加<font color='red'>DNS2&#x3D;8.8.4.4</font></p>\n</li>\n</ul>\n<p><img src=\"/img/network4.png\" alt=\"image-20241205114551520\"></p>\n<h3 id=\"4-1-3-重启服务\"><a href=\"#4-1-3-重启服务\" class=\"headerlink\" title=\"4.1.3. 重启服务\"></a>4.1.3. 重启服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart network</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-1-4-验证网络连通性\"><a href=\"#4-1-4-验证网络连通性\" class=\"headerlink\" title=\"4.1.4. 验证网络连通性\"></a>4.1.4. 验证网络连通性</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ping www.baidu.com</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"4-2-方法二：使用-nmcli-工具\"><a href=\"#4-2-方法二：使用-nmcli-工具\" class=\"headerlink\" title=\"4.2. 方法二：使用 nmcli 工具\"></a>4.2. 方法二：使用 nmcli 工具</h2><h3 id=\"4-2-1-查看网卡名称\"><a href=\"#4-2-1-查看网卡名称\" class=\"headerlink\" title=\"4.2.1. 查看网卡名称\"></a>4.2.1. 查看网卡名称</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmcli device status</span><br></pre></td></tr></table></figure>\n\n<p><strong>输出示例</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEVICE  <span class=\"built_in\">TYPE</span>      STATE      CONNECTION</span><br><span class=\"line\">enp0s3  ethernet  connected  enp0s3</span><br><span class=\"line\">lo      loopback  unmanaged  --</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-2-配置静态-IP\"><a href=\"#4-2-2-配置静态-IP\" class=\"headerlink\" title=\"4.2.2. 配置静态 IP\"></a>4.2.2. 配置静态 IP</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmcli connection modify enp0s3 ipv4.addresses 192.168.148.100/24</span><br><span class=\"line\">nmcli connection modify enp0s3 ipv4.gateway 192.168.148.20</span><br><span class=\"line\">nmcli connection modify enp0s3 ipv4.dns <span class=\"string\">&quot;8.8.8.8,8.8.4.4&quot;</span></span><br><span class=\"line\">nmcli connection modify enp0s3 ipv4.method manual</span><br><span class=\"line\">nmcli connection up enp0s3</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-3-验证配置\"><a href=\"#4-2-3-验证配置\" class=\"headerlink\" title=\"4.2.3. 验证配置\"></a>4.2.3. 验证配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmcli -f ipv4.addresses,ipv4.gateway,ipv4.dns connection show enp0s3</span><br></pre></td></tr></table></figure>\n\n<p><strong>输出示例</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ipv4.addresses:                         192.168.148.100/24</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">ipv4.gateway</span>:                           192.168.148.20</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">ipv4.dns</span>:                               8.8.8.8,8.8.4.4</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-4-验证网络连通性\"><a href=\"#4-2-4-验证网络连通性\" class=\"headerlink\" title=\"4.2.4. 验证网络连通性\"></a>4.2.4. 验证网络连通性</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ping www.baidu.com</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-5-恢复-DHCP-模式（可选）\"><a href=\"#4-2-5-恢复-DHCP-模式（可选）\" class=\"headerlink\" title=\"4.2.5. 恢复 DHCP 模式（可选）\"></a>4.2.5. 恢复 DHCP 模式（可选）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmcli connection modify enp0s3 ipv4.method auto</span><br><span class=\"line\">nmcli connection up enp0s3</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-6-删除-nmcli-静态配置（可选）\"><a href=\"#4-2-6-删除-nmcli-静态配置（可选）\" class=\"headerlink\" title=\"4.2.6. 删除 nmcli 静态配置（可选）\"></a>4.2.6. 删除 nmcli 静态配置（可选）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmcli connection delete enp0s3</span><br><span class=\"line\">nmcli device connect enp0s3</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"4-3-方法三：使用-nmtui-工具\"><a href=\"#4-3-方法三：使用-nmtui-工具\" class=\"headerlink\" title=\"4.3. 方法三：使用 nmtui 工具\"></a>4.3. 方法三：使用 nmtui 工具</h2><h3 id=\"4-3-1-进入交互界面\"><a href=\"#4-3-1-进入交互界面\" class=\"headerlink\" title=\"4.3.1. 进入交互界面\"></a>4.3.1. 进入交互界面</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmtui</span><br></pre></td></tr></table></figure>\n\n<p>按照提示进入网卡配置界面</p>\n<p><img src=\"/img/network5.png\" alt=\"image-20241207104541968\"></p>\n<h3 id=\"4-3-2-配置步骤\"><a href=\"#4-3-2-配置步骤\" class=\"headerlink\" title=\"4.3.2. 配置步骤\"></a>4.3.2. 配置步骤</h3><ol>\n<li>IPv4 CONFIGURATION <code>&lt;Automatic&gt;</code> ——-&gt;&gt;&gt; <font color='red'>IPv4 CONFIGURATION<code> &lt;Manual&gt;</code></font></li>\n<li><font color='red'><code> show</code></font></li>\n<li><font color='red'><code>[X] Automatically connect</code></font></li>\n<li><font color='red'><code> &lt;OK&gt;</code></font></li>\n<li><font color='red'><code> &lt;back&gt;</code></font></li>\n<li><font color='red'><code> &lt;quit&gt;</code></font></li>\n</ol>\n<p><img src=\"/img/network6.png\" alt=\"image-20241207105524062\"></p>\n<h3 id=\"4-3-3-重启系统\"><a href=\"#4-3-3-重启系统\" class=\"headerlink\" title=\"4.3.3. 重启系统\"></a>4.3.3. 重启系统</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-4-验证-IP\"><a href=\"#4-3-4-验证-IP\" class=\"headerlink\" title=\"4.3.4. 验证 IP\"></a>4.3.4. 验证 IP</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip a</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-5-验证网络连通性\"><a href=\"#4-3-5-验证网络连通性\" class=\"headerlink\" title=\"4.3.5. 验证网络连通性\"></a>4.3.5. 验证网络连通性</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ping www.baidu.com</span><br></pre></td></tr></table></figure>\n\n<hr>\n"},{"title":"CentOS7离线升级内核","date":"2025-09-01T03:09:50.000Z","_content":"\n------\n\n# CentOS7 离线升级内核\n\n- **原内核版本**：3.10.0-1160.el7.x86_64\n- **升级后内核版本**：5.4.261-1.el7.elrepo.x86_64\n\n------\n\n## 1. 环境确认\n\n```bash\ncat /etc/centos-release\nuname -r\narch\n```\n\n------\n\n## 2. 准备 RPM 包\n\n在有网络的环境中，下载以下文件（来自 ELRepo archive 镜像），并传输到目标服务器，例如 `/root/` 目录：\n\n- kernel-lt-5.4.261-1.el7.elrepo.x86_64.rpm\n- kernel-lt-devel-5.4.261-1.el7.elrepo.x86_64.rpm\n- kernel-lt-headers-5.4.261-1.el7.elrepo.x86_64.rpm\n- kernel-lt-tools-5.4.261-1.el7.elrepo.x86_64.rpm\n- kernel-lt-tools-libs-5.4.261-1.el7.elrepo.x86_64.rpm\n\n下载源：\n https://mirrors.coreix.net/elrepo-archive-archive/kernel/el7/x86_64/RPMS/\n\n------\n\n## 3. 移除旧工具（避免冲突）\n\n```bash\nyum remove -y kernel-tools kernel-tools-libs\n```\n\n------\n\n## 4. 安装新内核及工具\n\n进入存放 rpm 包的目录（假设在 `/root/`）：\n\n```bash\ncd /root\n\nyum localinstall -y kernel-lt-5.4.261-1.el7.elrepo.x86_64.rpm \\\n                    kernel-lt-devel-5.4.261-1.el7.elrepo.x86_64.rpm \\\n                    kernel-lt-headers-5.4.261-1.el7.elrepo.x86_64.rpm \\\n                    kernel-lt-tools-5.4.261-1.el7.elrepo.x86_64.rpm \\\n                    kernel-lt-tools-libs-5.4.261-1.el7.elrepo.x86_64.rpm\n```\n\n------\n\n## 5. 更新 GRUB 引导配置\n\n```bash\n# 生成 grub 配置文件\ngrub2-mkconfig -o /boot/grub2/grub.cfg\n\n# 查看可用的内核启动项\nawk -F\\' '$1==\"menuentry \" {print $2}' /etc/grub2.cfg\n\n# 设置默认启动项（一般新内核是第 0 项）\ngrub2-set-default 0\n```\n\n------\n\n## 6. 重启并验证\n\n```bash\nreboot\n\nuname -r\n```\n\n**输出示例**\n\n```terminal\n5.4.261-1.el7.elrepo.x86_64\n```\n\n------\n\n## 7. 回退方案\n\n如果新内核无法正常启动：\n\n1. 在 **开机 GRUB 菜单** 中手动选择旧内核 `3.10.0-1160.el7.x86_64`。\n\n2. 或者在系统中改回旧内核为默认：\n\n   ```bash\n   awk -F\\' '$1==\"menuentry \" {print $2}' /etc/grub2.cfg\n   grub2-set-default 1\n   reboot\n   ```\n\n   （其中 `1` 表示旧内核在 grub 菜单中的顺序）\n\n------\n\n","source":"_posts/CentOS7离线升级内核.md","raw":"---\ntitle: CentOS7离线升级内核 \ndate: 2025-09-01 11:09:50\ntags: CentOS7\ncategories: CentOS7\n---\n\n------\n\n# CentOS7 离线升级内核\n\n- **原内核版本**：3.10.0-1160.el7.x86_64\n- **升级后内核版本**：5.4.261-1.el7.elrepo.x86_64\n\n------\n\n## 1. 环境确认\n\n```bash\ncat /etc/centos-release\nuname -r\narch\n```\n\n------\n\n## 2. 准备 RPM 包\n\n在有网络的环境中，下载以下文件（来自 ELRepo archive 镜像），并传输到目标服务器，例如 `/root/` 目录：\n\n- kernel-lt-5.4.261-1.el7.elrepo.x86_64.rpm\n- kernel-lt-devel-5.4.261-1.el7.elrepo.x86_64.rpm\n- kernel-lt-headers-5.4.261-1.el7.elrepo.x86_64.rpm\n- kernel-lt-tools-5.4.261-1.el7.elrepo.x86_64.rpm\n- kernel-lt-tools-libs-5.4.261-1.el7.elrepo.x86_64.rpm\n\n下载源：\n https://mirrors.coreix.net/elrepo-archive-archive/kernel/el7/x86_64/RPMS/\n\n------\n\n## 3. 移除旧工具（避免冲突）\n\n```bash\nyum remove -y kernel-tools kernel-tools-libs\n```\n\n------\n\n## 4. 安装新内核及工具\n\n进入存放 rpm 包的目录（假设在 `/root/`）：\n\n```bash\ncd /root\n\nyum localinstall -y kernel-lt-5.4.261-1.el7.elrepo.x86_64.rpm \\\n                    kernel-lt-devel-5.4.261-1.el7.elrepo.x86_64.rpm \\\n                    kernel-lt-headers-5.4.261-1.el7.elrepo.x86_64.rpm \\\n                    kernel-lt-tools-5.4.261-1.el7.elrepo.x86_64.rpm \\\n                    kernel-lt-tools-libs-5.4.261-1.el7.elrepo.x86_64.rpm\n```\n\n------\n\n## 5. 更新 GRUB 引导配置\n\n```bash\n# 生成 grub 配置文件\ngrub2-mkconfig -o /boot/grub2/grub.cfg\n\n# 查看可用的内核启动项\nawk -F\\' '$1==\"menuentry \" {print $2}' /etc/grub2.cfg\n\n# 设置默认启动项（一般新内核是第 0 项）\ngrub2-set-default 0\n```\n\n------\n\n## 6. 重启并验证\n\n```bash\nreboot\n\nuname -r\n```\n\n**输出示例**\n\n```terminal\n5.4.261-1.el7.elrepo.x86_64\n```\n\n------\n\n## 7. 回退方案\n\n如果新内核无法正常启动：\n\n1. 在 **开机 GRUB 菜单** 中手动选择旧内核 `3.10.0-1160.el7.x86_64`。\n\n2. 或者在系统中改回旧内核为默认：\n\n   ```bash\n   awk -F\\' '$1==\"menuentry \" {print $2}' /etc/grub2.cfg\n   grub2-set-default 1\n   reboot\n   ```\n\n   （其中 `1` 表示旧内核在 grub 菜单中的顺序）\n\n------\n\n","slug":"CentOS7离线升级内核","published":1,"updated":"2025-10-02T08:02:55.589Z","_id":"cmg7tp60d0000f8j86ppeh8vn","comments":1,"layout":"post","photos":[],"content":"<hr>\n<h1 id=\"CentOS7-离线升级内核\"><a href=\"#CentOS7-离线升级内核\" class=\"headerlink\" title=\"CentOS7 离线升级内核\"></a>CentOS7 离线升级内核</h1><ul>\n<li><strong>原内核版本</strong>：3.10.0-1160.el7.x86_64</li>\n<li><strong>升级后内核版本</strong>：5.4.261-1.el7.elrepo.x86_64</li>\n</ul>\n<hr>\n<h2 id=\"1-环境确认\"><a href=\"#1-环境确认\" class=\"headerlink\" title=\"1. 环境确认\"></a>1. 环境确认</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /etc/centos-release</span><br><span class=\"line\"><span class=\"built_in\">uname</span> -r</span><br><span class=\"line\"><span class=\"built_in\">arch</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"2-准备-RPM-包\"><a href=\"#2-准备-RPM-包\" class=\"headerlink\" title=\"2. 准备 RPM 包\"></a>2. 准备 RPM 包</h2><p>在有网络的环境中，下载以下文件（来自 ELRepo archive 镜像），并传输到目标服务器，例如 <code>/root/</code> 目录：</p>\n<ul>\n<li>kernel-lt-5.4.261-1.el7.elrepo.x86_64.rpm</li>\n<li>kernel-lt-devel-5.4.261-1.el7.elrepo.x86_64.rpm</li>\n<li>kernel-lt-headers-5.4.261-1.el7.elrepo.x86_64.rpm</li>\n<li>kernel-lt-tools-5.4.261-1.el7.elrepo.x86_64.rpm</li>\n<li>kernel-lt-tools-libs-5.4.261-1.el7.elrepo.x86_64.rpm</li>\n</ul>\n<p>下载源：<br> <a href=\"https://mirrors.coreix.net/elrepo-archive-archive/kernel/el7/x86_64/RPMS/\">https://mirrors.coreix.net/elrepo-archive-archive/kernel/el7/x86_64/RPMS/</a></p>\n<hr>\n<h2 id=\"3-移除旧工具（避免冲突）\"><a href=\"#3-移除旧工具（避免冲突）\" class=\"headerlink\" title=\"3. 移除旧工具（避免冲突）\"></a>3. 移除旧工具（避免冲突）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum remove -y kernel-tools kernel-tools-libs</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"4-安装新内核及工具\"><a href=\"#4-安装新内核及工具\" class=\"headerlink\" title=\"4. 安装新内核及工具\"></a>4. 安装新内核及工具</h2><p>进入存放 rpm 包的目录（假设在 <code>/root/</code>）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /root</span><br><span class=\"line\"></span><br><span class=\"line\">yum localinstall -y kernel-lt-5.4.261-1.el7.elrepo.x86_64.rpm \\</span><br><span class=\"line\">                    kernel-lt-devel-5.4.261-1.el7.elrepo.x86_64.rpm \\</span><br><span class=\"line\">                    kernel-lt-headers-5.4.261-1.el7.elrepo.x86_64.rpm \\</span><br><span class=\"line\">                    kernel-lt-tools-5.4.261-1.el7.elrepo.x86_64.rpm \\</span><br><span class=\"line\">                    kernel-lt-tools-libs-5.4.261-1.el7.elrepo.x86_64.rpm</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"5-更新-GRUB-引导配置\"><a href=\"#5-更新-GRUB-引导配置\" class=\"headerlink\" title=\"5. 更新 GRUB 引导配置\"></a>5. 更新 GRUB 引导配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 生成 grub 配置文件</span></span><br><span class=\"line\">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看可用的内核启动项</span></span><br><span class=\"line\">awk -F\\&#x27; <span class=\"string\">&#x27;$1==&quot;menuentry &quot; &#123;print $2&#125;&#x27;</span> /etc/grub2.cfg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置默认启动项（一般新内核是第 0 项）</span></span><br><span class=\"line\">grub2-set-default 0</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"6-重启并验证\"><a href=\"#6-重启并验证\" class=\"headerlink\" title=\"6. 重启并验证\"></a>6. 重启并验证</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reboot</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">uname</span> -r</span><br></pre></td></tr></table></figure>\n\n<p><strong>输出示例</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5.4.261-1.el7.elrepo.x86_64</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"7-回退方案\"><a href=\"#7-回退方案\" class=\"headerlink\" title=\"7. 回退方案\"></a>7. 回退方案</h2><p>如果新内核无法正常启动：</p>\n<ol>\n<li><p>在 <strong>开机 GRUB 菜单</strong> 中手动选择旧内核 <code>3.10.0-1160.el7.x86_64</code>。</p>\n</li>\n<li><p>或者在系统中改回旧内核为默认：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -F\\&#x27; <span class=\"string\">&#x27;$1==&quot;menuentry &quot; &#123;print $2&#125;&#x27;</span> /etc/grub2.cfg</span><br><span class=\"line\">grub2-set-default 1</span><br><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n\n<p>（其中 <code>1</code> 表示旧内核在 grub 菜单中的顺序）</p>\n</li>\n</ol>\n<hr>\n","excerpt":"","more":"<hr>\n<h1 id=\"CentOS7-离线升级内核\"><a href=\"#CentOS7-离线升级内核\" class=\"headerlink\" title=\"CentOS7 离线升级内核\"></a>CentOS7 离线升级内核</h1><ul>\n<li><strong>原内核版本</strong>：3.10.0-1160.el7.x86_64</li>\n<li><strong>升级后内核版本</strong>：5.4.261-1.el7.elrepo.x86_64</li>\n</ul>\n<hr>\n<h2 id=\"1-环境确认\"><a href=\"#1-环境确认\" class=\"headerlink\" title=\"1. 环境确认\"></a>1. 环境确认</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /etc/centos-release</span><br><span class=\"line\"><span class=\"built_in\">uname</span> -r</span><br><span class=\"line\"><span class=\"built_in\">arch</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"2-准备-RPM-包\"><a href=\"#2-准备-RPM-包\" class=\"headerlink\" title=\"2. 准备 RPM 包\"></a>2. 准备 RPM 包</h2><p>在有网络的环境中，下载以下文件（来自 ELRepo archive 镜像），并传输到目标服务器，例如 <code>/root/</code> 目录：</p>\n<ul>\n<li>kernel-lt-5.4.261-1.el7.elrepo.x86_64.rpm</li>\n<li>kernel-lt-devel-5.4.261-1.el7.elrepo.x86_64.rpm</li>\n<li>kernel-lt-headers-5.4.261-1.el7.elrepo.x86_64.rpm</li>\n<li>kernel-lt-tools-5.4.261-1.el7.elrepo.x86_64.rpm</li>\n<li>kernel-lt-tools-libs-5.4.261-1.el7.elrepo.x86_64.rpm</li>\n</ul>\n<p>下载源：<br> <a href=\"https://mirrors.coreix.net/elrepo-archive-archive/kernel/el7/x86_64/RPMS/\">https://mirrors.coreix.net/elrepo-archive-archive/kernel/el7/x86_64/RPMS/</a></p>\n<hr>\n<h2 id=\"3-移除旧工具（避免冲突）\"><a href=\"#3-移除旧工具（避免冲突）\" class=\"headerlink\" title=\"3. 移除旧工具（避免冲突）\"></a>3. 移除旧工具（避免冲突）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum remove -y kernel-tools kernel-tools-libs</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"4-安装新内核及工具\"><a href=\"#4-安装新内核及工具\" class=\"headerlink\" title=\"4. 安装新内核及工具\"></a>4. 安装新内核及工具</h2><p>进入存放 rpm 包的目录（假设在 <code>/root/</code>）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /root</span><br><span class=\"line\"></span><br><span class=\"line\">yum localinstall -y kernel-lt-5.4.261-1.el7.elrepo.x86_64.rpm \\</span><br><span class=\"line\">                    kernel-lt-devel-5.4.261-1.el7.elrepo.x86_64.rpm \\</span><br><span class=\"line\">                    kernel-lt-headers-5.4.261-1.el7.elrepo.x86_64.rpm \\</span><br><span class=\"line\">                    kernel-lt-tools-5.4.261-1.el7.elrepo.x86_64.rpm \\</span><br><span class=\"line\">                    kernel-lt-tools-libs-5.4.261-1.el7.elrepo.x86_64.rpm</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"5-更新-GRUB-引导配置\"><a href=\"#5-更新-GRUB-引导配置\" class=\"headerlink\" title=\"5. 更新 GRUB 引导配置\"></a>5. 更新 GRUB 引导配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 生成 grub 配置文件</span></span><br><span class=\"line\">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看可用的内核启动项</span></span><br><span class=\"line\">awk -F\\&#x27; <span class=\"string\">&#x27;$1==&quot;menuentry &quot; &#123;print $2&#125;&#x27;</span> /etc/grub2.cfg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置默认启动项（一般新内核是第 0 项）</span></span><br><span class=\"line\">grub2-set-default 0</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"6-重启并验证\"><a href=\"#6-重启并验证\" class=\"headerlink\" title=\"6. 重启并验证\"></a>6. 重启并验证</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reboot</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">uname</span> -r</span><br></pre></td></tr></table></figure>\n\n<p><strong>输出示例</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5.4.261-1.el7.elrepo.x86_64</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"7-回退方案\"><a href=\"#7-回退方案\" class=\"headerlink\" title=\"7. 回退方案\"></a>7. 回退方案</h2><p>如果新内核无法正常启动：</p>\n<ol>\n<li><p>在 <strong>开机 GRUB 菜单</strong> 中手动选择旧内核 <code>3.10.0-1160.el7.x86_64</code>。</p>\n</li>\n<li><p>或者在系统中改回旧内核为默认：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -F\\&#x27; <span class=\"string\">&#x27;$1==&quot;menuentry &quot; &#123;print $2&#125;&#x27;</span> /etc/grub2.cfg</span><br><span class=\"line\">grub2-set-default 1</span><br><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n\n<p>（其中 <code>1</code> 表示旧内核在 grub 菜单中的顺序）</p>\n</li>\n</ol>\n<hr>\n"},{"title":"CentOS7初始化与优化配置","date":"2024-11-21T09:50:36.000Z","_content":"\n------\n\n# CentOS7初始化与优化配置\n\n## 1. 配置 YUM\n\n### 1.1 仅安装 64 位软件包\n\n```bash\necho \"exclude=*.i386 *.i586 *.i686\" >> /etc/yum.conf\n```\n\n### 1.2 强制 YUM 使用 IPv4\n\n```bash\necho 'ip_resolve=4' >> /etc/yum.conf\n```\n\n------\n\n## 2. 更新系统\n\n### 2.1 YUM 换源\n\n```bash\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak\n\ncat <<EOF > /etc/yum.repos.d/CentOS-Base.repo\n[base]\nname=CentOS-\\$releasever - Base\nbaseurl=https://mirrors.aliyun.com/centos/\\$releasever/os/\\$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n\n[updates]\nname=CentOS-\\$releasever - Updates\nbaseurl=https://mirrors.aliyun.com/centos/\\$releasever/updates/\\$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n\n[extras]\nname=CentOS-\\$releasever - Extras\nbaseurl=https://mirrors.aliyun.com/centos/\\$releasever/extras/\\$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\nEOF\n\nyum clean all\nyum makecache\n```\n\n### 2.2 更新\n\n```bash\nyum update -y\n```\n\n------\n\n## 3. EPEL 镜像设置\n\n### 3.1 安装 EPEL 软件包\n\n```bash\nyum install -y epel-release\n```\n\n### 3.2 设置国内镜像服务器\n\n```bash\nsed -e 's!^metalink=!#metalink=!g' \\\n    -e 's!^#baseurl=!baseurl=!g' \\\n    -e 's!//download\\.fedoraproject\\.org/pub!//mirrors.aliyun.com!g' \\\n    -e 's!http://mirrors!https://mirrors!g' \\\n    -i /etc/yum.repos.d/epel*.repo\n```\n\n### 3.3 创建 YUM 缓存\n\n```bash\nyum makecache\n```\n\n------\n\n## 4. 安装常用软件\n\n```bash\nyum install -y vim-enhanced wget curl yum-utils tree pwgen unzip expect tar xz bash-completion-extras\n```\n\n### 4.1 安装 Python 3.10+\n\n#### 4.1.1 安装依赖：OpenSSL 1.1+\n\n- 安装 OpenSSL 1.1+ 软件包\n\n```bash\npkg_name=openssl\npkg_ver=1.1.1n\npkg_rel=1\npkg=${pkg_name}-${pkg_ver}\ntar_name=${pkg_name}-${pkg_ver}-${pkg_rel}.el7.x86_64.tar.gz\nurl=http://dl.cdgeekcamp.com/centos/7/${pkg_name}/${pkg_ver}/${tar_name}\nprefix=/usr/local/${pkg}\n\ntest -d ${prefix} || (wget ${url} -O /tmp/${tar_name} && tar xf /tmp/${tar_name} -C $(dirname ${prefix}))\n\nrm -f /tmp/${tar_name}\n```\n\n- 更新动态链接库配置\n\n```bash\negrep \"^${prefix}/lib\" /etc/ld.so.conf || (echo \"${prefix}/lib\" >> /etc/ld.so.conf && ldconfig)\n```\n\n- 确认配置\n\n```bash\nldconfig -p | grep ${prefix}\n```\n\n**终端输出**\n\n```cmd\n[root@localhost ~]# ldconfig -p | grep ${prefix}\n        libssl.so.1.1 (libc6,x86-64) => /usr/local/openssl-1.1.1n/lib/libssl.so.1.1\n        libssl.so (libc6,x86-64) => /usr/local/openssl-1.1.1n/lib/libssl.so\n        libcrypto.so.1.1 (libc6,x86-64) => /usr/local/openssl-1.1.1n/lib/libcrypto.so.1.1\n        libcrypto.so (libc6,x86-64) => /usr/local/openssl-1.1.1n/lib/libcrypto.so\n```\n\n#### 4.1.2 安装 Python 3.10+\n\n- 设置 Python 3.10+ 安装变量\n\n```bash\npkg_name=python\npkg_ver=3.10.5\npkg_short_num=3\npkg_ver_num=310\npkg_rel=1\npkg=${pkg_name}-${pkg_ver}\ntar_name=${pkg_name}-${pkg_ver}-${pkg_rel}.el7.x86_64.tar.gz\nurl=http://dl.cdgeekcamp.com/centos/7/python/3/${tar_name}\nprefix=/usr/local/${pkg}\nbin_dir=${prefix}/bin\n```\n\n- 安装 Python 3.10+ 软件包\n\n```bash\ntest -d ${prefix} || (wget ${url} -O /tmp/${tar_name} && tar xf /tmp/${tar_name} -C $(dirname ${prefix}))\n\nrm -f /tmp/${tar_name}\n```\n\n- 设置环境变量\n\n```bash\necho \"export PATH=${bin_dir}:${PATH}\" > /etc/profile.d/python${pkg_short_num}.sh\n. /etc/profile\n```\n\n- 确认设置\n\n```bash\nwhich python${pkg_short_num} | grep ${prefix}\n```\n\n**终端输出**\n\n```cmd\n/usr/local/python-3.10.5/bin/python3\n```\n\n- 设置软链接\n\n```bash\ncd ${bin_dir}\ntest -L pip${pkg_ver_num} || ln -v -s pip${pkg_short_num} pip${pkg_ver_num}\ntest -L python${pkg_ver_num} || ln -v -s python${pkg_short_num} python${pkg_ver_num}\n\necho -e \"PIP软链接：pip${pkg_ver_num}\\nPython3软链接：python${pkg_ver_num}\"\n```\n\n- 测试 pip 命令\n\n```bash\necho -e \"执行命令：pip${pkg_ver_num} list\\n\" && pip${pkg_ver_num} list\n```\n\n**终端输出**\n\n```cmd\n执行命令：pip310 list\n\nPackage    Version\n---------- -------\npip        22.1.2\nsetuptools 58.1.0\n\n[notice] A new release of pip available: 22.1.2 -> 24.3.1\n[notice] To update, run: pip install --upgrade pip\n```\n\n*若出现 notice，说明 pip 版本过低，可以执行 `pip install --upgrade pip` 来升级。*\n\n注：可能会因为源的问题导致更新 pip 失败！\n\n- 配置 pip 换源\n\n```bash\nmkdir -p ~/.pip\ncat > ~/.pip/pip.conf <<EOF\n[global]\nindex-url = https://mirrors.aliyun.com/pypi/simple/\ntrusted-host = mirrors.aliyun.com\n\n[install]\nuse-deprecated=legacy-resolver\nEOF\n```\n\n### 4.2 安装命令行编辑工具\n\n#### 4.2.1 XML 编辑工具\n\n```bash\nyum install -y xmlstarlet\n```\n\n#### 4.2.2 INI 与 Java Properties 编辑工具\n\n```bash\nyum install -y crudini\n```\n\n------\n\n## 5. 设置系统时区\n\n```bash\nyes|cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n```\n\n------\n\n## 6. 安装时间同步服务\n\n```bash\nyum install -y chrony\nsystemctl enable chronyd\nsystemctl start chronyd\n```\n\n------\n\n## 7. 禁用 IPv6\n\n```bash\necho \"net.ipv6.conf.all.disable_ipv6 = 1\" >>  /etc/sysctl.conf\necho \"net.ipv6.conf.default.disable_ipv6 = 1\" >>  /etc/sysctl.conf\n```\n\n------\n\n## 8. 删除安装日志\n\n```bash\nrm -f ~/anaconda-ks.cfg  ~/install.log  ~/install.log.syslog\n```\n\n------\n\n## 9. 禁用 SELinux\n\n```bash\necho SELINUX=disabled>/etc/selinux/config\necho SELINUXTYPE=targeted>>/etc/selinux/config\n```\n\n------\n\n## 10. 关闭防火墙\n\n```bash\nsystemctl disable firewalld\nsystemctl stop firewalld\n```\n\n------\n\n## 11. 设置最大文件句柄\n\n```bash\necho \"* soft nofile 65535\" | sudo tee -a /etc/security/limits.conf\necho \"* hard nofile 65535\" | sudo tee -a /etc/security/limits.conf\n```\n\n------\n\n## 12. 优化 SSH 服务\n\n- 修改 sshd_config\n\n```bash\nsed -i \"s/#UseDNS yes/UseDNS no/\" /etc/ssh/sshd_config\nsed -i \"s/GSSAPIAuthentication yes/GSSAPIAuthentication no/\" /etc/ssh/sshd_config\nsed -i \"s/GSSAPICleanupCredentials yes/GSSAPICleanupCredentials no/\" /etc/ssh/sshd_config\nsed -i \"s/#MaxAuthTries 6/MaxAuthTries 10/\" /etc/ssh/sshd_config\nsed -i \"s/#ClientAliveInterval 0/ClientAliveInterval 30/\" /etc/ssh/sshd_config\nsed -i \"s/#ClientAliveCountMax 3/ClientAliveCountMax 10/\" /etc/ssh/sshd_config\n```\n\n- 重载配置\n\n```bash\nsystemctl reload sshd\n```\n\n------\n\n## 13. 设置主机名\n\n### 13.1 初始化本地解析设置\n\n```bash\necho '127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4' > /etc/hosts\n```\n\n------\n\n## 14. 重启\n\n```bash\nreboot\n```\n\n------\n\n","source":"_posts/CentOS7初始化与优化配置.md","raw":"---\ntitle: CentOS7初始化与优化配置\ntags: CentOS7\ncategories: CentOS7\ndate: 2024-11-21 17:50:36\n---\n\n------\n\n# CentOS7初始化与优化配置\n\n## 1. 配置 YUM\n\n### 1.1 仅安装 64 位软件包\n\n```bash\necho \"exclude=*.i386 *.i586 *.i686\" >> /etc/yum.conf\n```\n\n### 1.2 强制 YUM 使用 IPv4\n\n```bash\necho 'ip_resolve=4' >> /etc/yum.conf\n```\n\n------\n\n## 2. 更新系统\n\n### 2.1 YUM 换源\n\n```bash\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak\n\ncat <<EOF > /etc/yum.repos.d/CentOS-Base.repo\n[base]\nname=CentOS-\\$releasever - Base\nbaseurl=https://mirrors.aliyun.com/centos/\\$releasever/os/\\$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n\n[updates]\nname=CentOS-\\$releasever - Updates\nbaseurl=https://mirrors.aliyun.com/centos/\\$releasever/updates/\\$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n\n[extras]\nname=CentOS-\\$releasever - Extras\nbaseurl=https://mirrors.aliyun.com/centos/\\$releasever/extras/\\$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\nEOF\n\nyum clean all\nyum makecache\n```\n\n### 2.2 更新\n\n```bash\nyum update -y\n```\n\n------\n\n## 3. EPEL 镜像设置\n\n### 3.1 安装 EPEL 软件包\n\n```bash\nyum install -y epel-release\n```\n\n### 3.2 设置国内镜像服务器\n\n```bash\nsed -e 's!^metalink=!#metalink=!g' \\\n    -e 's!^#baseurl=!baseurl=!g' \\\n    -e 's!//download\\.fedoraproject\\.org/pub!//mirrors.aliyun.com!g' \\\n    -e 's!http://mirrors!https://mirrors!g' \\\n    -i /etc/yum.repos.d/epel*.repo\n```\n\n### 3.3 创建 YUM 缓存\n\n```bash\nyum makecache\n```\n\n------\n\n## 4. 安装常用软件\n\n```bash\nyum install -y vim-enhanced wget curl yum-utils tree pwgen unzip expect tar xz bash-completion-extras\n```\n\n### 4.1 安装 Python 3.10+\n\n#### 4.1.1 安装依赖：OpenSSL 1.1+\n\n- 安装 OpenSSL 1.1+ 软件包\n\n```bash\npkg_name=openssl\npkg_ver=1.1.1n\npkg_rel=1\npkg=${pkg_name}-${pkg_ver}\ntar_name=${pkg_name}-${pkg_ver}-${pkg_rel}.el7.x86_64.tar.gz\nurl=http://dl.cdgeekcamp.com/centos/7/${pkg_name}/${pkg_ver}/${tar_name}\nprefix=/usr/local/${pkg}\n\ntest -d ${prefix} || (wget ${url} -O /tmp/${tar_name} && tar xf /tmp/${tar_name} -C $(dirname ${prefix}))\n\nrm -f /tmp/${tar_name}\n```\n\n- 更新动态链接库配置\n\n```bash\negrep \"^${prefix}/lib\" /etc/ld.so.conf || (echo \"${prefix}/lib\" >> /etc/ld.so.conf && ldconfig)\n```\n\n- 确认配置\n\n```bash\nldconfig -p | grep ${prefix}\n```\n\n**终端输出**\n\n```cmd\n[root@localhost ~]# ldconfig -p | grep ${prefix}\n        libssl.so.1.1 (libc6,x86-64) => /usr/local/openssl-1.1.1n/lib/libssl.so.1.1\n        libssl.so (libc6,x86-64) => /usr/local/openssl-1.1.1n/lib/libssl.so\n        libcrypto.so.1.1 (libc6,x86-64) => /usr/local/openssl-1.1.1n/lib/libcrypto.so.1.1\n        libcrypto.so (libc6,x86-64) => /usr/local/openssl-1.1.1n/lib/libcrypto.so\n```\n\n#### 4.1.2 安装 Python 3.10+\n\n- 设置 Python 3.10+ 安装变量\n\n```bash\npkg_name=python\npkg_ver=3.10.5\npkg_short_num=3\npkg_ver_num=310\npkg_rel=1\npkg=${pkg_name}-${pkg_ver}\ntar_name=${pkg_name}-${pkg_ver}-${pkg_rel}.el7.x86_64.tar.gz\nurl=http://dl.cdgeekcamp.com/centos/7/python/3/${tar_name}\nprefix=/usr/local/${pkg}\nbin_dir=${prefix}/bin\n```\n\n- 安装 Python 3.10+ 软件包\n\n```bash\ntest -d ${prefix} || (wget ${url} -O /tmp/${tar_name} && tar xf /tmp/${tar_name} -C $(dirname ${prefix}))\n\nrm -f /tmp/${tar_name}\n```\n\n- 设置环境变量\n\n```bash\necho \"export PATH=${bin_dir}:${PATH}\" > /etc/profile.d/python${pkg_short_num}.sh\n. /etc/profile\n```\n\n- 确认设置\n\n```bash\nwhich python${pkg_short_num} | grep ${prefix}\n```\n\n**终端输出**\n\n```cmd\n/usr/local/python-3.10.5/bin/python3\n```\n\n- 设置软链接\n\n```bash\ncd ${bin_dir}\ntest -L pip${pkg_ver_num} || ln -v -s pip${pkg_short_num} pip${pkg_ver_num}\ntest -L python${pkg_ver_num} || ln -v -s python${pkg_short_num} python${pkg_ver_num}\n\necho -e \"PIP软链接：pip${pkg_ver_num}\\nPython3软链接：python${pkg_ver_num}\"\n```\n\n- 测试 pip 命令\n\n```bash\necho -e \"执行命令：pip${pkg_ver_num} list\\n\" && pip${pkg_ver_num} list\n```\n\n**终端输出**\n\n```cmd\n执行命令：pip310 list\n\nPackage    Version\n---------- -------\npip        22.1.2\nsetuptools 58.1.0\n\n[notice] A new release of pip available: 22.1.2 -> 24.3.1\n[notice] To update, run: pip install --upgrade pip\n```\n\n*若出现 notice，说明 pip 版本过低，可以执行 `pip install --upgrade pip` 来升级。*\n\n注：可能会因为源的问题导致更新 pip 失败！\n\n- 配置 pip 换源\n\n```bash\nmkdir -p ~/.pip\ncat > ~/.pip/pip.conf <<EOF\n[global]\nindex-url = https://mirrors.aliyun.com/pypi/simple/\ntrusted-host = mirrors.aliyun.com\n\n[install]\nuse-deprecated=legacy-resolver\nEOF\n```\n\n### 4.2 安装命令行编辑工具\n\n#### 4.2.1 XML 编辑工具\n\n```bash\nyum install -y xmlstarlet\n```\n\n#### 4.2.2 INI 与 Java Properties 编辑工具\n\n```bash\nyum install -y crudini\n```\n\n------\n\n## 5. 设置系统时区\n\n```bash\nyes|cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n```\n\n------\n\n## 6. 安装时间同步服务\n\n```bash\nyum install -y chrony\nsystemctl enable chronyd\nsystemctl start chronyd\n```\n\n------\n\n## 7. 禁用 IPv6\n\n```bash\necho \"net.ipv6.conf.all.disable_ipv6 = 1\" >>  /etc/sysctl.conf\necho \"net.ipv6.conf.default.disable_ipv6 = 1\" >>  /etc/sysctl.conf\n```\n\n------\n\n## 8. 删除安装日志\n\n```bash\nrm -f ~/anaconda-ks.cfg  ~/install.log  ~/install.log.syslog\n```\n\n------\n\n## 9. 禁用 SELinux\n\n```bash\necho SELINUX=disabled>/etc/selinux/config\necho SELINUXTYPE=targeted>>/etc/selinux/config\n```\n\n------\n\n## 10. 关闭防火墙\n\n```bash\nsystemctl disable firewalld\nsystemctl stop firewalld\n```\n\n------\n\n## 11. 设置最大文件句柄\n\n```bash\necho \"* soft nofile 65535\" | sudo tee -a /etc/security/limits.conf\necho \"* hard nofile 65535\" | sudo tee -a /etc/security/limits.conf\n```\n\n------\n\n## 12. 优化 SSH 服务\n\n- 修改 sshd_config\n\n```bash\nsed -i \"s/#UseDNS yes/UseDNS no/\" /etc/ssh/sshd_config\nsed -i \"s/GSSAPIAuthentication yes/GSSAPIAuthentication no/\" /etc/ssh/sshd_config\nsed -i \"s/GSSAPICleanupCredentials yes/GSSAPICleanupCredentials no/\" /etc/ssh/sshd_config\nsed -i \"s/#MaxAuthTries 6/MaxAuthTries 10/\" /etc/ssh/sshd_config\nsed -i \"s/#ClientAliveInterval 0/ClientAliveInterval 30/\" /etc/ssh/sshd_config\nsed -i \"s/#ClientAliveCountMax 3/ClientAliveCountMax 10/\" /etc/ssh/sshd_config\n```\n\n- 重载配置\n\n```bash\nsystemctl reload sshd\n```\n\n------\n\n## 13. 设置主机名\n\n### 13.1 初始化本地解析设置\n\n```bash\necho '127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4' > /etc/hosts\n```\n\n------\n\n## 14. 重启\n\n```bash\nreboot\n```\n\n------\n\n","slug":"CentOS7初始化与优化配置","published":1,"updated":"2025-10-02T08:02:48.371Z","_id":"cmg936blx00008gj88bag6b3z","comments":1,"layout":"post","photos":[],"content":"<hr>\n<h1 id=\"CentOS7初始化与优化配置\"><a href=\"#CentOS7初始化与优化配置\" class=\"headerlink\" title=\"CentOS7初始化与优化配置\"></a>CentOS7初始化与优化配置</h1><h2 id=\"1-配置-YUM\"><a href=\"#1-配置-YUM\" class=\"headerlink\" title=\"1. 配置 YUM\"></a>1. 配置 YUM</h2><h3 id=\"1-1-仅安装-64-位软件包\"><a href=\"#1-1-仅安装-64-位软件包\" class=\"headerlink\" title=\"1.1 仅安装 64 位软件包\"></a>1.1 仅安装 64 位软件包</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;exclude=*.i386 *.i586 *.i686&quot;</span> &gt;&gt; /etc/yum.conf</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-强制-YUM-使用-IPv4\"><a href=\"#1-2-强制-YUM-使用-IPv4\" class=\"headerlink\" title=\"1.2 强制 YUM 使用 IPv4\"></a>1.2 强制 YUM 使用 IPv4</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;ip_resolve=4&#x27;</span> &gt;&gt; /etc/yum.conf</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"2-更新系统\"><a href=\"#2-更新系统\" class=\"headerlink\" title=\"2. 更新系统\"></a>2. 更新系统</h2><h3 id=\"2-1-YUM-换源\"><a href=\"#2-1-YUM-换源\" class=\"headerlink\" title=\"2.1 YUM 换源\"></a>2.1 YUM 换源</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cat</span> &lt;&lt;<span class=\"string\">EOF &gt; /etc/yum.repos.d/CentOS-Base.repo</span></span><br><span class=\"line\"><span class=\"string\">[base]</span></span><br><span class=\"line\"><span class=\"string\">name=CentOS-\\$releasever - Base</span></span><br><span class=\"line\"><span class=\"string\">baseurl=https://mirrors.aliyun.com/centos/\\$releasever/os/\\$basearch/</span></span><br><span class=\"line\"><span class=\"string\">gpgcheck=1</span></span><br><span class=\"line\"><span class=\"string\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[updates]</span></span><br><span class=\"line\"><span class=\"string\">name=CentOS-\\$releasever - Updates</span></span><br><span class=\"line\"><span class=\"string\">baseurl=https://mirrors.aliyun.com/centos/\\$releasever/updates/\\$basearch/</span></span><br><span class=\"line\"><span class=\"string\">gpgcheck=1</span></span><br><span class=\"line\"><span class=\"string\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[extras]</span></span><br><span class=\"line\"><span class=\"string\">name=CentOS-\\$releasever - Extras</span></span><br><span class=\"line\"><span class=\"string\">baseurl=https://mirrors.aliyun.com/centos/\\$releasever/extras/\\$basearch/</span></span><br><span class=\"line\"><span class=\"string\">gpgcheck=1</span></span><br><span class=\"line\"><span class=\"string\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum clean all</span><br><span class=\"line\">yum makecache</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-更新\"><a href=\"#2-2-更新\" class=\"headerlink\" title=\"2.2 更新\"></a>2.2 更新</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum update -y</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"3-EPEL-镜像设置\"><a href=\"#3-EPEL-镜像设置\" class=\"headerlink\" title=\"3. EPEL 镜像设置\"></a>3. EPEL 镜像设置</h2><h3 id=\"3-1-安装-EPEL-软件包\"><a href=\"#3-1-安装-EPEL-软件包\" class=\"headerlink\" title=\"3.1 安装 EPEL 软件包\"></a>3.1 安装 EPEL 软件包</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y epel-release</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-设置国内镜像服务器\"><a href=\"#3-2-设置国内镜像服务器\" class=\"headerlink\" title=\"3.2 设置国内镜像服务器\"></a>3.2 设置国内镜像服务器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -e <span class=\"string\">&#x27;s!^metalink=!#metalink=!g&#x27;</span> \\</span><br><span class=\"line\">    -e <span class=\"string\">&#x27;s!^#baseurl=!baseurl=!g&#x27;</span> \\</span><br><span class=\"line\">    -e <span class=\"string\">&#x27;s!//download\\.fedoraproject\\.org/pub!//mirrors.aliyun.com!g&#x27;</span> \\</span><br><span class=\"line\">    -e <span class=\"string\">&#x27;s!http://mirrors!https://mirrors!g&#x27;</span> \\</span><br><span class=\"line\">    -i /etc/yum.repos.d/epel*.repo</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-创建-YUM-缓存\"><a href=\"#3-3-创建-YUM-缓存\" class=\"headerlink\" title=\"3.3 创建 YUM 缓存\"></a>3.3 创建 YUM 缓存</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum makecache</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"4-安装常用软件\"><a href=\"#4-安装常用软件\" class=\"headerlink\" title=\"4. 安装常用软件\"></a>4. 安装常用软件</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y vim-enhanced wget curl yum-utils tree pwgen unzip expect tar xz bash-completion-extras</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-1-安装-Python-3-10\"><a href=\"#4-1-安装-Python-3-10\" class=\"headerlink\" title=\"4.1 安装 Python 3.10+\"></a>4.1 安装 Python 3.10+</h3><h4 id=\"4-1-1-安装依赖：OpenSSL-1-1\"><a href=\"#4-1-1-安装依赖：OpenSSL-1-1\" class=\"headerlink\" title=\"4.1.1 安装依赖：OpenSSL 1.1+\"></a>4.1.1 安装依赖：OpenSSL 1.1+</h4><ul>\n<li>安装 OpenSSL 1.1+ 软件包</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg_name=openssl</span><br><span class=\"line\">pkg_ver=1.1.1n</span><br><span class=\"line\">pkg_rel=1</span><br><span class=\"line\">pkg=<span class=\"variable\">$&#123;pkg_name&#125;</span>-<span class=\"variable\">$&#123;pkg_ver&#125;</span></span><br><span class=\"line\">tar_name=<span class=\"variable\">$&#123;pkg_name&#125;</span>-<span class=\"variable\">$&#123;pkg_ver&#125;</span>-<span class=\"variable\">$&#123;pkg_rel&#125;</span>.el7.x86_64.tar.gz</span><br><span class=\"line\">url=http://dl.cdgeekcamp.com/centos/7/<span class=\"variable\">$&#123;pkg_name&#125;</span>/<span class=\"variable\">$&#123;pkg_ver&#125;</span>/<span class=\"variable\">$&#123;tar_name&#125;</span></span><br><span class=\"line\">prefix=/usr/local/<span class=\"variable\">$&#123;pkg&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">test</span> -d <span class=\"variable\">$&#123;prefix&#125;</span> || (wget <span class=\"variable\">$&#123;url&#125;</span> -O /tmp/<span class=\"variable\">$&#123;tar_name&#125;</span> &amp;&amp; tar xf /tmp/<span class=\"variable\">$&#123;tar_name&#125;</span> -C $(<span class=\"built_in\">dirname</span> <span class=\"variable\">$&#123;prefix&#125;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">rm</span> -f /tmp/<span class=\"variable\">$&#123;tar_name&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>更新动态链接库配置</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">egrep <span class=\"string\">&quot;^<span class=\"variable\">$&#123;prefix&#125;</span>/lib&quot;</span> /etc/ld.so.conf || (<span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;prefix&#125;</span>/lib&quot;</span> &gt;&gt; /etc/ld.so.conf &amp;&amp; ldconfig)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>确认配置</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ldconfig -p | grep <span class=\"variable\">$&#123;prefix&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>终端输出</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# ldconfig -p | grep $&#123;prefix&#125;</span><br><span class=\"line\">        libssl.so.<span class=\"number\">1</span>.<span class=\"number\">1</span> (libc6,x86-<span class=\"number\">64</span>) =&gt; /usr/local/openssl-<span class=\"number\">1</span>.<span class=\"number\">1</span>.<span class=\"number\">1</span>n/lib/libssl.so.<span class=\"number\">1</span>.<span class=\"number\">1</span></span><br><span class=\"line\">        libssl.so (libc6,x86-<span class=\"number\">64</span>) =&gt; /usr/local/openssl-<span class=\"number\">1</span>.<span class=\"number\">1</span>.<span class=\"number\">1</span>n/lib/libssl.so</span><br><span class=\"line\">        libcrypto.so.<span class=\"number\">1</span>.<span class=\"number\">1</span> (libc6,x86-<span class=\"number\">64</span>) =&gt; /usr/local/openssl-<span class=\"number\">1</span>.<span class=\"number\">1</span>.<span class=\"number\">1</span>n/lib/libcrypto.so.<span class=\"number\">1</span>.<span class=\"number\">1</span></span><br><span class=\"line\">        libcrypto.so (libc6,x86-<span class=\"number\">64</span>) =&gt; /usr/local/openssl-<span class=\"number\">1</span>.<span class=\"number\">1</span>.<span class=\"number\">1</span>n/lib/libcrypto.so</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-1-2-安装-Python-3-10\"><a href=\"#4-1-2-安装-Python-3-10\" class=\"headerlink\" title=\"4.1.2 安装 Python 3.10+\"></a>4.1.2 安装 Python 3.10+</h4><ul>\n<li>设置 Python 3.10+ 安装变量</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg_name=python</span><br><span class=\"line\">pkg_ver=3.10.5</span><br><span class=\"line\">pkg_short_num=3</span><br><span class=\"line\">pkg_ver_num=310</span><br><span class=\"line\">pkg_rel=1</span><br><span class=\"line\">pkg=<span class=\"variable\">$&#123;pkg_name&#125;</span>-<span class=\"variable\">$&#123;pkg_ver&#125;</span></span><br><span class=\"line\">tar_name=<span class=\"variable\">$&#123;pkg_name&#125;</span>-<span class=\"variable\">$&#123;pkg_ver&#125;</span>-<span class=\"variable\">$&#123;pkg_rel&#125;</span>.el7.x86_64.tar.gz</span><br><span class=\"line\">url=http://dl.cdgeekcamp.com/centos/7/python/3/<span class=\"variable\">$&#123;tar_name&#125;</span></span><br><span class=\"line\">prefix=/usr/local/<span class=\"variable\">$&#123;pkg&#125;</span></span><br><span class=\"line\">bin_dir=<span class=\"variable\">$&#123;prefix&#125;</span>/bin</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>安装 Python 3.10+ 软件包</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">test</span> -d <span class=\"variable\">$&#123;prefix&#125;</span> || (wget <span class=\"variable\">$&#123;url&#125;</span> -O /tmp/<span class=\"variable\">$&#123;tar_name&#125;</span> &amp;&amp; tar xf /tmp/<span class=\"variable\">$&#123;tar_name&#125;</span> -C $(<span class=\"built_in\">dirname</span> <span class=\"variable\">$&#123;prefix&#125;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">rm</span> -f /tmp/<span class=\"variable\">$&#123;tar_name&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>设置环境变量</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;export PATH=<span class=\"variable\">$&#123;bin_dir&#125;</span>:<span class=\"variable\">$&#123;PATH&#125;</span>&quot;</span> &gt; /etc/profile.d/python<span class=\"variable\">$&#123;pkg_short_num&#125;</span>.sh</span><br><span class=\"line\">. /etc/profile</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>确认设置</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">which</span> python<span class=\"variable\">$&#123;pkg_short_num&#125;</span> | grep <span class=\"variable\">$&#123;prefix&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>终端输出</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/python-<span class=\"number\">3</span>.<span class=\"number\">10</span>.<span class=\"number\">5</span>/bin/python3</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>设置软链接</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"variable\">$&#123;bin_dir&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">test</span> -L pip<span class=\"variable\">$&#123;pkg_ver_num&#125;</span> || <span class=\"built_in\">ln</span> -v -s pip<span class=\"variable\">$&#123;pkg_short_num&#125;</span> pip<span class=\"variable\">$&#123;pkg_ver_num&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">test</span> -L python<span class=\"variable\">$&#123;pkg_ver_num&#125;</span> || <span class=\"built_in\">ln</span> -v -s python<span class=\"variable\">$&#123;pkg_short_num&#125;</span> python<span class=\"variable\">$&#123;pkg_ver_num&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">&quot;PIP软链接：pip<span class=\"variable\">$&#123;pkg_ver_num&#125;</span>\\nPython3软链接：python<span class=\"variable\">$&#123;pkg_ver_num&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>测试 pip 命令</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">&quot;执行命令：pip<span class=\"variable\">$&#123;pkg_ver_num&#125;</span> list\\n&quot;</span> &amp;&amp; pip<span class=\"variable\">$&#123;pkg_ver_num&#125;</span> list</span><br></pre></td></tr></table></figure>\n\n<p><strong>终端输出</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">执行命令：pip310 list</span><br><span class=\"line\"></span><br><span class=\"line\">Package    Version</span><br><span class=\"line\">---------- -------</span><br><span class=\"line\">pip        <span class=\"number\">22</span>.<span class=\"number\">1</span>.<span class=\"number\">2</span></span><br><span class=\"line\">setuptools <span class=\"number\">58</span>.<span class=\"number\">1</span>.<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">[notice] A new release of pip available: <span class=\"number\">22</span>.<span class=\"number\">1</span>.<span class=\"number\">2</span> -&gt; <span class=\"number\">24</span>.<span class=\"number\">3</span>.<span class=\"number\">1</span></span><br><span class=\"line\">[notice] To update, run: pip install --upgrade pip</span><br></pre></td></tr></table></figure>\n\n<p><em>若出现 notice，说明 pip 版本过低，可以执行 <code>pip install --upgrade pip</code> 来升级。</em></p>\n<p>注：可能会因为源的问题导致更新 pip 失败！</p>\n<ul>\n<li>配置 pip 换源</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p ~/.pip</span><br><span class=\"line\"><span class=\"built_in\">cat</span> &gt; ~/.pip/pip.conf &lt;&lt;<span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">[global]</span></span><br><span class=\"line\"><span class=\"string\">index-url = https://mirrors.aliyun.com/pypi/simple/</span></span><br><span class=\"line\"><span class=\"string\">trusted-host = mirrors.aliyun.com</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[install]</span></span><br><span class=\"line\"><span class=\"string\">use-deprecated=legacy-resolver</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-安装命令行编辑工具\"><a href=\"#4-2-安装命令行编辑工具\" class=\"headerlink\" title=\"4.2 安装命令行编辑工具\"></a>4.2 安装命令行编辑工具</h3><h4 id=\"4-2-1-XML-编辑工具\"><a href=\"#4-2-1-XML-编辑工具\" class=\"headerlink\" title=\"4.2.1 XML 编辑工具\"></a>4.2.1 XML 编辑工具</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y xmlstarlet</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-2-INI-与-Java-Properties-编辑工具\"><a href=\"#4-2-2-INI-与-Java-Properties-编辑工具\" class=\"headerlink\" title=\"4.2.2 INI 与 Java Properties 编辑工具\"></a>4.2.2 INI 与 Java Properties 编辑工具</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y crudini</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"5-设置系统时区\"><a href=\"#5-设置系统时区\" class=\"headerlink\" title=\"5. 设置系统时区\"></a>5. 设置系统时区</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">yes</span>|<span class=\"built_in\">cp</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"6-安装时间同步服务\"><a href=\"#6-安装时间同步服务\" class=\"headerlink\" title=\"6. 安装时间同步服务\"></a>6. 安装时间同步服务</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y chrony</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> chronyd</span><br><span class=\"line\">systemctl start chronyd</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"7-禁用-IPv6\"><a href=\"#7-禁用-IPv6\" class=\"headerlink\" title=\"7. 禁用 IPv6\"></a>7. 禁用 IPv6</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;net.ipv6.conf.all.disable_ipv6 = 1&quot;</span> &gt;&gt;  /etc/sysctl.conf</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;net.ipv6.conf.default.disable_ipv6 = 1&quot;</span> &gt;&gt;  /etc/sysctl.conf</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"8-删除安装日志\"><a href=\"#8-删除安装日志\" class=\"headerlink\" title=\"8. 删除安装日志\"></a>8. 删除安装日志</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> -f ~/anaconda-ks.cfg  ~/install.log  ~/install.log.syslog</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"9-禁用-SELinux\"><a href=\"#9-禁用-SELinux\" class=\"headerlink\" title=\"9. 禁用 SELinux\"></a>9. 禁用 SELinux</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> SELINUX=disabled&gt;/etc/selinux/config</span><br><span class=\"line\"><span class=\"built_in\">echo</span> SELINUXTYPE=targeted&gt;&gt;/etc/selinux/config</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"10-关闭防火墙\"><a href=\"#10-关闭防火墙\" class=\"headerlink\" title=\"10. 关闭防火墙\"></a>10. 关闭防火墙</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld</span><br><span class=\"line\">systemctl stop firewalld</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"11-设置最大文件句柄\"><a href=\"#11-设置最大文件句柄\" class=\"headerlink\" title=\"11. 设置最大文件句柄\"></a>11. 设置最大文件句柄</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;* soft nofile 65535&quot;</span> | <span class=\"built_in\">sudo</span> <span class=\"built_in\">tee</span> -a /etc/security/limits.conf</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;* hard nofile 65535&quot;</span> | <span class=\"built_in\">sudo</span> <span class=\"built_in\">tee</span> -a /etc/security/limits.conf</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"12-优化-SSH-服务\"><a href=\"#12-优化-SSH-服务\" class=\"headerlink\" title=\"12. 优化 SSH 服务\"></a>12. 优化 SSH 服务</h2><ul>\n<li>修改 sshd_config</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i <span class=\"string\">&quot;s/#UseDNS yes/UseDNS no/&quot;</span> /etc/ssh/sshd_config</span><br><span class=\"line\">sed -i <span class=\"string\">&quot;s/GSSAPIAuthentication yes/GSSAPIAuthentication no/&quot;</span> /etc/ssh/sshd_config</span><br><span class=\"line\">sed -i <span class=\"string\">&quot;s/GSSAPICleanupCredentials yes/GSSAPICleanupCredentials no/&quot;</span> /etc/ssh/sshd_config</span><br><span class=\"line\">sed -i <span class=\"string\">&quot;s/#MaxAuthTries 6/MaxAuthTries 10/&quot;</span> /etc/ssh/sshd_config</span><br><span class=\"line\">sed -i <span class=\"string\">&quot;s/#ClientAliveInterval 0/ClientAliveInterval 30/&quot;</span> /etc/ssh/sshd_config</span><br><span class=\"line\">sed -i <span class=\"string\">&quot;s/#ClientAliveCountMax 3/ClientAliveCountMax 10/&quot;</span> /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>重载配置</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl reload sshd</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"13-设置主机名\"><a href=\"#13-设置主机名\" class=\"headerlink\" title=\"13. 设置主机名\"></a>13. 设置主机名</h2><h3 id=\"13-1-初始化本地解析设置\"><a href=\"#13-1-初始化本地解析设置\" class=\"headerlink\" title=\"13.1 初始化本地解析设置\"></a>13.1 初始化本地解析设置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4&#x27;</span> &gt; /etc/hosts</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"14-重启\"><a href=\"#14-重启\" class=\"headerlink\" title=\"14. 重启\"></a>14. 重启</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n\n<hr>\n","excerpt":"","more":"<hr>\n<h1 id=\"CentOS7初始化与优化配置\"><a href=\"#CentOS7初始化与优化配置\" class=\"headerlink\" title=\"CentOS7初始化与优化配置\"></a>CentOS7初始化与优化配置</h1><h2 id=\"1-配置-YUM\"><a href=\"#1-配置-YUM\" class=\"headerlink\" title=\"1. 配置 YUM\"></a>1. 配置 YUM</h2><h3 id=\"1-1-仅安装-64-位软件包\"><a href=\"#1-1-仅安装-64-位软件包\" class=\"headerlink\" title=\"1.1 仅安装 64 位软件包\"></a>1.1 仅安装 64 位软件包</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;exclude=*.i386 *.i586 *.i686&quot;</span> &gt;&gt; /etc/yum.conf</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-强制-YUM-使用-IPv4\"><a href=\"#1-2-强制-YUM-使用-IPv4\" class=\"headerlink\" title=\"1.2 强制 YUM 使用 IPv4\"></a>1.2 强制 YUM 使用 IPv4</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;ip_resolve=4&#x27;</span> &gt;&gt; /etc/yum.conf</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"2-更新系统\"><a href=\"#2-更新系统\" class=\"headerlink\" title=\"2. 更新系统\"></a>2. 更新系统</h2><h3 id=\"2-1-YUM-换源\"><a href=\"#2-1-YUM-换源\" class=\"headerlink\" title=\"2.1 YUM 换源\"></a>2.1 YUM 换源</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cat</span> &lt;&lt;<span class=\"string\">EOF &gt; /etc/yum.repos.d/CentOS-Base.repo</span></span><br><span class=\"line\"><span class=\"string\">[base]</span></span><br><span class=\"line\"><span class=\"string\">name=CentOS-\\$releasever - Base</span></span><br><span class=\"line\"><span class=\"string\">baseurl=https://mirrors.aliyun.com/centos/\\$releasever/os/\\$basearch/</span></span><br><span class=\"line\"><span class=\"string\">gpgcheck=1</span></span><br><span class=\"line\"><span class=\"string\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[updates]</span></span><br><span class=\"line\"><span class=\"string\">name=CentOS-\\$releasever - Updates</span></span><br><span class=\"line\"><span class=\"string\">baseurl=https://mirrors.aliyun.com/centos/\\$releasever/updates/\\$basearch/</span></span><br><span class=\"line\"><span class=\"string\">gpgcheck=1</span></span><br><span class=\"line\"><span class=\"string\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[extras]</span></span><br><span class=\"line\"><span class=\"string\">name=CentOS-\\$releasever - Extras</span></span><br><span class=\"line\"><span class=\"string\">baseurl=https://mirrors.aliyun.com/centos/\\$releasever/extras/\\$basearch/</span></span><br><span class=\"line\"><span class=\"string\">gpgcheck=1</span></span><br><span class=\"line\"><span class=\"string\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum clean all</span><br><span class=\"line\">yum makecache</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-更新\"><a href=\"#2-2-更新\" class=\"headerlink\" title=\"2.2 更新\"></a>2.2 更新</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum update -y</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"3-EPEL-镜像设置\"><a href=\"#3-EPEL-镜像设置\" class=\"headerlink\" title=\"3. EPEL 镜像设置\"></a>3. EPEL 镜像设置</h2><h3 id=\"3-1-安装-EPEL-软件包\"><a href=\"#3-1-安装-EPEL-软件包\" class=\"headerlink\" title=\"3.1 安装 EPEL 软件包\"></a>3.1 安装 EPEL 软件包</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y epel-release</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-设置国内镜像服务器\"><a href=\"#3-2-设置国内镜像服务器\" class=\"headerlink\" title=\"3.2 设置国内镜像服务器\"></a>3.2 设置国内镜像服务器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -e <span class=\"string\">&#x27;s!^metalink=!#metalink=!g&#x27;</span> \\</span><br><span class=\"line\">    -e <span class=\"string\">&#x27;s!^#baseurl=!baseurl=!g&#x27;</span> \\</span><br><span class=\"line\">    -e <span class=\"string\">&#x27;s!//download\\.fedoraproject\\.org/pub!//mirrors.aliyun.com!g&#x27;</span> \\</span><br><span class=\"line\">    -e <span class=\"string\">&#x27;s!http://mirrors!https://mirrors!g&#x27;</span> \\</span><br><span class=\"line\">    -i /etc/yum.repos.d/epel*.repo</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-创建-YUM-缓存\"><a href=\"#3-3-创建-YUM-缓存\" class=\"headerlink\" title=\"3.3 创建 YUM 缓存\"></a>3.3 创建 YUM 缓存</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum makecache</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"4-安装常用软件\"><a href=\"#4-安装常用软件\" class=\"headerlink\" title=\"4. 安装常用软件\"></a>4. 安装常用软件</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y vim-enhanced wget curl yum-utils tree pwgen unzip expect tar xz bash-completion-extras</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-1-安装-Python-3-10\"><a href=\"#4-1-安装-Python-3-10\" class=\"headerlink\" title=\"4.1 安装 Python 3.10+\"></a>4.1 安装 Python 3.10+</h3><h4 id=\"4-1-1-安装依赖：OpenSSL-1-1\"><a href=\"#4-1-1-安装依赖：OpenSSL-1-1\" class=\"headerlink\" title=\"4.1.1 安装依赖：OpenSSL 1.1+\"></a>4.1.1 安装依赖：OpenSSL 1.1+</h4><ul>\n<li>安装 OpenSSL 1.1+ 软件包</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg_name=openssl</span><br><span class=\"line\">pkg_ver=1.1.1n</span><br><span class=\"line\">pkg_rel=1</span><br><span class=\"line\">pkg=<span class=\"variable\">$&#123;pkg_name&#125;</span>-<span class=\"variable\">$&#123;pkg_ver&#125;</span></span><br><span class=\"line\">tar_name=<span class=\"variable\">$&#123;pkg_name&#125;</span>-<span class=\"variable\">$&#123;pkg_ver&#125;</span>-<span class=\"variable\">$&#123;pkg_rel&#125;</span>.el7.x86_64.tar.gz</span><br><span class=\"line\">url=http://dl.cdgeekcamp.com/centos/7/<span class=\"variable\">$&#123;pkg_name&#125;</span>/<span class=\"variable\">$&#123;pkg_ver&#125;</span>/<span class=\"variable\">$&#123;tar_name&#125;</span></span><br><span class=\"line\">prefix=/usr/local/<span class=\"variable\">$&#123;pkg&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">test</span> -d <span class=\"variable\">$&#123;prefix&#125;</span> || (wget <span class=\"variable\">$&#123;url&#125;</span> -O /tmp/<span class=\"variable\">$&#123;tar_name&#125;</span> &amp;&amp; tar xf /tmp/<span class=\"variable\">$&#123;tar_name&#125;</span> -C $(<span class=\"built_in\">dirname</span> <span class=\"variable\">$&#123;prefix&#125;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">rm</span> -f /tmp/<span class=\"variable\">$&#123;tar_name&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>更新动态链接库配置</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">egrep <span class=\"string\">&quot;^<span class=\"variable\">$&#123;prefix&#125;</span>/lib&quot;</span> /etc/ld.so.conf || (<span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;prefix&#125;</span>/lib&quot;</span> &gt;&gt; /etc/ld.so.conf &amp;&amp; ldconfig)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>确认配置</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ldconfig -p | grep <span class=\"variable\">$&#123;prefix&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>终端输出</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# ldconfig -p | grep $&#123;prefix&#125;</span><br><span class=\"line\">        libssl.so.<span class=\"number\">1</span>.<span class=\"number\">1</span> (libc6,x86-<span class=\"number\">64</span>) =&gt; /usr/local/openssl-<span class=\"number\">1</span>.<span class=\"number\">1</span>.<span class=\"number\">1</span>n/lib/libssl.so.<span class=\"number\">1</span>.<span class=\"number\">1</span></span><br><span class=\"line\">        libssl.so (libc6,x86-<span class=\"number\">64</span>) =&gt; /usr/local/openssl-<span class=\"number\">1</span>.<span class=\"number\">1</span>.<span class=\"number\">1</span>n/lib/libssl.so</span><br><span class=\"line\">        libcrypto.so.<span class=\"number\">1</span>.<span class=\"number\">1</span> (libc6,x86-<span class=\"number\">64</span>) =&gt; /usr/local/openssl-<span class=\"number\">1</span>.<span class=\"number\">1</span>.<span class=\"number\">1</span>n/lib/libcrypto.so.<span class=\"number\">1</span>.<span class=\"number\">1</span></span><br><span class=\"line\">        libcrypto.so (libc6,x86-<span class=\"number\">64</span>) =&gt; /usr/local/openssl-<span class=\"number\">1</span>.<span class=\"number\">1</span>.<span class=\"number\">1</span>n/lib/libcrypto.so</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-1-2-安装-Python-3-10\"><a href=\"#4-1-2-安装-Python-3-10\" class=\"headerlink\" title=\"4.1.2 安装 Python 3.10+\"></a>4.1.2 安装 Python 3.10+</h4><ul>\n<li>设置 Python 3.10+ 安装变量</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg_name=python</span><br><span class=\"line\">pkg_ver=3.10.5</span><br><span class=\"line\">pkg_short_num=3</span><br><span class=\"line\">pkg_ver_num=310</span><br><span class=\"line\">pkg_rel=1</span><br><span class=\"line\">pkg=<span class=\"variable\">$&#123;pkg_name&#125;</span>-<span class=\"variable\">$&#123;pkg_ver&#125;</span></span><br><span class=\"line\">tar_name=<span class=\"variable\">$&#123;pkg_name&#125;</span>-<span class=\"variable\">$&#123;pkg_ver&#125;</span>-<span class=\"variable\">$&#123;pkg_rel&#125;</span>.el7.x86_64.tar.gz</span><br><span class=\"line\">url=http://dl.cdgeekcamp.com/centos/7/python/3/<span class=\"variable\">$&#123;tar_name&#125;</span></span><br><span class=\"line\">prefix=/usr/local/<span class=\"variable\">$&#123;pkg&#125;</span></span><br><span class=\"line\">bin_dir=<span class=\"variable\">$&#123;prefix&#125;</span>/bin</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>安装 Python 3.10+ 软件包</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">test</span> -d <span class=\"variable\">$&#123;prefix&#125;</span> || (wget <span class=\"variable\">$&#123;url&#125;</span> -O /tmp/<span class=\"variable\">$&#123;tar_name&#125;</span> &amp;&amp; tar xf /tmp/<span class=\"variable\">$&#123;tar_name&#125;</span> -C $(<span class=\"built_in\">dirname</span> <span class=\"variable\">$&#123;prefix&#125;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">rm</span> -f /tmp/<span class=\"variable\">$&#123;tar_name&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>设置环境变量</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;export PATH=<span class=\"variable\">$&#123;bin_dir&#125;</span>:<span class=\"variable\">$&#123;PATH&#125;</span>&quot;</span> &gt; /etc/profile.d/python<span class=\"variable\">$&#123;pkg_short_num&#125;</span>.sh</span><br><span class=\"line\">. /etc/profile</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>确认设置</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">which</span> python<span class=\"variable\">$&#123;pkg_short_num&#125;</span> | grep <span class=\"variable\">$&#123;prefix&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>终端输出</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/python-<span class=\"number\">3</span>.<span class=\"number\">10</span>.<span class=\"number\">5</span>/bin/python3</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>设置软链接</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"variable\">$&#123;bin_dir&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">test</span> -L pip<span class=\"variable\">$&#123;pkg_ver_num&#125;</span> || <span class=\"built_in\">ln</span> -v -s pip<span class=\"variable\">$&#123;pkg_short_num&#125;</span> pip<span class=\"variable\">$&#123;pkg_ver_num&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">test</span> -L python<span class=\"variable\">$&#123;pkg_ver_num&#125;</span> || <span class=\"built_in\">ln</span> -v -s python<span class=\"variable\">$&#123;pkg_short_num&#125;</span> python<span class=\"variable\">$&#123;pkg_ver_num&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">&quot;PIP软链接：pip<span class=\"variable\">$&#123;pkg_ver_num&#125;</span>\\nPython3软链接：python<span class=\"variable\">$&#123;pkg_ver_num&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>测试 pip 命令</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">&quot;执行命令：pip<span class=\"variable\">$&#123;pkg_ver_num&#125;</span> list\\n&quot;</span> &amp;&amp; pip<span class=\"variable\">$&#123;pkg_ver_num&#125;</span> list</span><br></pre></td></tr></table></figure>\n\n<p><strong>终端输出</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">执行命令：pip310 list</span><br><span class=\"line\"></span><br><span class=\"line\">Package    Version</span><br><span class=\"line\">---------- -------</span><br><span class=\"line\">pip        <span class=\"number\">22</span>.<span class=\"number\">1</span>.<span class=\"number\">2</span></span><br><span class=\"line\">setuptools <span class=\"number\">58</span>.<span class=\"number\">1</span>.<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">[notice] A new release of pip available: <span class=\"number\">22</span>.<span class=\"number\">1</span>.<span class=\"number\">2</span> -&gt; <span class=\"number\">24</span>.<span class=\"number\">3</span>.<span class=\"number\">1</span></span><br><span class=\"line\">[notice] To update, run: pip install --upgrade pip</span><br></pre></td></tr></table></figure>\n\n<p><em>若出现 notice，说明 pip 版本过低，可以执行 <code>pip install --upgrade pip</code> 来升级。</em></p>\n<p>注：可能会因为源的问题导致更新 pip 失败！</p>\n<ul>\n<li>配置 pip 换源</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p ~/.pip</span><br><span class=\"line\"><span class=\"built_in\">cat</span> &gt; ~/.pip/pip.conf &lt;&lt;<span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">[global]</span></span><br><span class=\"line\"><span class=\"string\">index-url = https://mirrors.aliyun.com/pypi/simple/</span></span><br><span class=\"line\"><span class=\"string\">trusted-host = mirrors.aliyun.com</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[install]</span></span><br><span class=\"line\"><span class=\"string\">use-deprecated=legacy-resolver</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-安装命令行编辑工具\"><a href=\"#4-2-安装命令行编辑工具\" class=\"headerlink\" title=\"4.2 安装命令行编辑工具\"></a>4.2 安装命令行编辑工具</h3><h4 id=\"4-2-1-XML-编辑工具\"><a href=\"#4-2-1-XML-编辑工具\" class=\"headerlink\" title=\"4.2.1 XML 编辑工具\"></a>4.2.1 XML 编辑工具</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y xmlstarlet</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-2-INI-与-Java-Properties-编辑工具\"><a href=\"#4-2-2-INI-与-Java-Properties-编辑工具\" class=\"headerlink\" title=\"4.2.2 INI 与 Java Properties 编辑工具\"></a>4.2.2 INI 与 Java Properties 编辑工具</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y crudini</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"5-设置系统时区\"><a href=\"#5-设置系统时区\" class=\"headerlink\" title=\"5. 设置系统时区\"></a>5. 设置系统时区</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">yes</span>|<span class=\"built_in\">cp</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"6-安装时间同步服务\"><a href=\"#6-安装时间同步服务\" class=\"headerlink\" title=\"6. 安装时间同步服务\"></a>6. 安装时间同步服务</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y chrony</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> chronyd</span><br><span class=\"line\">systemctl start chronyd</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"7-禁用-IPv6\"><a href=\"#7-禁用-IPv6\" class=\"headerlink\" title=\"7. 禁用 IPv6\"></a>7. 禁用 IPv6</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;net.ipv6.conf.all.disable_ipv6 = 1&quot;</span> &gt;&gt;  /etc/sysctl.conf</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;net.ipv6.conf.default.disable_ipv6 = 1&quot;</span> &gt;&gt;  /etc/sysctl.conf</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"8-删除安装日志\"><a href=\"#8-删除安装日志\" class=\"headerlink\" title=\"8. 删除安装日志\"></a>8. 删除安装日志</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> -f ~/anaconda-ks.cfg  ~/install.log  ~/install.log.syslog</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"9-禁用-SELinux\"><a href=\"#9-禁用-SELinux\" class=\"headerlink\" title=\"9. 禁用 SELinux\"></a>9. 禁用 SELinux</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> SELINUX=disabled&gt;/etc/selinux/config</span><br><span class=\"line\"><span class=\"built_in\">echo</span> SELINUXTYPE=targeted&gt;&gt;/etc/selinux/config</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"10-关闭防火墙\"><a href=\"#10-关闭防火墙\" class=\"headerlink\" title=\"10. 关闭防火墙\"></a>10. 关闭防火墙</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld</span><br><span class=\"line\">systemctl stop firewalld</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"11-设置最大文件句柄\"><a href=\"#11-设置最大文件句柄\" class=\"headerlink\" title=\"11. 设置最大文件句柄\"></a>11. 设置最大文件句柄</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;* soft nofile 65535&quot;</span> | <span class=\"built_in\">sudo</span> <span class=\"built_in\">tee</span> -a /etc/security/limits.conf</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;* hard nofile 65535&quot;</span> | <span class=\"built_in\">sudo</span> <span class=\"built_in\">tee</span> -a /etc/security/limits.conf</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"12-优化-SSH-服务\"><a href=\"#12-优化-SSH-服务\" class=\"headerlink\" title=\"12. 优化 SSH 服务\"></a>12. 优化 SSH 服务</h2><ul>\n<li>修改 sshd_config</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i <span class=\"string\">&quot;s/#UseDNS yes/UseDNS no/&quot;</span> /etc/ssh/sshd_config</span><br><span class=\"line\">sed -i <span class=\"string\">&quot;s/GSSAPIAuthentication yes/GSSAPIAuthentication no/&quot;</span> /etc/ssh/sshd_config</span><br><span class=\"line\">sed -i <span class=\"string\">&quot;s/GSSAPICleanupCredentials yes/GSSAPICleanupCredentials no/&quot;</span> /etc/ssh/sshd_config</span><br><span class=\"line\">sed -i <span class=\"string\">&quot;s/#MaxAuthTries 6/MaxAuthTries 10/&quot;</span> /etc/ssh/sshd_config</span><br><span class=\"line\">sed -i <span class=\"string\">&quot;s/#ClientAliveInterval 0/ClientAliveInterval 30/&quot;</span> /etc/ssh/sshd_config</span><br><span class=\"line\">sed -i <span class=\"string\">&quot;s/#ClientAliveCountMax 3/ClientAliveCountMax 10/&quot;</span> /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>重载配置</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl reload sshd</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"13-设置主机名\"><a href=\"#13-设置主机名\" class=\"headerlink\" title=\"13. 设置主机名\"></a>13. 设置主机名</h2><h3 id=\"13-1-初始化本地解析设置\"><a href=\"#13-1-初始化本地解析设置\" class=\"headerlink\" title=\"13.1 初始化本地解析设置\"></a>13.1 初始化本地解析设置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4&#x27;</span> &gt; /etc/hosts</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"14-重启\"><a href=\"#14-重启\" class=\"headerlink\" title=\"14. 重启\"></a>14. 重启</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n\n<hr>\n"},{"title":"ArchLinux安装配置","date":"2024-11-26T06:35:57.000Z","_content":"\n# 安装前说明\n\n*ArchLinux安装可以在启动镜像之后，通过SSH连接复制以下命令字符完成安装。步骤如下：*\n\n当然这里涉及到联网的问题，请参考[连接WIFI](#4-连接WIFI)\n\n1. `ip a` 查看IP地址；\n2. `systemctl start sshd` 启动SSH服务；\n3. `passwd` 修改启动镜像root用户密码；\n4. 使用任意SSH客户端软件，连接启动镜像IP地址的22端口即可。\n\n*如果是安装中途连接SSH的，请注意适时执行 `arch-chroot /mnt` 命令进入安装目标硬盘。否则，所有安装操作重启系统后无效（安装到了启动镜像中）。*\n\n# 1. 建立硬盘分区\n\n```bash\t\ncfdisk\n```\n\n*按照本教程安装<font color='red'>ArchLinux</font> ，硬盘至少需要10G以上。*\n\n*如果使用UEFI启动方式，需要新建 `/dev/sda1` 容量300~500M，并且设置为启动分区，其余分区编号顺延。*\n\n## 1.1. 新建EFI分区\n\n![](/img/arch1.png)\n\n## 1.2. 新建交换分区\n\n*可选可不选，类似于虚拟内存*\n\n![](/img/arch2.png)\n\n## 1.3. 新建主分区\n\n*剩下全部建立到一起为根目录分区，类型默认即可*。\n\n![](/img/arch3.png)\n\n选中`Write`,输入`yes`确定，选择`Quit`退出分区。\n\n## 1.4. 查看分区情况\n\n```bash\nfdisk -l\n```\n\n*确定好自己每一个分区的类型，目的，名称。*\n\n![](/img/arch4.png)\n\n# 2. 格式化分区\n\n## 2.1. 格式化主分区\n\n```bash\nmkfs.ext4 /dev/sda3\n```\n\n*此为格式化分区，会擦除数据*\n\n```cmd\nroot@archiso ~ # mkfs.ext4 /dev/sda3\nmke2fs 1.47.1 (20-May-2024)\nCreating filesystem with 4065792 4k blocks and 1018000 inodes\nFilesystem UUID: 809a516d-805b-4ec4-afa9-dc7538873a12\nSuperblock backups stored on blocks:\n        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208\n\nAllocating group tables: done\nWriting inode tables: done\nCreating journal (16384 blocks): done\nWriting superblocks and filesystem accounting information: done\n```\n\n## 2.2. 格式化交换分区（未设置就跳过）\n\n```bash\t\nmkswap /dev/sda2\n```\n\n```cmd\nroot@archiso ~ # mkswap /dev/sda2\nSetting up swapspace version 1, size = 4 GiB (4294963200 bytes)\nno label, UUID=e32cf483-6326-4d86-8210-bfe78fefb050\n```\n\n## 2.3. 格式化EFI分区\n\n```bash\nmkfs.fat -F 32 /dev/sda1\n```\n\n```cmd\nroot@archiso ~ # mkfs.fat -F 32 /dev/sda1\nmkfs.fat 4.2 (2021-01-31)\n```\n\n*可运行`lsblk -f`*确认分区或格式错误\n\n```cmd\nroot@archiso ~ # lsblk -f\nNAME   FSTYPE   FSVER            LABEL       UUID                                 FSAVAIL FSUSE% MOUNTPOINTS\nloop0  squashfs 4.0                                                                     0   100% /run/archiso/airootfs\nsda\n├─sda1 vfat     FAT32                        B52E-2E89\n├─sda2 swap     1                            e32cf483-6326-4d86-8210-bfe78fefb050\n└─sda3 ext4     1.0                          809a516d-805b-4ec4-afa9-dc7538873a12\nsr0    iso9660  Joliet Extension ARCH_202411 2024-11-01-10-09-22-00                     0   100% /run/archiso/bootmnt\n```\n\n# 3. 挂载分区\n\n- 挂载主分区\n\n```bash\nmount /dev/sda3 /mnt\n```\n\n- 挂载EFI分区\n\n```bash\nmount --mkdir /dev/sda1 /mnt/boot\n```\n\n- 挂载交换分区\n\n```bash\nswapon /dev/sda2\n```\n\n# 4. 连接WIFI\n\n如果想要了解该方法的原理请参考[官方文档](https://wiki.archlinux.org/title/Iwd#iwctl)\n\n*这里以WIFI网卡名称 wlan0  和 WIFI硬件名称 phy0为例*\n\n*执行`iwctl`命令，进入iwd交互shell：*\n\n```cmd\n# 获得WIFI网卡名称 wlan0 和WIFI硬件名称 phy0\ndevice list\n\ndevice wlan0 set-property Powered on\nadapter phy0 set-property Powered on\n\n# 不会有任何屏幕输出\nstation wlan0 scan\n\n# 列表WIFI清单\nstation wlan0 get-networks\n\n# 会提示输入连接密码，其中 GEEKCAMP_5G 是选择的WIFI SSID\nstation wlan0 connect GEEKCAMP_5G\n\n# 查看WIFI连接\nstation\twlan0 show\n\n# 退出iwd Shell\nexit\n```\n\n*测试网络连接：*\n\n```bash\nping qq.com\n```\n\n# 5. 基础包安装\n\n## 5.1. 设置国内镜像源\n\n```bash\ncat << EOF > /etc/pacman.d/mirrorlist\nServer = https://mirrors.tuna.tsinghua.edu.cn/archlinux/\\$repo/os/\\$arch\nEOF\n```\n\n## 5.2. 安装基础包\n\n```bash\t\npacstrap /mnt base\n```\n\n# 6. 开机挂载分区\n\n```bash\ngenfstab -U /mnt >> /mnt/etc/fstab\n```\n\n# 7. 切换到全新ArchLinux系统\n\n```bash\narch-chroot /mnt\n```\n\n## 7.1. 设置国内镜像源\n\n```bash\ncat << EOF > /etc/pacman.d/mirrorlist\nServer = https://mirrors.aliyun.com/archlinux/\\$repo/os/\\$arch\nEOF\n```\n\n## 7.2. 安装vim sudo\n\n```bash\npacman -S vim sudo \n```\n\n## 7.3. 设置时区\n\n```bash\nln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n```\n\n## 7.4. 本地化语言支持\n\n*启用语言参数：*\n\n```bash\necho \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen\necho \"zh_CN.GB18030 GB18030\" >> /etc/locale.gen\necho \"zh_CN.GBK GBK\" >> /etc/locale.gen\necho \"zh_CN.UTF-8 UTF-8\" >> /etc/locale.gen\necho \"zh_CN GB2312\" >> /etc/locale.gen\n```\n\n*生成locale：*\n\n```bash\nlocale-gen\n```\n\n*设置系统默认语言：*\n\n```bash\necho \"LANG=en_US.UTF-8\" > /etc/locale.conf\n```\n\n<font color=\"red\">全局设置为英文，tty控制台不会乱码，新用户默认目录也是英文名称，方便使用。</font>\n\n<font color=\"red\">新用户登录桌面后，自行找到控制面板中的 “Region and Language”（区域和语言）设置为 `汉语` 即可。设置后，如果提示更新目录名称为中文，请选择 “保留旧的文件名”，除非你想在终端经常打中文目录名称（累死你~~）。</font>\n\n## 7.5. 键盘布局\n\n```bash\necho echo \"KEYMAP=us\" > /etc/vconsole.conf\n```\n\n## 7.6. 设置主机名\n\n```bash\necho 'archlinux' > /etc/hostname\n```\n\n## 7.7. 本地网络配置\n\n```bash\necho '127.0.0.1 localhost' > /etc/hosts\n# 添加主机名对应的设置\necho '127.0.0.1 archlinux' >> /etc/hosts\n```\n\n## 7.8.  设置root密码\n\n```bash\npasswd\n```\n\n## 7.9. 创建用户\n\n*新增用户*\n\n```bash\nuseradd -m 你的用户名\n```\n\n*设置用户密码*\n\n```bash\npasswd 你的用户名\n```\n\n*添加到sudo列表*\n\n```bash\necho '你的用户名   ALL=(ALL:ALL) NOPASSWD: ALL' >> /etc/sudoers\n```\n\n## 7.10. 安装Grub引导\n\n```bash\npacman -S grub efibootmgr\n\ngrub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=arch\n\npacman -S linux linux-headers linux-lts linux-lts-headers\n\ngrub-mkconfig -o /boot/grub/grub.cfg\n```\n\n<font color=\"red\">Windows+Linux双引导</font>\n\n```bash\npacman -S grub os-prober ntfs-3g\nsed -i 's/#GRUB_DISABLE_OS_PROBER=false/GRUB_DISABLE_OS_PROBER=false/g' /etc/default/grub\n```\n\n<font color=\"red\">下次进入GNOME桌面后，执行 grub-mkconfig -o /boot/grub/grub.cfg​ 命令就会自动将Windows系统加入到Grub启动菜单</font>\n\n## 7.11. 安装桌面\n\n```bash\n# 更新软件包索引\npacman -Syy\n\n# 桌面环境\npacman -S gnome vim networkmanager\n\n# WIFI驱动\npacman -S linux-firmware\n\n# 拼音输入法\npacman -S ibus-sunpinyin sunpinyin sunpinyin-data\n\n# 显卡驱动\npacman -S xf86-video-fbdev xf86-video-intel xf86-video-vesa xf86-video-ati xf86-video-amdgpu\n\n# 汉字字体\npacman -S wqy-microhei wqy-zenhei\n\n# 开机启动\nsystemctl enable NetworkManager\nsystemctl enable gdm\n```\n\n## 7.12. 重启\n\n```bash\nexit\n\nreboot\n```\n\n## 7.13. 设置pacman\n\n*增加 `Arch Linux 中文社区仓库` 的腾讯镜像服务器：*\n\n```bash\n# 进入root\nsudo -i\n\ncat << EOF >> /etc/pacman.conf\n[archlinuxcn]\nServer = https://mirrors.cloud.tencent.com/archlinuxcn/\\$arch\nSigLevel = Optional TrustAll\nEOF\n\nexit\n```\n\n## 7.14. 安装常用软件\n\n```bash\nsudo pacman -Syy\n\nsudo pacman -S archlinuxcn-keyring\n\nsudo pacman -S gedit vim screen thunderbird thunderbird-i18n-zh-cn openssh bash-completion cmake git curl wget filezilla gcc make mlocate nginx ntp p7zip rsync virtualbox virtualbox-guest-iso virtualbox-host-dkms file-roller parted sshpass rdesktop qt5-base qt6-base fakeroot yay openssl wireshark-qt base-devel code gnome-terminal os-prober\n\nyay -S google-chrome\n```\n\n## 7.15. 系统设置\n\n```bash\n# GNOME 桌面设置\ngsettings set org.gnome.nautilus.preferences always-use-location-entry true\ngsettings set org.gnome.nautilus.preferences default-sort-order name\ngsettings set org.gtk.Settings.FileChooser sort-directories-first true\ngsettings set org.gnome.desktop.interface clock-show-date true\ngsettings set org.gnome.desktop.interface clock-show-seconds true\n# Ctrl+Shift+Alt+R 录像时，30秒后自动结束。设置为0,不限制\ngsettings set org.gnome.settings-daemon.plugins.media-keys max-screencast-length 0\n# 禁用最近文件访问记录\ngsettings set org.gnome.desktop.privacy remember-recent-files false\n\n# virtualbox 设置\nsudo gpasswd -a root vboxusers\nsudo gpasswd -a $USER vboxusers\n# wireshark 设置\nsudo gpasswd -a root wireshark\nsudo gpasswd -a $USER wireshark\n\n# 系统日志\nsudo gpasswd -a $USER adm\nsudo gpasswd -a $USER systemd-journal\nsudo gpasswd -a $USER wheel\n\n# docker\n#sudo gpasswd -a $USER docker\n\nsudo grpunconv\n\n# 开机启动\nsudo systemctl enable systemd-timesyncd\nsudo systemctl start systemd-timesyncd\nsudo systemctl enable sshd\nsudo systemctl mask tmp.mount\n```\n\n","source":"_posts/ArchLinux安装配置.md","raw":"---\ntitle: ArchLinux安装配置\ntags: ArchLinux\ncategories: ArchLinux\ndate: 2024-11-26 14:35:57\n---\n\n# 安装前说明\n\n*ArchLinux安装可以在启动镜像之后，通过SSH连接复制以下命令字符完成安装。步骤如下：*\n\n当然这里涉及到联网的问题，请参考[连接WIFI](#4-连接WIFI)\n\n1. `ip a` 查看IP地址；\n2. `systemctl start sshd` 启动SSH服务；\n3. `passwd` 修改启动镜像root用户密码；\n4. 使用任意SSH客户端软件，连接启动镜像IP地址的22端口即可。\n\n*如果是安装中途连接SSH的，请注意适时执行 `arch-chroot /mnt` 命令进入安装目标硬盘。否则，所有安装操作重启系统后无效（安装到了启动镜像中）。*\n\n# 1. 建立硬盘分区\n\n```bash\t\ncfdisk\n```\n\n*按照本教程安装<font color='red'>ArchLinux</font> ，硬盘至少需要10G以上。*\n\n*如果使用UEFI启动方式，需要新建 `/dev/sda1` 容量300~500M，并且设置为启动分区，其余分区编号顺延。*\n\n## 1.1. 新建EFI分区\n\n![](/img/arch1.png)\n\n## 1.2. 新建交换分区\n\n*可选可不选，类似于虚拟内存*\n\n![](/img/arch2.png)\n\n## 1.3. 新建主分区\n\n*剩下全部建立到一起为根目录分区，类型默认即可*。\n\n![](/img/arch3.png)\n\n选中`Write`,输入`yes`确定，选择`Quit`退出分区。\n\n## 1.4. 查看分区情况\n\n```bash\nfdisk -l\n```\n\n*确定好自己每一个分区的类型，目的，名称。*\n\n![](/img/arch4.png)\n\n# 2. 格式化分区\n\n## 2.1. 格式化主分区\n\n```bash\nmkfs.ext4 /dev/sda3\n```\n\n*此为格式化分区，会擦除数据*\n\n```cmd\nroot@archiso ~ # mkfs.ext4 /dev/sda3\nmke2fs 1.47.1 (20-May-2024)\nCreating filesystem with 4065792 4k blocks and 1018000 inodes\nFilesystem UUID: 809a516d-805b-4ec4-afa9-dc7538873a12\nSuperblock backups stored on blocks:\n        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208\n\nAllocating group tables: done\nWriting inode tables: done\nCreating journal (16384 blocks): done\nWriting superblocks and filesystem accounting information: done\n```\n\n## 2.2. 格式化交换分区（未设置就跳过）\n\n```bash\t\nmkswap /dev/sda2\n```\n\n```cmd\nroot@archiso ~ # mkswap /dev/sda2\nSetting up swapspace version 1, size = 4 GiB (4294963200 bytes)\nno label, UUID=e32cf483-6326-4d86-8210-bfe78fefb050\n```\n\n## 2.3. 格式化EFI分区\n\n```bash\nmkfs.fat -F 32 /dev/sda1\n```\n\n```cmd\nroot@archiso ~ # mkfs.fat -F 32 /dev/sda1\nmkfs.fat 4.2 (2021-01-31)\n```\n\n*可运行`lsblk -f`*确认分区或格式错误\n\n```cmd\nroot@archiso ~ # lsblk -f\nNAME   FSTYPE   FSVER            LABEL       UUID                                 FSAVAIL FSUSE% MOUNTPOINTS\nloop0  squashfs 4.0                                                                     0   100% /run/archiso/airootfs\nsda\n├─sda1 vfat     FAT32                        B52E-2E89\n├─sda2 swap     1                            e32cf483-6326-4d86-8210-bfe78fefb050\n└─sda3 ext4     1.0                          809a516d-805b-4ec4-afa9-dc7538873a12\nsr0    iso9660  Joliet Extension ARCH_202411 2024-11-01-10-09-22-00                     0   100% /run/archiso/bootmnt\n```\n\n# 3. 挂载分区\n\n- 挂载主分区\n\n```bash\nmount /dev/sda3 /mnt\n```\n\n- 挂载EFI分区\n\n```bash\nmount --mkdir /dev/sda1 /mnt/boot\n```\n\n- 挂载交换分区\n\n```bash\nswapon /dev/sda2\n```\n\n# 4. 连接WIFI\n\n如果想要了解该方法的原理请参考[官方文档](https://wiki.archlinux.org/title/Iwd#iwctl)\n\n*这里以WIFI网卡名称 wlan0  和 WIFI硬件名称 phy0为例*\n\n*执行`iwctl`命令，进入iwd交互shell：*\n\n```cmd\n# 获得WIFI网卡名称 wlan0 和WIFI硬件名称 phy0\ndevice list\n\ndevice wlan0 set-property Powered on\nadapter phy0 set-property Powered on\n\n# 不会有任何屏幕输出\nstation wlan0 scan\n\n# 列表WIFI清单\nstation wlan0 get-networks\n\n# 会提示输入连接密码，其中 GEEKCAMP_5G 是选择的WIFI SSID\nstation wlan0 connect GEEKCAMP_5G\n\n# 查看WIFI连接\nstation\twlan0 show\n\n# 退出iwd Shell\nexit\n```\n\n*测试网络连接：*\n\n```bash\nping qq.com\n```\n\n# 5. 基础包安装\n\n## 5.1. 设置国内镜像源\n\n```bash\ncat << EOF > /etc/pacman.d/mirrorlist\nServer = https://mirrors.tuna.tsinghua.edu.cn/archlinux/\\$repo/os/\\$arch\nEOF\n```\n\n## 5.2. 安装基础包\n\n```bash\t\npacstrap /mnt base\n```\n\n# 6. 开机挂载分区\n\n```bash\ngenfstab -U /mnt >> /mnt/etc/fstab\n```\n\n# 7. 切换到全新ArchLinux系统\n\n```bash\narch-chroot /mnt\n```\n\n## 7.1. 设置国内镜像源\n\n```bash\ncat << EOF > /etc/pacman.d/mirrorlist\nServer = https://mirrors.aliyun.com/archlinux/\\$repo/os/\\$arch\nEOF\n```\n\n## 7.2. 安装vim sudo\n\n```bash\npacman -S vim sudo \n```\n\n## 7.3. 设置时区\n\n```bash\nln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n```\n\n## 7.4. 本地化语言支持\n\n*启用语言参数：*\n\n```bash\necho \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen\necho \"zh_CN.GB18030 GB18030\" >> /etc/locale.gen\necho \"zh_CN.GBK GBK\" >> /etc/locale.gen\necho \"zh_CN.UTF-8 UTF-8\" >> /etc/locale.gen\necho \"zh_CN GB2312\" >> /etc/locale.gen\n```\n\n*生成locale：*\n\n```bash\nlocale-gen\n```\n\n*设置系统默认语言：*\n\n```bash\necho \"LANG=en_US.UTF-8\" > /etc/locale.conf\n```\n\n<font color=\"red\">全局设置为英文，tty控制台不会乱码，新用户默认目录也是英文名称，方便使用。</font>\n\n<font color=\"red\">新用户登录桌面后，自行找到控制面板中的 “Region and Language”（区域和语言）设置为 `汉语` 即可。设置后，如果提示更新目录名称为中文，请选择 “保留旧的文件名”，除非你想在终端经常打中文目录名称（累死你~~）。</font>\n\n## 7.5. 键盘布局\n\n```bash\necho echo \"KEYMAP=us\" > /etc/vconsole.conf\n```\n\n## 7.6. 设置主机名\n\n```bash\necho 'archlinux' > /etc/hostname\n```\n\n## 7.7. 本地网络配置\n\n```bash\necho '127.0.0.1 localhost' > /etc/hosts\n# 添加主机名对应的设置\necho '127.0.0.1 archlinux' >> /etc/hosts\n```\n\n## 7.8.  设置root密码\n\n```bash\npasswd\n```\n\n## 7.9. 创建用户\n\n*新增用户*\n\n```bash\nuseradd -m 你的用户名\n```\n\n*设置用户密码*\n\n```bash\npasswd 你的用户名\n```\n\n*添加到sudo列表*\n\n```bash\necho '你的用户名   ALL=(ALL:ALL) NOPASSWD: ALL' >> /etc/sudoers\n```\n\n## 7.10. 安装Grub引导\n\n```bash\npacman -S grub efibootmgr\n\ngrub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=arch\n\npacman -S linux linux-headers linux-lts linux-lts-headers\n\ngrub-mkconfig -o /boot/grub/grub.cfg\n```\n\n<font color=\"red\">Windows+Linux双引导</font>\n\n```bash\npacman -S grub os-prober ntfs-3g\nsed -i 's/#GRUB_DISABLE_OS_PROBER=false/GRUB_DISABLE_OS_PROBER=false/g' /etc/default/grub\n```\n\n<font color=\"red\">下次进入GNOME桌面后，执行 grub-mkconfig -o /boot/grub/grub.cfg​ 命令就会自动将Windows系统加入到Grub启动菜单</font>\n\n## 7.11. 安装桌面\n\n```bash\n# 更新软件包索引\npacman -Syy\n\n# 桌面环境\npacman -S gnome vim networkmanager\n\n# WIFI驱动\npacman -S linux-firmware\n\n# 拼音输入法\npacman -S ibus-sunpinyin sunpinyin sunpinyin-data\n\n# 显卡驱动\npacman -S xf86-video-fbdev xf86-video-intel xf86-video-vesa xf86-video-ati xf86-video-amdgpu\n\n# 汉字字体\npacman -S wqy-microhei wqy-zenhei\n\n# 开机启动\nsystemctl enable NetworkManager\nsystemctl enable gdm\n```\n\n## 7.12. 重启\n\n```bash\nexit\n\nreboot\n```\n\n## 7.13. 设置pacman\n\n*增加 `Arch Linux 中文社区仓库` 的腾讯镜像服务器：*\n\n```bash\n# 进入root\nsudo -i\n\ncat << EOF >> /etc/pacman.conf\n[archlinuxcn]\nServer = https://mirrors.cloud.tencent.com/archlinuxcn/\\$arch\nSigLevel = Optional TrustAll\nEOF\n\nexit\n```\n\n## 7.14. 安装常用软件\n\n```bash\nsudo pacman -Syy\n\nsudo pacman -S archlinuxcn-keyring\n\nsudo pacman -S gedit vim screen thunderbird thunderbird-i18n-zh-cn openssh bash-completion cmake git curl wget filezilla gcc make mlocate nginx ntp p7zip rsync virtualbox virtualbox-guest-iso virtualbox-host-dkms file-roller parted sshpass rdesktop qt5-base qt6-base fakeroot yay openssl wireshark-qt base-devel code gnome-terminal os-prober\n\nyay -S google-chrome\n```\n\n## 7.15. 系统设置\n\n```bash\n# GNOME 桌面设置\ngsettings set org.gnome.nautilus.preferences always-use-location-entry true\ngsettings set org.gnome.nautilus.preferences default-sort-order name\ngsettings set org.gtk.Settings.FileChooser sort-directories-first true\ngsettings set org.gnome.desktop.interface clock-show-date true\ngsettings set org.gnome.desktop.interface clock-show-seconds true\n# Ctrl+Shift+Alt+R 录像时，30秒后自动结束。设置为0,不限制\ngsettings set org.gnome.settings-daemon.plugins.media-keys max-screencast-length 0\n# 禁用最近文件访问记录\ngsettings set org.gnome.desktop.privacy remember-recent-files false\n\n# virtualbox 设置\nsudo gpasswd -a root vboxusers\nsudo gpasswd -a $USER vboxusers\n# wireshark 设置\nsudo gpasswd -a root wireshark\nsudo gpasswd -a $USER wireshark\n\n# 系统日志\nsudo gpasswd -a $USER adm\nsudo gpasswd -a $USER systemd-journal\nsudo gpasswd -a $USER wheel\n\n# docker\n#sudo gpasswd -a $USER docker\n\nsudo grpunconv\n\n# 开机启动\nsudo systemctl enable systemd-timesyncd\nsudo systemctl start systemd-timesyncd\nsudo systemctl enable sshd\nsudo systemctl mask tmp.mount\n```\n\n","slug":"ArchLinux安装配置","published":1,"updated":"2025-10-02T08:02:51.554Z","_id":"cmg94bm7600005kj8fmlpdak2","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"安装前说明\"><a href=\"#安装前说明\" class=\"headerlink\" title=\"安装前说明\"></a>安装前说明</h1><p><em>ArchLinux安装可以在启动镜像之后，通过SSH连接复制以下命令字符完成安装。步骤如下：</em></p>\n<p>当然这里涉及到联网的问题，请参考<a href=\"#4-%E8%BF%9E%E6%8E%A5WIFI\">连接WIFI</a></p>\n<ol>\n<li><code>ip a</code> 查看IP地址；</li>\n<li><code>systemctl start sshd</code> 启动SSH服务；</li>\n<li><code>passwd</code> 修改启动镜像root用户密码；</li>\n<li>使用任意SSH客户端软件，连接启动镜像IP地址的22端口即可。</li>\n</ol>\n<p><em>如果是安装中途连接SSH的，请注意适时执行 <code>arch-chroot /mnt</code> 命令进入安装目标硬盘。否则，所有安装操作重启系统后无效（安装到了启动镜像中）。</em></p>\n<h1 id=\"1-建立硬盘分区\"><a href=\"#1-建立硬盘分区\" class=\"headerlink\" title=\"1. 建立硬盘分区\"></a>1. 建立硬盘分区</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cfdisk</span><br></pre></td></tr></table></figure>\n\n<p><em>按照本教程安装<font color='red'>ArchLinux</font> ，硬盘至少需要10G以上。</em></p>\n<p><em>如果使用UEFI启动方式，需要新建 <code>/dev/sda1</code> 容量300~500M，并且设置为启动分区，其余分区编号顺延。</em></p>\n<h2 id=\"1-1-新建EFI分区\"><a href=\"#1-1-新建EFI分区\" class=\"headerlink\" title=\"1.1. 新建EFI分区\"></a>1.1. 新建EFI分区</h2><p><img src=\"/img/arch1.png\"></p>\n<h2 id=\"1-2-新建交换分区\"><a href=\"#1-2-新建交换分区\" class=\"headerlink\" title=\"1.2. 新建交换分区\"></a>1.2. 新建交换分区</h2><p><em>可选可不选，类似于虚拟内存</em></p>\n<p><img src=\"/img/arch2.png\"></p>\n<h2 id=\"1-3-新建主分区\"><a href=\"#1-3-新建主分区\" class=\"headerlink\" title=\"1.3. 新建主分区\"></a>1.3. 新建主分区</h2><p><em>剩下全部建立到一起为根目录分区，类型默认即可</em>。</p>\n<p><img src=\"/img/arch3.png\"></p>\n<p>选中<code>Write</code>,输入<code>yes</code>确定，选择<code>Quit</code>退出分区。</p>\n<h2 id=\"1-4-查看分区情况\"><a href=\"#1-4-查看分区情况\" class=\"headerlink\" title=\"1.4. 查看分区情况\"></a>1.4. 查看分区情况</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fdisk -l</span><br></pre></td></tr></table></figure>\n\n<p><em>确定好自己每一个分区的类型，目的，名称。</em></p>\n<p><img src=\"/img/arch4.png\"></p>\n<h1 id=\"2-格式化分区\"><a href=\"#2-格式化分区\" class=\"headerlink\" title=\"2. 格式化分区\"></a>2. 格式化分区</h1><h2 id=\"2-1-格式化主分区\"><a href=\"#2-1-格式化主分区\" class=\"headerlink\" title=\"2.1. 格式化主分区\"></a>2.1. 格式化主分区</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkfs.ext4 /dev/sda3</span><br></pre></td></tr></table></figure>\n\n<p><em>此为格式化分区，会擦除数据</em></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@archiso ~ # mkfs.ext4 /dev/sda3</span><br><span class=\"line\">mke2fs <span class=\"number\">1</span>.<span class=\"number\">47</span>.<span class=\"number\">1</span> (<span class=\"number\">20</span>-May-<span class=\"number\">2024</span>)</span><br><span class=\"line\">Creating filesystem with <span class=\"number\">4065792</span> <span class=\"number\">4</span>k blocks and <span class=\"number\">1018000</span> inodes</span><br><span class=\"line\">Filesystem UUID: <span class=\"number\">809</span>a516d-<span class=\"number\">805</span>b-<span class=\"number\">4</span>ec4-afa9-dc7538873a12</span><br><span class=\"line\">Superblock backups stored on blocks:</span><br><span class=\"line\">        <span class=\"number\">32768</span>, <span class=\"number\">98304</span>, <span class=\"number\">163840</span>, <span class=\"number\">229376</span>, <span class=\"number\">294912</span>, <span class=\"number\">819200</span>, <span class=\"number\">884736</span>, <span class=\"number\">1605632</span>, <span class=\"number\">2654208</span></span><br><span class=\"line\"></span><br><span class=\"line\">Allocating group tables: done</span><br><span class=\"line\">Writing inode tables: done</span><br><span class=\"line\">Creating journal (<span class=\"number\">16384</span> blocks): done</span><br><span class=\"line\">Writing superblocks and filesystem accounting information: done</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-2-格式化交换分区（未设置就跳过）\"><a href=\"#2-2-格式化交换分区（未设置就跳过）\" class=\"headerlink\" title=\"2.2. 格式化交换分区（未设置就跳过）\"></a>2.2. 格式化交换分区（未设置就跳过）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkswap /dev/sda2</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@archiso ~ # mkswap /dev/sda2</span><br><span class=\"line\">Setting up swapspace version <span class=\"number\">1</span>, size = <span class=\"number\">4</span> GiB (<span class=\"number\">4294963200</span> bytes)</span><br><span class=\"line\"><span class=\"function\">no label, <span class=\"title\">UUID</span>=<span class=\"title\">e32cf483</span>-6326-4<span class=\"title\">d86</span>-8210-<span class=\"title\">bfe78fefb050</span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-3-格式化EFI分区\"><a href=\"#2-3-格式化EFI分区\" class=\"headerlink\" title=\"2.3. 格式化EFI分区\"></a>2.3. 格式化EFI分区</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkfs.fat -F 32 /dev/sda1</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@archiso ~ # mkfs.fat -F <span class=\"number\">32</span> /dev/sda1</span><br><span class=\"line\">mkfs.fat <span class=\"number\">4</span>.<span class=\"number\">2</span> (<span class=\"number\">2021</span>-<span class=\"number\">01</span>-<span class=\"number\">31</span>)</span><br></pre></td></tr></table></figure>\n\n<p>*可运行<code>lsblk -f</code>*确认分区或格式错误</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@archiso ~ # lsblk -f</span><br><span class=\"line\">NAME   FSTYPE   FSVER            <span class=\"built_in\">LABEL</span>       UUID                                 FSAVAIL FSUSE% MOUNTPOINTS</span><br><span class=\"line\">loop0  squashfs <span class=\"number\">4</span>.<span class=\"number\">0</span>                                                                     <span class=\"number\">0</span>   <span class=\"number\">100</span>% /run/archiso/airootfs</span><br><span class=\"line\">sda</span><br><span class=\"line\">├─sda1 vfat     FAT32                        B52E-<span class=\"number\">2</span>E89</span><br><span class=\"line\">├─sda2 swap     <span class=\"number\">1</span>                            e32cf483-<span class=\"number\">6326</span>-<span class=\"number\">4</span>d86-<span class=\"number\">8210</span>-bfe78fefb050</span><br><span class=\"line\">└─sda3 ext4     <span class=\"number\">1</span>.<span class=\"number\">0</span>                          <span class=\"number\">809</span>a516d-<span class=\"number\">805</span>b-<span class=\"number\">4</span>ec4-afa9-dc7538873a12</span><br><span class=\"line\">sr0    iso9660  Joliet Extension ARCH_202411 <span class=\"number\">2024</span>-<span class=\"number\">11</span>-<span class=\"number\">01</span>-<span class=\"number\">10</span>-<span class=\"number\">09</span>-<span class=\"number\">22</span>-<span class=\"number\">00</span>                     <span class=\"number\">0</span>   <span class=\"number\">100</span>% /run/archiso/bootmnt</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"3-挂载分区\"><a href=\"#3-挂载分区\" class=\"headerlink\" title=\"3. 挂载分区\"></a>3. 挂载分区</h1><ul>\n<li>挂载主分区</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount /dev/sda3 /mnt</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>挂载EFI分区</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount --<span class=\"built_in\">mkdir</span> /dev/sda1 /mnt/boot</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>挂载交换分区</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swapon /dev/sda2</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"4-连接WIFI\"><a href=\"#4-连接WIFI\" class=\"headerlink\" title=\"4. 连接WIFI\"></a>4. 连接WIFI</h1><p>如果想要了解该方法的原理请参考<a href=\"https://wiki.archlinux.org/title/Iwd#iwctl\">官方文档</a></p>\n<p><em>这里以WIFI网卡名称 wlan0  和 WIFI硬件名称 phy0为例</em></p>\n<p><em>执行<code>iwctl</code>命令，进入iwd交互shell：</em></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 获得WIFI网卡名称 wlan0 和WIFI硬件名称 phy0</span><br><span class=\"line\">device list</span><br><span class=\"line\"></span><br><span class=\"line\">device wlan0 <span class=\"built_in\">set</span>-property Powered on</span><br><span class=\"line\">adapter phy0 <span class=\"built_in\">set</span>-property Powered on</span><br><span class=\"line\"></span><br><span class=\"line\"># 不会有任何屏幕输出</span><br><span class=\"line\">station wlan0 scan</span><br><span class=\"line\"></span><br><span class=\"line\"># 列表WIFI清单</span><br><span class=\"line\">station wlan0 get-networks</span><br><span class=\"line\"></span><br><span class=\"line\"># 会提示输入连接密码，其中 GEEKCAMP_5G 是选择的WIFI SSID</span><br><span class=\"line\">station wlan0 connect GEEKCAMP_5G</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看WIFI连接</span><br><span class=\"line\">station\twlan0 show</span><br><span class=\"line\"></span><br><span class=\"line\"># 退出iwd Shell</span><br><span class=\"line\"><span class=\"keyword\">exit</span></span><br></pre></td></tr></table></figure>\n\n<p><em>测试网络连接：</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ping qq.com</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"5-基础包安装\"><a href=\"#5-基础包安装\" class=\"headerlink\" title=\"5. 基础包安装\"></a>5. 基础包安装</h1><h2 id=\"5-1-设置国内镜像源\"><a href=\"#5-1-设置国内镜像源\" class=\"headerlink\" title=\"5.1. 设置国内镜像源\"></a>5.1. 设置国内镜像源</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &lt;&lt; <span class=\"string\">EOF &gt; /etc/pacman.d/mirrorlist</span></span><br><span class=\"line\"><span class=\"string\">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/\\$repo/os/\\$arch</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-2-安装基础包\"><a href=\"#5-2-安装基础包\" class=\"headerlink\" title=\"5.2. 安装基础包\"></a>5.2. 安装基础包</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacstrap /mnt base</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"6-开机挂载分区\"><a href=\"#6-开机挂载分区\" class=\"headerlink\" title=\"6. 开机挂载分区\"></a>6. 开机挂载分区</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"7-切换到全新ArchLinux系统\"><a href=\"#7-切换到全新ArchLinux系统\" class=\"headerlink\" title=\"7. 切换到全新ArchLinux系统\"></a>7. 切换到全新ArchLinux系统</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arch-chroot /mnt</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-1-设置国内镜像源\"><a href=\"#7-1-设置国内镜像源\" class=\"headerlink\" title=\"7.1. 设置国内镜像源\"></a>7.1. 设置国内镜像源</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &lt;&lt; <span class=\"string\">EOF &gt; /etc/pacman.d/mirrorlist</span></span><br><span class=\"line\"><span class=\"string\">Server = https://mirrors.aliyun.com/archlinux/\\$repo/os/\\$arch</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-2-安装vim-sudo\"><a href=\"#7-2-安装vim-sudo\" class=\"headerlink\" title=\"7.2. 安装vim sudo\"></a>7.2. 安装vim sudo</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -S vim <span class=\"built_in\">sudo</span> </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-3-设置时区\"><a href=\"#7-3-设置时区\" class=\"headerlink\" title=\"7.3. 设置时区\"></a>7.3. 设置时区</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-4-本地化语言支持\"><a href=\"#7-4-本地化语言支持\" class=\"headerlink\" title=\"7.4. 本地化语言支持\"></a>7.4. 本地化语言支持</h2><p><em>启用语言参数：</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;en_US.UTF-8 UTF-8&quot;</span> &gt;&gt; /etc/locale.gen</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;zh_CN.GB18030 GB18030&quot;</span> &gt;&gt; /etc/locale.gen</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;zh_CN.GBK GBK&quot;</span> &gt;&gt; /etc/locale.gen</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;zh_CN.UTF-8 UTF-8&quot;</span> &gt;&gt; /etc/locale.gen</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;zh_CN GB2312&quot;</span> &gt;&gt; /etc/locale.gen</span><br></pre></td></tr></table></figure>\n\n<p><em>生成locale：</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">locale-gen</span><br></pre></td></tr></table></figure>\n\n<p><em>设置系统默认语言：</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;LANG=en_US.UTF-8&quot;</span> &gt; /etc/locale.conf</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"red\">全局设置为英文，tty控制台不会乱码，新用户默认目录也是英文名称，方便使用。</font></p>\n<p><font color=\"red\">新用户登录桌面后，自行找到控制面板中的 “Region and Language”（区域和语言）设置为 <code>汉语</code> 即可。设置后，如果提示更新目录名称为中文，请选择 “保留旧的文件名”，除非你想在终端经常打中文目录名称（累死你~~）。</font></p>\n<h2 id=\"7-5-键盘布局\"><a href=\"#7-5-键盘布局\" class=\"headerlink\" title=\"7.5. 键盘布局\"></a>7.5. 键盘布局</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;KEYMAP=us&quot;</span> &gt; /etc/vconsole.conf</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-6-设置主机名\"><a href=\"#7-6-设置主机名\" class=\"headerlink\" title=\"7.6. 设置主机名\"></a>7.6. 设置主机名</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;archlinux&#x27;</span> &gt; /etc/hostname</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-7-本地网络配置\"><a href=\"#7-7-本地网络配置\" class=\"headerlink\" title=\"7.7. 本地网络配置\"></a>7.7. 本地网络配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;127.0.0.1 localhost&#x27;</span> &gt; /etc/hosts</span><br><span class=\"line\"><span class=\"comment\"># 添加主机名对应的设置</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;127.0.0.1 archlinux&#x27;</span> &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-8-设置root密码\"><a href=\"#7-8-设置root密码\" class=\"headerlink\" title=\"7.8.  设置root密码\"></a>7.8.  设置root密码</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwd</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-9-创建用户\"><a href=\"#7-9-创建用户\" class=\"headerlink\" title=\"7.9. 创建用户\"></a>7.9. 创建用户</h2><p><em>新增用户</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd -m 你的用户名</span><br></pre></td></tr></table></figure>\n\n<p><em>设置用户密码</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwd 你的用户名</span><br></pre></td></tr></table></figure>\n\n<p><em>添加到sudo列表</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;你的用户名   ALL=(ALL:ALL) NOPASSWD: ALL&#x27;</span> &gt;&gt; /etc/sudoers</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-10-安装Grub引导\"><a href=\"#7-10-安装Grub引导\" class=\"headerlink\" title=\"7.10. 安装Grub引导\"></a>7.10. 安装Grub引导</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -S grub efibootmgr</span><br><span class=\"line\"></span><br><span class=\"line\">grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=<span class=\"built_in\">arch</span></span><br><span class=\"line\"></span><br><span class=\"line\">pacman -S linux linux-headers linux-lts linux-lts-headers</span><br><span class=\"line\"></span><br><span class=\"line\">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"red\">Windows+Linux双引导</font></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -S grub os-prober ntfs-3g</span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s/#GRUB_DISABLE_OS_PROBER=false/GRUB_DISABLE_OS_PROBER=false/g&#x27;</span> /etc/default/grub</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"red\">下次进入GNOME桌面后，执行 grub-mkconfig -o &#x2F;boot&#x2F;grub&#x2F;grub.cfg​ 命令就会自动将Windows系统加入到Grub启动菜单</font></p>\n<h2 id=\"7-11-安装桌面\"><a href=\"#7-11-安装桌面\" class=\"headerlink\" title=\"7.11. 安装桌面\"></a>7.11. 安装桌面</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 更新软件包索引</span></span><br><span class=\"line\">pacman -Syy</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 桌面环境</span></span><br><span class=\"line\">pacman -S gnome vim networkmanager</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># WIFI驱动</span></span><br><span class=\"line\">pacman -S linux-firmware</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 拼音输入法</span></span><br><span class=\"line\">pacman -S ibus-sunpinyin sunpinyin sunpinyin-data</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显卡驱动</span></span><br><span class=\"line\">pacman -S xf86-video-fbdev xf86-video-intel xf86-video-vesa xf86-video-ati xf86-video-amdgpu</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 汉字字体</span></span><br><span class=\"line\">pacman -S wqy-microhei wqy-zenhei</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开机启动</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> NetworkManager</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> gdm</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-12-重启\"><a href=\"#7-12-重启\" class=\"headerlink\" title=\"7.12. 重启\"></a>7.12. 重启</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">exit</span></span><br><span class=\"line\"></span><br><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-13-设置pacman\"><a href=\"#7-13-设置pacman\" class=\"headerlink\" title=\"7.13. 设置pacman\"></a>7.13. 设置pacman</h2><p><em>增加 <code>Arch Linux 中文社区仓库</code> 的腾讯镜像服务器：</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入root</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> -i</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cat</span> &lt;&lt; <span class=\"string\">EOF &gt;&gt; /etc/pacman.conf</span></span><br><span class=\"line\"><span class=\"string\">[archlinuxcn]</span></span><br><span class=\"line\"><span class=\"string\">Server = https://mirrors.cloud.tencent.com/archlinuxcn/\\$arch</span></span><br><span class=\"line\"><span class=\"string\">SigLevel = Optional TrustAll</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-14-安装常用软件\"><a href=\"#7-14-安装常用软件\" class=\"headerlink\" title=\"7.14. 安装常用软件\"></a>7.14. 安装常用软件</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> pacman -Syy</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> pacman -S archlinuxcn-keyring</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> pacman -S gedit vim screen thunderbird thunderbird-i18n-zh-cn openssh bash-completion cmake git curl wget filezilla gcc make mlocate nginx ntp p7zip rsync virtualbox virtualbox-guest-iso virtualbox-host-dkms file-roller parted sshpass rdesktop qt5-base qt6-base fakeroot yay openssl wireshark-qt base-devel code gnome-terminal os-prober</span><br><span class=\"line\"></span><br><span class=\"line\">yay -S google-chrome</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-15-系统设置\"><a href=\"#7-15-系统设置\" class=\"headerlink\" title=\"7.15. 系统设置\"></a>7.15. 系统设置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># GNOME 桌面设置</span></span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.nautilus.preferences always-use-location-entry <span class=\"literal\">true</span></span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.nautilus.preferences default-sort-order name</span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gtk.Settings.FileChooser sort-directories-first <span class=\"literal\">true</span></span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.desktop.interface clock-show-date <span class=\"literal\">true</span></span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.desktop.interface clock-show-seconds <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># Ctrl+Shift+Alt+R 录像时，30秒后自动结束。设置为0,不限制</span></span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.settings-daemon.plugins.media-keys max-screencast-length 0</span><br><span class=\"line\"><span class=\"comment\"># 禁用最近文件访问记录</span></span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.desktop.privacy remember-recent-files <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># virtualbox 设置</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> gpasswd -a root vboxusers</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> gpasswd -a <span class=\"variable\">$USER</span> vboxusers</span><br><span class=\"line\"><span class=\"comment\"># wireshark 设置</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> gpasswd -a root wireshark</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> gpasswd -a <span class=\"variable\">$USER</span> wireshark</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 系统日志</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> gpasswd -a <span class=\"variable\">$USER</span> adm</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> gpasswd -a <span class=\"variable\">$USER</span> systemd-journal</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> gpasswd -a <span class=\"variable\">$USER</span> wheel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># docker</span></span><br><span class=\"line\"><span class=\"comment\">#sudo gpasswd -a $USER docker</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> grpunconv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开机启动</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl <span class=\"built_in\">enable</span> systemd-timesyncd</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl start systemd-timesyncd</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl <span class=\"built_in\">enable</span> sshd</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl mask tmp.mount</span><br></pre></td></tr></table></figure>\n\n","excerpt":"","more":"<h1 id=\"安装前说明\"><a href=\"#安装前说明\" class=\"headerlink\" title=\"安装前说明\"></a>安装前说明</h1><p><em>ArchLinux安装可以在启动镜像之后，通过SSH连接复制以下命令字符完成安装。步骤如下：</em></p>\n<p>当然这里涉及到联网的问题，请参考<a href=\"#4-%E8%BF%9E%E6%8E%A5WIFI\">连接WIFI</a></p>\n<ol>\n<li><code>ip a</code> 查看IP地址；</li>\n<li><code>systemctl start sshd</code> 启动SSH服务；</li>\n<li><code>passwd</code> 修改启动镜像root用户密码；</li>\n<li>使用任意SSH客户端软件，连接启动镜像IP地址的22端口即可。</li>\n</ol>\n<p><em>如果是安装中途连接SSH的，请注意适时执行 <code>arch-chroot /mnt</code> 命令进入安装目标硬盘。否则，所有安装操作重启系统后无效（安装到了启动镜像中）。</em></p>\n<h1 id=\"1-建立硬盘分区\"><a href=\"#1-建立硬盘分区\" class=\"headerlink\" title=\"1. 建立硬盘分区\"></a>1. 建立硬盘分区</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cfdisk</span><br></pre></td></tr></table></figure>\n\n<p><em>按照本教程安装<font color='red'>ArchLinux</font> ，硬盘至少需要10G以上。</em></p>\n<p><em>如果使用UEFI启动方式，需要新建 <code>/dev/sda1</code> 容量300~500M，并且设置为启动分区，其余分区编号顺延。</em></p>\n<h2 id=\"1-1-新建EFI分区\"><a href=\"#1-1-新建EFI分区\" class=\"headerlink\" title=\"1.1. 新建EFI分区\"></a>1.1. 新建EFI分区</h2><p><img src=\"/img/arch1.png\"></p>\n<h2 id=\"1-2-新建交换分区\"><a href=\"#1-2-新建交换分区\" class=\"headerlink\" title=\"1.2. 新建交换分区\"></a>1.2. 新建交换分区</h2><p><em>可选可不选，类似于虚拟内存</em></p>\n<p><img src=\"/img/arch2.png\"></p>\n<h2 id=\"1-3-新建主分区\"><a href=\"#1-3-新建主分区\" class=\"headerlink\" title=\"1.3. 新建主分区\"></a>1.3. 新建主分区</h2><p><em>剩下全部建立到一起为根目录分区，类型默认即可</em>。</p>\n<p><img src=\"/img/arch3.png\"></p>\n<p>选中<code>Write</code>,输入<code>yes</code>确定，选择<code>Quit</code>退出分区。</p>\n<h2 id=\"1-4-查看分区情况\"><a href=\"#1-4-查看分区情况\" class=\"headerlink\" title=\"1.4. 查看分区情况\"></a>1.4. 查看分区情况</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fdisk -l</span><br></pre></td></tr></table></figure>\n\n<p><em>确定好自己每一个分区的类型，目的，名称。</em></p>\n<p><img src=\"/img/arch4.png\"></p>\n<h1 id=\"2-格式化分区\"><a href=\"#2-格式化分区\" class=\"headerlink\" title=\"2. 格式化分区\"></a>2. 格式化分区</h1><h2 id=\"2-1-格式化主分区\"><a href=\"#2-1-格式化主分区\" class=\"headerlink\" title=\"2.1. 格式化主分区\"></a>2.1. 格式化主分区</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkfs.ext4 /dev/sda3</span><br></pre></td></tr></table></figure>\n\n<p><em>此为格式化分区，会擦除数据</em></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@archiso ~ # mkfs.ext4 /dev/sda3</span><br><span class=\"line\">mke2fs <span class=\"number\">1</span>.<span class=\"number\">47</span>.<span class=\"number\">1</span> (<span class=\"number\">20</span>-May-<span class=\"number\">2024</span>)</span><br><span class=\"line\">Creating filesystem with <span class=\"number\">4065792</span> <span class=\"number\">4</span>k blocks and <span class=\"number\">1018000</span> inodes</span><br><span class=\"line\">Filesystem UUID: <span class=\"number\">809</span>a516d-<span class=\"number\">805</span>b-<span class=\"number\">4</span>ec4-afa9-dc7538873a12</span><br><span class=\"line\">Superblock backups stored on blocks:</span><br><span class=\"line\">        <span class=\"number\">32768</span>, <span class=\"number\">98304</span>, <span class=\"number\">163840</span>, <span class=\"number\">229376</span>, <span class=\"number\">294912</span>, <span class=\"number\">819200</span>, <span class=\"number\">884736</span>, <span class=\"number\">1605632</span>, <span class=\"number\">2654208</span></span><br><span class=\"line\"></span><br><span class=\"line\">Allocating group tables: done</span><br><span class=\"line\">Writing inode tables: done</span><br><span class=\"line\">Creating journal (<span class=\"number\">16384</span> blocks): done</span><br><span class=\"line\">Writing superblocks and filesystem accounting information: done</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-2-格式化交换分区（未设置就跳过）\"><a href=\"#2-2-格式化交换分区（未设置就跳过）\" class=\"headerlink\" title=\"2.2. 格式化交换分区（未设置就跳过）\"></a>2.2. 格式化交换分区（未设置就跳过）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkswap /dev/sda2</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@archiso ~ # mkswap /dev/sda2</span><br><span class=\"line\">Setting up swapspace version <span class=\"number\">1</span>, size = <span class=\"number\">4</span> GiB (<span class=\"number\">4294963200</span> bytes)</span><br><span class=\"line\"><span class=\"function\">no label, <span class=\"title\">UUID</span>=<span class=\"title\">e32cf483</span>-6326-4<span class=\"title\">d86</span>-8210-<span class=\"title\">bfe78fefb050</span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-3-格式化EFI分区\"><a href=\"#2-3-格式化EFI分区\" class=\"headerlink\" title=\"2.3. 格式化EFI分区\"></a>2.3. 格式化EFI分区</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkfs.fat -F 32 /dev/sda1</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@archiso ~ # mkfs.fat -F <span class=\"number\">32</span> /dev/sda1</span><br><span class=\"line\">mkfs.fat <span class=\"number\">4</span>.<span class=\"number\">2</span> (<span class=\"number\">2021</span>-<span class=\"number\">01</span>-<span class=\"number\">31</span>)</span><br></pre></td></tr></table></figure>\n\n<p>*可运行<code>lsblk -f</code>*确认分区或格式错误</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@archiso ~ # lsblk -f</span><br><span class=\"line\">NAME   FSTYPE   FSVER            <span class=\"built_in\">LABEL</span>       UUID                                 FSAVAIL FSUSE% MOUNTPOINTS</span><br><span class=\"line\">loop0  squashfs <span class=\"number\">4</span>.<span class=\"number\">0</span>                                                                     <span class=\"number\">0</span>   <span class=\"number\">100</span>% /run/archiso/airootfs</span><br><span class=\"line\">sda</span><br><span class=\"line\">├─sda1 vfat     FAT32                        B52E-<span class=\"number\">2</span>E89</span><br><span class=\"line\">├─sda2 swap     <span class=\"number\">1</span>                            e32cf483-<span class=\"number\">6326</span>-<span class=\"number\">4</span>d86-<span class=\"number\">8210</span>-bfe78fefb050</span><br><span class=\"line\">└─sda3 ext4     <span class=\"number\">1</span>.<span class=\"number\">0</span>                          <span class=\"number\">809</span>a516d-<span class=\"number\">805</span>b-<span class=\"number\">4</span>ec4-afa9-dc7538873a12</span><br><span class=\"line\">sr0    iso9660  Joliet Extension ARCH_202411 <span class=\"number\">2024</span>-<span class=\"number\">11</span>-<span class=\"number\">01</span>-<span class=\"number\">10</span>-<span class=\"number\">09</span>-<span class=\"number\">22</span>-<span class=\"number\">00</span>                     <span class=\"number\">0</span>   <span class=\"number\">100</span>% /run/archiso/bootmnt</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"3-挂载分区\"><a href=\"#3-挂载分区\" class=\"headerlink\" title=\"3. 挂载分区\"></a>3. 挂载分区</h1><ul>\n<li>挂载主分区</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount /dev/sda3 /mnt</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>挂载EFI分区</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount --<span class=\"built_in\">mkdir</span> /dev/sda1 /mnt/boot</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>挂载交换分区</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swapon /dev/sda2</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"4-连接WIFI\"><a href=\"#4-连接WIFI\" class=\"headerlink\" title=\"4. 连接WIFI\"></a>4. 连接WIFI</h1><p>如果想要了解该方法的原理请参考<a href=\"https://wiki.archlinux.org/title/Iwd#iwctl\">官方文档</a></p>\n<p><em>这里以WIFI网卡名称 wlan0  和 WIFI硬件名称 phy0为例</em></p>\n<p><em>执行<code>iwctl</code>命令，进入iwd交互shell：</em></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 获得WIFI网卡名称 wlan0 和WIFI硬件名称 phy0</span><br><span class=\"line\">device list</span><br><span class=\"line\"></span><br><span class=\"line\">device wlan0 <span class=\"built_in\">set</span>-property Powered on</span><br><span class=\"line\">adapter phy0 <span class=\"built_in\">set</span>-property Powered on</span><br><span class=\"line\"></span><br><span class=\"line\"># 不会有任何屏幕输出</span><br><span class=\"line\">station wlan0 scan</span><br><span class=\"line\"></span><br><span class=\"line\"># 列表WIFI清单</span><br><span class=\"line\">station wlan0 get-networks</span><br><span class=\"line\"></span><br><span class=\"line\"># 会提示输入连接密码，其中 GEEKCAMP_5G 是选择的WIFI SSID</span><br><span class=\"line\">station wlan0 connect GEEKCAMP_5G</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看WIFI连接</span><br><span class=\"line\">station\twlan0 show</span><br><span class=\"line\"></span><br><span class=\"line\"># 退出iwd Shell</span><br><span class=\"line\"><span class=\"keyword\">exit</span></span><br></pre></td></tr></table></figure>\n\n<p><em>测试网络连接：</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ping qq.com</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"5-基础包安装\"><a href=\"#5-基础包安装\" class=\"headerlink\" title=\"5. 基础包安装\"></a>5. 基础包安装</h1><h2 id=\"5-1-设置国内镜像源\"><a href=\"#5-1-设置国内镜像源\" class=\"headerlink\" title=\"5.1. 设置国内镜像源\"></a>5.1. 设置国内镜像源</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &lt;&lt; <span class=\"string\">EOF &gt; /etc/pacman.d/mirrorlist</span></span><br><span class=\"line\"><span class=\"string\">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/\\$repo/os/\\$arch</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-2-安装基础包\"><a href=\"#5-2-安装基础包\" class=\"headerlink\" title=\"5.2. 安装基础包\"></a>5.2. 安装基础包</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacstrap /mnt base</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"6-开机挂载分区\"><a href=\"#6-开机挂载分区\" class=\"headerlink\" title=\"6. 开机挂载分区\"></a>6. 开机挂载分区</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"7-切换到全新ArchLinux系统\"><a href=\"#7-切换到全新ArchLinux系统\" class=\"headerlink\" title=\"7. 切换到全新ArchLinux系统\"></a>7. 切换到全新ArchLinux系统</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arch-chroot /mnt</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-1-设置国内镜像源\"><a href=\"#7-1-设置国内镜像源\" class=\"headerlink\" title=\"7.1. 设置国内镜像源\"></a>7.1. 设置国内镜像源</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &lt;&lt; <span class=\"string\">EOF &gt; /etc/pacman.d/mirrorlist</span></span><br><span class=\"line\"><span class=\"string\">Server = https://mirrors.aliyun.com/archlinux/\\$repo/os/\\$arch</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-2-安装vim-sudo\"><a href=\"#7-2-安装vim-sudo\" class=\"headerlink\" title=\"7.2. 安装vim sudo\"></a>7.2. 安装vim sudo</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -S vim <span class=\"built_in\">sudo</span> </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-3-设置时区\"><a href=\"#7-3-设置时区\" class=\"headerlink\" title=\"7.3. 设置时区\"></a>7.3. 设置时区</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-4-本地化语言支持\"><a href=\"#7-4-本地化语言支持\" class=\"headerlink\" title=\"7.4. 本地化语言支持\"></a>7.4. 本地化语言支持</h2><p><em>启用语言参数：</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;en_US.UTF-8 UTF-8&quot;</span> &gt;&gt; /etc/locale.gen</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;zh_CN.GB18030 GB18030&quot;</span> &gt;&gt; /etc/locale.gen</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;zh_CN.GBK GBK&quot;</span> &gt;&gt; /etc/locale.gen</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;zh_CN.UTF-8 UTF-8&quot;</span> &gt;&gt; /etc/locale.gen</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;zh_CN GB2312&quot;</span> &gt;&gt; /etc/locale.gen</span><br></pre></td></tr></table></figure>\n\n<p><em>生成locale：</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">locale-gen</span><br></pre></td></tr></table></figure>\n\n<p><em>设置系统默认语言：</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;LANG=en_US.UTF-8&quot;</span> &gt; /etc/locale.conf</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"red\">全局设置为英文，tty控制台不会乱码，新用户默认目录也是英文名称，方便使用。</font></p>\n<p><font color=\"red\">新用户登录桌面后，自行找到控制面板中的 “Region and Language”（区域和语言）设置为 <code>汉语</code> 即可。设置后，如果提示更新目录名称为中文，请选择 “保留旧的文件名”，除非你想在终端经常打中文目录名称（累死你~~）。</font></p>\n<h2 id=\"7-5-键盘布局\"><a href=\"#7-5-键盘布局\" class=\"headerlink\" title=\"7.5. 键盘布局\"></a>7.5. 键盘布局</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;KEYMAP=us&quot;</span> &gt; /etc/vconsole.conf</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-6-设置主机名\"><a href=\"#7-6-设置主机名\" class=\"headerlink\" title=\"7.6. 设置主机名\"></a>7.6. 设置主机名</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;archlinux&#x27;</span> &gt; /etc/hostname</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-7-本地网络配置\"><a href=\"#7-7-本地网络配置\" class=\"headerlink\" title=\"7.7. 本地网络配置\"></a>7.7. 本地网络配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;127.0.0.1 localhost&#x27;</span> &gt; /etc/hosts</span><br><span class=\"line\"><span class=\"comment\"># 添加主机名对应的设置</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;127.0.0.1 archlinux&#x27;</span> &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-8-设置root密码\"><a href=\"#7-8-设置root密码\" class=\"headerlink\" title=\"7.8.  设置root密码\"></a>7.8.  设置root密码</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwd</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-9-创建用户\"><a href=\"#7-9-创建用户\" class=\"headerlink\" title=\"7.9. 创建用户\"></a>7.9. 创建用户</h2><p><em>新增用户</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd -m 你的用户名</span><br></pre></td></tr></table></figure>\n\n<p><em>设置用户密码</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwd 你的用户名</span><br></pre></td></tr></table></figure>\n\n<p><em>添加到sudo列表</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;你的用户名   ALL=(ALL:ALL) NOPASSWD: ALL&#x27;</span> &gt;&gt; /etc/sudoers</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-10-安装Grub引导\"><a href=\"#7-10-安装Grub引导\" class=\"headerlink\" title=\"7.10. 安装Grub引导\"></a>7.10. 安装Grub引导</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -S grub efibootmgr</span><br><span class=\"line\"></span><br><span class=\"line\">grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=<span class=\"built_in\">arch</span></span><br><span class=\"line\"></span><br><span class=\"line\">pacman -S linux linux-headers linux-lts linux-lts-headers</span><br><span class=\"line\"></span><br><span class=\"line\">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"red\">Windows+Linux双引导</font></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -S grub os-prober ntfs-3g</span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s/#GRUB_DISABLE_OS_PROBER=false/GRUB_DISABLE_OS_PROBER=false/g&#x27;</span> /etc/default/grub</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"red\">下次进入GNOME桌面后，执行 grub-mkconfig -o &#x2F;boot&#x2F;grub&#x2F;grub.cfg​ 命令就会自动将Windows系统加入到Grub启动菜单</font></p>\n<h2 id=\"7-11-安装桌面\"><a href=\"#7-11-安装桌面\" class=\"headerlink\" title=\"7.11. 安装桌面\"></a>7.11. 安装桌面</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 更新软件包索引</span></span><br><span class=\"line\">pacman -Syy</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 桌面环境</span></span><br><span class=\"line\">pacman -S gnome vim networkmanager</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># WIFI驱动</span></span><br><span class=\"line\">pacman -S linux-firmware</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 拼音输入法</span></span><br><span class=\"line\">pacman -S ibus-sunpinyin sunpinyin sunpinyin-data</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显卡驱动</span></span><br><span class=\"line\">pacman -S xf86-video-fbdev xf86-video-intel xf86-video-vesa xf86-video-ati xf86-video-amdgpu</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 汉字字体</span></span><br><span class=\"line\">pacman -S wqy-microhei wqy-zenhei</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开机启动</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> NetworkManager</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> gdm</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-12-重启\"><a href=\"#7-12-重启\" class=\"headerlink\" title=\"7.12. 重启\"></a>7.12. 重启</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">exit</span></span><br><span class=\"line\"></span><br><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-13-设置pacman\"><a href=\"#7-13-设置pacman\" class=\"headerlink\" title=\"7.13. 设置pacman\"></a>7.13. 设置pacman</h2><p><em>增加 <code>Arch Linux 中文社区仓库</code> 的腾讯镜像服务器：</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入root</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> -i</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cat</span> &lt;&lt; <span class=\"string\">EOF &gt;&gt; /etc/pacman.conf</span></span><br><span class=\"line\"><span class=\"string\">[archlinuxcn]</span></span><br><span class=\"line\"><span class=\"string\">Server = https://mirrors.cloud.tencent.com/archlinuxcn/\\$arch</span></span><br><span class=\"line\"><span class=\"string\">SigLevel = Optional TrustAll</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-14-安装常用软件\"><a href=\"#7-14-安装常用软件\" class=\"headerlink\" title=\"7.14. 安装常用软件\"></a>7.14. 安装常用软件</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> pacman -Syy</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> pacman -S archlinuxcn-keyring</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> pacman -S gedit vim screen thunderbird thunderbird-i18n-zh-cn openssh bash-completion cmake git curl wget filezilla gcc make mlocate nginx ntp p7zip rsync virtualbox virtualbox-guest-iso virtualbox-host-dkms file-roller parted sshpass rdesktop qt5-base qt6-base fakeroot yay openssl wireshark-qt base-devel code gnome-terminal os-prober</span><br><span class=\"line\"></span><br><span class=\"line\">yay -S google-chrome</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-15-系统设置\"><a href=\"#7-15-系统设置\" class=\"headerlink\" title=\"7.15. 系统设置\"></a>7.15. 系统设置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># GNOME 桌面设置</span></span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.nautilus.preferences always-use-location-entry <span class=\"literal\">true</span></span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.nautilus.preferences default-sort-order name</span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gtk.Settings.FileChooser sort-directories-first <span class=\"literal\">true</span></span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.desktop.interface clock-show-date <span class=\"literal\">true</span></span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.desktop.interface clock-show-seconds <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># Ctrl+Shift+Alt+R 录像时，30秒后自动结束。设置为0,不限制</span></span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.settings-daemon.plugins.media-keys max-screencast-length 0</span><br><span class=\"line\"><span class=\"comment\"># 禁用最近文件访问记录</span></span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.desktop.privacy remember-recent-files <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># virtualbox 设置</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> gpasswd -a root vboxusers</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> gpasswd -a <span class=\"variable\">$USER</span> vboxusers</span><br><span class=\"line\"><span class=\"comment\"># wireshark 设置</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> gpasswd -a root wireshark</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> gpasswd -a <span class=\"variable\">$USER</span> wireshark</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 系统日志</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> gpasswd -a <span class=\"variable\">$USER</span> adm</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> gpasswd -a <span class=\"variable\">$USER</span> systemd-journal</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> gpasswd -a <span class=\"variable\">$USER</span> wheel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># docker</span></span><br><span class=\"line\"><span class=\"comment\">#sudo gpasswd -a $USER docker</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> grpunconv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开机启动</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl <span class=\"built_in\">enable</span> systemd-timesyncd</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl start systemd-timesyncd</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl <span class=\"built_in\">enable</span> sshd</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl mask tmp.mount</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Nginx","date":"2025-09-01T03:03:35.000Z","_content":"\n> 本文整理了一份完整的 Nginx 学习与实践指南，涵盖从 **在CentOS7 上安装方法**、**基础配置**、**反向代理**、**负载均衡**、**HTTPS 部署**、**性能优化**、**安全加固**、**日志监控** 到 **高可用与容器化** 的全流程内容。适合需要快速上手 Nginx 的初学者，也适合在生产环境中使用 Nginx 的运维和开发人员参考。\n\n# 一. 简介\n\nNginx（“engine x”）是一款 HTTP Web 服务器、反向代理、内容缓存、负载均衡器、TCP/UDP 代理服务器和邮件代理服务器。最初由 Igor Sysoev 编写，并根据 2-clause BSD 许可证发布。F5 公司提供企业发行版、商业支持和培训。\n\n# 二. 安装Nginx\n\n## 1. CentOS7安装Nginx\n\nNginx 安装方式对比（CentOS 7）\n\n|     安装方式     | 特点                       |                          优点                          |                    缺点                     |                       适用场景                        |\n| :--------------: | -------------------------- | :----------------------------------------------------: | :-----------------------------------------: | :---------------------------------------------------: |\n|  **官方源安装**  | 使用 Nginx 官方 YUM 仓库   | 版本更新快- 安全修复及时- 配置路径标准化（/etc/nginx） |              需要额外添加 repo              |       线上生产环境，需要 **长期维护、稳定更新**       |\n| **EPEL 源安装**  | 使用 epel-release 提供的包 |                 安装简单- 系统兼容性好                 |           版本较旧- bug 修复较慢            |          快速部署，**对版本要求不高**的场景           |\n| **源码编译安装** | 手动下载源码并编译         |           可自定义编译参数和模块- 性能可优化           |        安装复杂- 升级需手动重新编译         | 高级用户，需要 **特殊模块（如第三方模块、优化参数）** |\n| **Docker 安装**  | 通过容器运行 Nginx         |       隔离性好- 升级/回滚方便- 配合 K8s 容器编排       | 依赖 Docker 环境- 数据卷/配置管理需额外考虑 |      微服务、**容器化环境**，需要快速部署和迁移       |\n\n### 1.1. EPEL + Nginx 官方仓库安装\n\nCentOS 7 默认仓库里 Nginx 版本较老，建议用官方源。\n\n#### 1.1.1. 安装依赖\n\n```bash\nsudo yum install -y epel-release\nsudo yum install -y yum-utils\n```\n\n#### 1.1.2. 添加Nginx 官方仓库\n\n```bash\nsudo tee /etc/yum.repos.d/nginx.repo <<EOF\n[nginx-stable]\nname=nginx stable repo\nbaseurl=http://nginx.org/packages/centos/7/\\$basearch/\ngpgcheck=1\nenabled=1\ngpgkey=https://nginx.org/keys/nginx_signing.key\n\n[nginx-mainline]\nname=nginx mainline repo\nbaseurl=http://nginx.org/packages/mainline/centos/7/\\$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=https://nginx.org/keys/nginx_signing.key\nEOF\n```\n\n####  1.1.3. 安装 Nginx\n\n```bash\nsudo yum install -y nginx\n```\n\n####  1.1.4. 启动并开机自启\n\n```bash\nsudo systemctl enable nginx\nsudo systemctl start nginx\n```\n\n### 2.2. EPEL 源安装\n\n#### 2.2.1. 安装 EPEL\n\n```bash\nsudo yum install -y epel-release\n```\n\n#### 2.2.2. 安装 nginx\n\n```bash\nsudo yum install -y nginx\n```\n\n#### 2.2.3. 启动服务\n\n```bash\nsudo systemctl start nginx\nsudo systemctl enable nginx\n```\n\n### 2.3. 源码编译安装\n\n适合需要自定义模块的场景。\n\n#### 2.3.1. 安装编译工具和依赖\n\n```bash\nsudo yum groupinstall -y \"Development Tools\"\nsudo yum install -y gcc pcre-devel zlib-devel make openssl-devel wget\n```\n\n#### 2.3.2. 下载源码（以稳定版 1.24.0 为例）\n\n```bash\nwget http://nginx.org/download/nginx-1.24.0.tar.gz\ntar -zxvf nginx-1.24.0.tar.gz\ncd nginx-1.24.0\n```\n\n#### 2.3.3. 配置编译参数（可加模块）\n\n```bash\n./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_gzip_static_module\nmake\nsudo make install\n```\n\n#### 2.3.4. 启动\n\n```bash\n/usr/local/nginx/sbin/nginx\n```\n\n#### 2.3.5. 添加 systemd 管理\n\n```bash\nsudo tee /etc/systemd/system/nginx.service <<EOF\n[Unit]\nDescription=The NGINX HTTP and reverse proxy server\nAfter=network.target\n\n[Service]\nExecStart=/usr/local/nginx/sbin/nginx\nExecReload=/usr/local/nginx/sbin/nginx -s reload\nExecStop=/usr/local/nginx/sbin/nginx -s quit\nPIDFile=/usr/local/nginx/logs/nginx.pid\nRestart=always\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable nginx\nsudo systemctl start nginx\n```\n\n### 2.4. 通过 Docker 安装 Nginx\n\n如果你有 Docker 环境，可以直接用容器跑。\n\n#### 2.4.1. 安装 Docker（若未安装）\n\n```bash\nsudo yum install -y yum-utils device-mapper-persistent-data lvm2\nsudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\nsudo yum install -y docker-ce docker-ce-cli containerd.io\nsudo systemctl enable docker\nsudo systemctl start docker\n```\n\n#### 2.4.2. 拉取并运行 Nginx\n\n```bash\nsudo docker run --name nginx -p 80:80 -d nginx\n```\n\n# 三. Nginx教程\n\n## 1. Nginx 基础配置\n\nNginx 的配置文件一般位于：\n\n- 主配置文件：`/etc/nginx/nginx.conf`\n- 子配置文件：`/etc/nginx/conf.d/*.conf`\n\n### 1.1. Nginx 配置文件结构\n\n一个完整的 Nginx 配置由 **三大块** 组成：\n\n1. **全局块**（定义进程数、运行用户等）\n2. **events 块**（事件处理，worker 连接数等）\n3. **http 块**（最核心部分，定义虚拟主机、反向代理、负载均衡等）\n\n```nginx\n# 全局块\nuser  nginx;\nworker_processes auto;\n\n# events 块\nevents {\n    worker_connections 1024;\n}\n\n# http 块\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    # 日志\n    access_log /var/log/nginx/access.log;\n    error_log /var/log/nginx/error.log;\n\n    # server 块（虚拟主机）\n    server {\n        listen 80;\n        server_name example.com;\n\n        location / {\n            root   /usr/share/nginx/html;\n            index  index.html index.htm;\n        }\n    }\n}\n```\n\n### 1.2. server 块（虚拟主机）\n\nNginx 可以通过 **虚拟主机** 配置多个站点：\n\n#### 1.2.1. 基于域名的虚拟主机\n\n```nginx\nserver {\n    listen 80;\n    server_name www.site1.com;\n    root /var/www/site1;\n}\n\nserver {\n    listen 80;\n    server_name www.site2.com;\n    root /var/www/site2;\n}\n```\n\n当访问 `www.site1.com` 时，会返回 `/var/www/site1` 目录内容；访问 `www.site2.com` 时，会返回 `/var/www/site2`。\n\n#### 1.2.2. 基于端口的虚拟主机\n\n```nginx\nserver {\n    listen 8080;\n    server_name localhost;\n    root /var/www/site8080;\n}\n```\n\n访问 `http://IP:8080/` 时，返回 `/var/www/site8080` 内容。\n\n### 1.3. location 块（路径匹配）\n\n`location` 用来匹配 URL 路径，并指定处理方式。\n\n常见写法：\n\n```nginx\n# 精确匹配\nlocation = /abc {\n    return 200 \"this is /abc\";\n}\n\n# 前缀匹配\nlocation /images/ {\n    root /data;\n}\n\n# 正则匹配\nlocation ~ \\.php$ {\n    root /var/www/html;\n    fastcgi_pass 127.0.0.1:9000;\n}\n```\n\n匹配优先级：\n\n`=` 精确匹配 > 前缀匹配（最长优先） > 正则匹配\n\n### 1.4. 配置静态网站\n\n最常见的用法：直接托管静态文件（HTML、JS、CSS、图片）。\n\n```nginx\nserver {\n    listen 80;\n    server_name www.example.com;\n\n    root /var/www/html;\n    index index.html index.htm;\n}\n```\n\n将文件放到 `/var/www/html/` 目录下即可访问。\n例如：`/var/www/html/index.html` → `http://www.example.com/index.html`\n\n## 2. 反向代理与动静分离\n\n### 2.1. 基本反向代理\n\n示例：将请求转发给运行在 127.0.0.1:5000 的应用服务。\n\n```nginx\nserver {\n    listen 80;\n    server_name app.example.com;\n\n    location / {\n        proxy_pass http://127.0.0.1:5000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n}\n```\n\n说明：\n\n- `proxy_pass` 指定后端服务地址\n- `proxy_set_header` 用来传递客户端的真实 IP 和 Host，避免后端获取不到正确信息\n\n### 2.2. 代理多个路径\n\n如果前端和后端服务分开，可以通过不同路径代理不同后端。\n\n```nginx\nserver {\n    listen 80;\n    server_name www.example.com;\n\n    location /api/ {\n        proxy_pass http://127.0.0.1:8000;\n    }\n\n    location / {\n        root /var/www/html;\n        index index.html;\n    }\n}\n```\n\n说明：\n\n- `/api/` 请求会转发到后端 8000 端口\n- `/` 静态资源直接由 Nginx 提供\n\n### 2.3. 动静分离\n\n动静分离的常见写法：静态资源由 Nginx 提供，动态请求交给后端。\n\n```nginx\nserver {\n    listen 80;\n    server_name www.example.com;\n\n    # 静态资源\n    location /static/ {\n        root /var/www/html;\n    }\n\n    # 动态请求\n    location / {\n        proxy_pass http://127.0.0.1:5000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n    }\n}\n```\n\n### 2.4. 针对不同后端的配置示例\n\n#### 2.4.1. Node.js\n\n```nginx\nserver {\n    listen 80;\n    server_name node.example.com;\n\n    location / {\n        proxy_pass http://127.0.0.1:3000;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n    }\n}\n```\n\n#### 2.4.2. Flask (Gunicorn)\n\n```nginx\nserver {\n    listen 80;\n    server_name flask.example.com;\n\n    location / {\n        proxy_pass http://127.0.0.1:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n    }\n}\n```\n\n#### 2.4.3. PHP (PHP-FPM)\n\n```nginx\nserver {\n    listen 80;\n    server_name php.example.com;\n    root /var/www/phpapp;\n\n    location / {\n        index index.php index.html;\n    }\n\n    location ~ \\.php$ {\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        include fastcgi_params;\n    }\n}\n```\n\n## 3. 负载均衡\n\n当单个后端服务无法满足高并发需求时，可以通过 Nginx 的 **upstream 模块** 配置多台后端，实现负载均衡。\n\n### 3.1. 基本配置\n\n```nginx\nupstream backend {\n    server 192.168.1.10;\n    server 192.168.1.11;\n}\n\nserver {\n    listen 80;\n    server_name lb.example.com;\n\n    location / {\n        proxy_pass http://backend;\n    }\n}\n```\n\n说明：\n\n- 定义 `upstream backend`，包含多个后端节点\n- 在 `proxy_pass` 中直接引用 `http://backend`\n\n默认策略为 **轮询（Round Robin）**。\n\n### 3.2. 负载均衡策略\n\n#### 3.2.1. 轮询（默认）\n\n请求按顺序分发到后端服务器。\n\n```nginx\nupstream backend {\n    server 192.168.1.10;\n    server 192.168.1.11;\n}\n```\n\n#### 3.2.2. 最少连接数（least_conn）\n\n将请求分配给当前连接数最少的后端。\n\n```nginx\nupstream backend {\n    least_conn;\n    server 192.168.1.10;\n    server 192.168.1.11;\n}\n```\n\n#### 3.2.3. IP 哈希（ip_hash）\n\n同一个客户端 IP 会固定访问同一台后端，常用于有会话需求的场景。\n\n```nginx\nupstream backend {\n    ip_hash;\n    server 192.168.1.10;\n    server 192.168.1.11;\n}\n```\n\n#### 3.2.4. 权重（weight）\n\n为不同服务器设置权重，性能好的服务器可以承担更多请求。\n\n```nginx\nupstream backend {\n    server 192.168.1.10 weight=3;\n    server 192.168.1.11 weight=1;\n}\n```\n\n### 3.3. 健康检查（被动）\n\nNginx 默认支持被动健康检查：当后端返回错误时，会自动将其标记为不可用，直到恢复正常。\n\n```nginx\nupstream backend {\n    server 192.168.1.10 max_fails=3 fail_timeout=30s;\n    server 192.168.1.11;\n}\n```\n\n## 4. HTTPS 配置\n\n随着安全要求的提升，HTTPS 已经成为网站的标配。Nginx 提供了完善的 SSL/TLS 支持，可以轻松为网站启用 HTTPS。\n\n### 4.1. 基本 HTTPS 配置\n\n假设证书和私钥文件已经准备好（例如 `example.crt` 和 `example.key`）。\n\n```nginx\nserver {\n    listen 443 ssl;\n    server_name www.example.com;\n\n    ssl_certificate     /etc/nginx/ssl/example.crt;\n    ssl_certificate_key /etc/nginx/ssl/example.key;\n\n    location / {\n        root /usr/share/nginx/html;\n        index index.html;\n    }\n}\n```\n\n说明：\n\n- `listen 443 ssl` 表示启用 443 端口并开启 SSL\n- `ssl_certificate` 指定公钥证书\n- `ssl_certificate_key` 指定私钥\n\n### 4.2. HTTP 自动跳转 HTTPS\n\n通常需要将所有 HTTP 请求自动跳转到 HTTPS。\n\n```nginx\nserver {\n    listen 80;\n    server_name www.example.com;\n    return 301 https://$host$request_uri;\n}\n```\n\n### 4.3. 使用 Let’s Encrypt 免费证书\n\n安装 Certbot 获取免费 SSL 证书：\n\n```bash\nsudo yum install -y epel-release\nsudo yum install -y certbot python2-certbot-nginx\nsudo certbot --nginx -d www.example.com\n```\n\n执行成功后，Certbot 会自动修改 Nginx 配置并续期证书。\n\n### 4.4. TLS 安全优化\n\n为了避免使用不安全的协议和加密套件，可以在配置中进行限制。\n\n```nginx\nssl_protocols TLSv1.2 TLSv1.3;\nssl_ciphers HIGH:!aNULL:!MD5;\nssl_prefer_server_ciphers on;\nssl_session_cache shared:SSL:10m;\nssl_session_timeout 10m;\n```\n\n说明：\n\n- 只启用 `TLSv1.2` 和 `TLSv1.3`\n- 禁用弱加密算法\n- 开启 session 缓存，提高性能\n\n### 4.5. HTTP/2 支持\n\n开启 HTTP/2 可以提升 HTTPS 网站性能（需要 OpenSSL 支持）。\n\n```nginx\nserver {\n    listen 443 ssl http2;\n    server_name www.example.com;\n\n    ssl_certificate     /etc/nginx/ssl/example.crt;\n    ssl_certificate_key /etc/nginx/ssl/example.key;\n\n    location / {\n        root /usr/share/nginx/html;\n    }\n}\n```\n\n## 5. 性能优化\n\nNginx 默认配置在中小规模场景下可以正常工作，但在高并发或大流量场景下，需要进行性能优化以提升吞吐量和响应速度。\n\n### 5.1. worker 配置\n\nNginx 的核心是事件驱动模型，`worker_processes` 和 `worker_connections` 是性能优化的关键。\n\n```nginx\nworker_processes auto;\n\nevents {\n    worker_connections 1024;\n    use epoll;\n    multi_accept on;\n}\n```\n\n说明：\n\n- `worker_processes auto`：自动根据 CPU 核心数分配进程数\n- `worker_connections`：每个 worker 最大连接数，通常设置为 1024 或更高\n- `use epoll`：Linux 下推荐使用 epoll 模型\n- `multi_accept on`：允许 worker 一次接受多个新连接\n\n### 5.2. TCP 优化\n\nNginx 提供了几个 TCP 优化选项，提高大文件传输和连接效率。\n\n```nginx\nhttp {\n    sendfile on;\n    tcp_nopush on;\n    tcp_nodelay on;\n}\n```\n\n说明：\n\n- `sendfile on`：启用零拷贝，提高文件传输效率\n- `tcp_nopush on`：尽量一次性发送 HTTP 响应头，减少包数量\n- `tcp_nodelay on`：立即发送小数据包，适合交互式应用\n\n### 5.3. Gzip 压缩\n\n启用 gzip 压缩可减少传输数据量，提升访问速度。\n\n```nginx\nhttp {\n    gzip on;\n    gzip_min_length 1k;\n    gzip_comp_level 5;\n    gzip_types text/plain text/css application/json application/javascript application/xml application/xml+rss image/svg+xml;\n    gzip_vary on;\n}\n```\n\n说明：\n\n- `gzip_min_length`：最小压缩大小（1KB以上才压缩）\n- `gzip_comp_level`：压缩等级（1-9，推荐 4-6）\n- `gzip_types`：指定要压缩的 MIME 类型\n\n### 5.4. 静态资源缓存\n\n通过 `expires` 或 `cache-control` 指令为静态文件设置缓存策略。\n\n```nginx\nlocation ~* \\.(jpg|jpeg|png|gif|ico|css|js)$ {\n    expires 30d;\n    add_header Cache-Control \"public\";\n}\n```\n\n说明：\n\n- `expires 30d`：静态资源缓存 30 天\n- `Cache-Control public`：允许浏览器和代理缓存\n\n### 5.5. 反向代理缓存\n\nNginx 也可以缓存后端响应，减轻应用服务器压力。\n\n```nginx\nproxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m inactive=60m;\nproxy_cache_key $scheme$proxy_host$request_uri;\n\nserver {\n    location /api/ {\n        proxy_pass http://127.0.0.1:8000;\n        proxy_cache my_cache;\n        proxy_cache_valid 200 302 10m;\n        proxy_cache_valid 404 1m;\n    }\n}\n```\n\n说明：\n\n- `proxy_cache_path`：定义缓存路径和缓存区大小\n- `proxy_cache`：指定使用的缓存区\n- `proxy_cache_valid`：缓存不同响应码的时间\n\n### 5.6. 文件描述符限制\n\n需要提高系统的文件描述符数，否则高并发时可能出现 `too many open files` 错误。\n\n编辑 `/etc/security/limits.conf`：\n\n```ASCIIDOC\n* soft nofile 65535\n* hard nofile 65535\n```\n\n在 Nginx 配置中增加：\n\n```nginx\nworker_rlimit_nofile 65535;\n```\n\n## 6. 安全加固\n\nNginx 除了作为高性能 Web 服务器外，也可以在前端起到安全防护作用。通过合理的配置，可以减少攻击面、限制非法访问、缓解 DDoS/CC 攻击。\n\n### 6.1. 禁止目录遍历\n\n默认情况下，如果某目录没有 `index.html` 文件，可能会暴露文件列表。可以通过以下方式禁止目录遍历：\n\n```nginx\nlocation / {\n    autoindex off;\n}\n```\n\n### 6.2. 隐藏版本号\n\nNginx 默认会在错误页面或响应头中显示版本号，可能会暴露漏洞信息。可以关闭：\n\n```nginx\nhttp {\n    server_tokens off;\n}\n```\n\n### 6.3. 限制请求方法\n\n只允许特定的 HTTP 方法（如 GET、POST），拒绝其他请求方法：\n\n```nginx\nlocation / {\n    if ($request_method !~ ^(GET|POST)$) {\n        return 405;\n    }\n}\n```\n\n### 6.4. 请求速率限制（防止 CC 攻击）\n\n限制单个 IP 的请求速率，防止恶意刷请求：\n\n```nginx\nhttp {\n    limit_req_zone $binary_remote_addr zone=req_limit:10m rate=10r/s;\n\n    server {\n        location /api/ {\n            limit_req zone=req_limit burst=20 nodelay;\n            proxy_pass http://127.0.0.1:8000;\n        }\n    }\n}\n```\n\n说明：\n\n- `rate=10r/s`：每秒允许 10 个请求\n\n- `burst=20`：允许短时间内突发 20 个请求\n\n- `nodelay`：超出部分立即拒绝\n\n  \n\n### 6.5. 连接数限制\n\n限制单个 IP 的并发连接数，防止恶意占用连接：\n\n```nginx\nhttp {\n    limit_conn_zone $binary_remote_addr zone=addr:10m;\n\n    server {\n        location / {\n            limit_conn addr 10;\n        }\n    }\n}\n```\n\n说明：\n\n- `limit_conn_zone` 定义一个共享内存存储 IP 状态\n- `limit_conn addr 10` 表示单个 IP 最多 10 个并发连接\n\n### 6.6. 防盗链（Referer 检查）\n\n避免图片、视频等资源被其他网站盗用：\n\n```nginx\nlocation ~* \\.(jpg|jpeg|png|gif|mp4)$ {\n    valid_referers none blocked *.example.com;\n    if ($invalid_referer) {\n        return 403;\n    }\n}\n```\n\n说明：\n\n- `valid_referers` 定义合法来源\n- `$invalid_referer` 判断非法来源并返回 403\n\n### 6.7. IP 访问控制\n\n只允许特定 IP 访问管理路径，其他全部拒绝：\n\n```nginx\nlocation /admin {\n    allow 192.168.1.0/24;\n    deny all;\n}\n```\n\n### 6.8. 防止上传大文件\n\n限制请求体大小，避免恶意上传超大文件导致服务资源耗尽：\n\n```nginx\nhttp {\n    client_max_body_size 10m;\n}\n```\n\n## 7. 日志与监控\n\nNginx 提供了 **访问日志（access log）** 和 **错误日志（error log）**，是排查问题、分析流量和做安全审计的重要手段。配合第三方工具，可以实现实时监控与可视化分析。\n\n### 7.1. 访问日志\n\n访问日志记录了每个请求的详细信息，包括 IP、时间、请求方法、状态码等。\n\n```nginx\nhttp {\n    log_format main '$remote_addr - $remote_user [$time_local] \"$request\" '\n                    '$status $body_bytes_sent \"$http_referer\" '\n                    '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log /var/log/nginx/access.log main;\n}\n```\n\n说明：\n\n- `log_format` 定义日志格式（`main` 是名称）\n- `access_log` 指定日志文件和格式\n\n日志示例：\n\n```accesslog\n192.168.1.100 - - [29/Aug/2025:12:31:21 +0800] \"GET /index.html HTTP/1.1\" 200 1024 \"-\" \"Mozilla/5.0\" \"-\"\n```\n\n### 7.2. 错误日志\n\n错误日志记录了 Nginx 在运行时遇到的问题，如配置错误、后端不可达等。\n\n```nginx\nerror_log /var/log/nginx/error.log warn;\n```\n\n说明：\n\n- 日志级别：`debug`、`info`、`notice`、`warn`、`error`、`crit`\n- 建议生产环境使用 `warn` 或 `error`，避免日志过多\n\n### 7.3. 按站点分日志\n\n可以为不同的虚拟主机单独配置日志文件，方便分析。\n\n```nginx\nserver {\n    listen 80;\n    server_name site1.example.com;\n\n    access_log /var/log/nginx/site1_access.log main;\n    error_log  /var/log/nginx/site1_error.log warn;\n\n    location / {\n        root /var/www/site1;\n    }\n}\n```\n\n### 7.4. 禁用日志\n\n如果不想记录某些静态资源请求日志，可以关闭日志：\n\n```nginx\nlocation ~* \\.(jpg|jpeg|png|gif|ico|css|js)$ {\n    access_log off;\n    log_not_found off;\n}\n```\n\n### 7.5. 日志切割\n\nNginx 不会自动切割日志，通常通过 `logrotate` 管理。\n\n配置文件路径：`/etc/logrotate.d/nginx`\n\n```CONF\n/var/log/nginx/*.log {\n    daily\n    missingok\n    rotate 14\n    compress\n    delaycompress\n    notifempty\n    create 0640 nginx adm\n    sharedscripts\n    postrotate\n        [ -f /var/run/nginx.pid ] && kill -USR1 `cat /var/run/nginx.pid`\n    endscript\n}\n```\n\n### 7.6. 实时日志分析（GoAccess）\n\nGoAccess 是一个命令行实时日志分析工具。\n\n安装：\n\n```bash\nsudo yum install -y goaccess\n```\n\n使用：\n\n```bash\ngoaccess /var/log/nginx/access.log -o /var/www/html/report.html --log-format=COMBINED --real-time-html\n```\n\n浏览器访问 `http://server_ip/report.html` 即可看到可视化报表。\n\n### 7.7. 集成 ELK（ElasticSearch + Logstash + Kibana）\n\n- **Logstash** 采集和解析 Nginx 日志\n- **ElasticSearch** 存储和索引日志数据\n- **Kibana** 可视化展示请求趋势、状态码、地理位置等\n\n示例 Logstash 配置：\n\n```nginx\ninput {\n    file {\n        path => \"/var/log/nginx/access.log\"\n        start_position => \"beginning\"\n    }\n}\n\nfilter {\n    grok {\n        match => { \"message\" => \"%{COMBINEDAPACHELOG}\" }\n    }\n}\n\noutput {\n    elasticsearch { hosts => [\"localhost:9200\"] }\n    stdout { codec => rubydebug }\n}\n```\n\n## 8. 高可用与容器化\n\n在生产环境中，单台 Nginx 容易成为瓶颈或单点故障。为了解决这些问题，可以通过 **高可用架构**（Keepalived + Nginx）和 **容器化部署**（Docker、Kubernetes）来提升服务的稳定性和扩展性。\n\n### 8.1. Nginx + Keepalived 高可用\n\n#### 8.1.1. 原理\n\n- **Keepalived** 使用 VRRP 协议，为多台服务器分配一个虚拟 IP（VIP）\n- 主节点宕机后，备用节点会自动接管 VIP\n- 客户端始终通过 VIP 访问，保证服务连续性\n\n#### 8.1.2. 配置示例（主节点）\n\n安装 Keepalived：\n\n```bash\nsudo yum install -y keepalived\n```\n\n编辑 `/etc/keepalived/keepalived.conf`：\n\n```CONF\nvrrp_instance VI_1 {\n    state MASTER\n    interface eth0\n    virtual_router_id 51\n    priority 100\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 123456\n    }\n    virtual_ipaddress {\n        192.168.1.100\n    }\n}\n```\n\n#### 8.1.3. 配置示例（备节点）\n\n```CONF\nvrrp_instance VI_1 {\n    state BACKUP\n    interface eth0\n    virtual_router_id 51\n    priority 90\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 123456\n    }\n    virtual_ipaddress {\n        192.168.1.100\n    }\n}\n```\n\n说明：\n\n- `priority` 值越大优先级越高，主节点设置为 100，备节点设置为 90\n- `virtual_ipaddress` 为对外提供的虚拟 IP\n\n启动并开机自启：\n\n```bash\nsystemctl enable keepalived\nsystemctl start keepalived\n```\n\n### 8.2. Nginx 在 Kubernetes 中部署\n\n#### 8.2.1. Deployment 配置\n\n```\nnginx-deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:latest\n        ports:\n        - containerPort: 80\n```\n\n#### 8.2.2. Service 暴露\n\n```\nnginx-service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\nspec:\n  type: NodePort\n  selector:\n    app: nginx\n  ports:\n  - port: 80\n    targetPort: 80\n    nodePort: 30080\n```\n\n说明：\n\n- `replicas: 3` 表示运行 3 个副本，实现负载均衡\n- `Service` 将 Nginx 对外暴露在 `30080` 端口\n\n------\n\n# 四. 常见问题排查\n\n在使用 Nginx 的过程中，经常会遇到各种错误或异常。以下总结了常见问题及排查方法。\n\n## 1. 配置语法错误\n\n修改配置后执行：\n\n```bash\nnginx -t\n```\n\n输出示例：\n\n```terminal\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n```\n\n如果有错误，会显示出错的文件和行号。修复后再执行：\n\n```bash\nsystemctl reload nginx\n```\n\n------\n\n## 2. 80 或 443 端口被占用\n\n现象：Nginx 启动时报错 `bind() to 0.0.0.0:80 failed (98: Address already in use)`。\n\n排查：\n\n```bash\nnetstat -tulnp | grep 80\n```\n\n解决：\n\n- 停止占用端口的服务\n- 或修改 Nginx 配置文件 `listen` 为其他端口\n\n------\n\n## 3. 502 Bad Gateway\n\n常见原因：\n\n- 后端服务未启动或异常退出\n- Nginx 配置了错误的后端地址\n- PHP-FPM 未运行或监听错误\n\n排查：\n\n- 查看 Nginx 错误日志 `/var/log/nginx/error.log`\n- 确认后端服务是否正常运行\n- 检查 `proxy_pass` 或 `fastcgi_pass` 配置\n\n------\n\n## 4. 504 Gateway Timeout\n\n常见原因：\n\n- 后端服务响应过慢\n- Nginx 超时设置过低\n\n解决方法：\n\n```\nproxy_connect_timeout 60s;\nproxy_send_timeout 60s;\nproxy_read_timeout 60s;\n```\n\n可在 `server` 或 `location` 中增加以上配置。\n\n------\n\n## 5. SSL 证书错误\n\n现象：浏览器提示 `SSL certificate problem` 或 `NET::ERR_CERT_DATE_INVALID`。\n\n排查：\n\n- 检查证书和私钥路径是否正确\n- 检查证书是否过期\n\n```bash\nopenssl x509 -in /etc/nginx/ssl/example.crt -noout -dates\n```\n\n解决方法：\n\n- 重新申请证书（如使用 Let’s Encrypt 续签）\n- 确认 `ssl_certificate` 与 `ssl_certificate_key` 配对正确\n\n------\n\n## 6. 高并发下出现 `too many open files`\n\n现象：Nginx 报错 `EMFILE: Too many open files`。\n\n解决方法：\n\n1. 修改系统限制 `/etc/security/limits.conf`：\n\n   ```\n   * soft nofile 65535\n   * hard nofile 65535\n   ```\n\n2. 在 Nginx 配置文件中加入：\n\n   ```\n   worker_rlimit_nofile 65535;\n   ```\n\n3. 重启 Nginx\n\n------\n\n## 7. 日志过大\n\n现象：`/var/log/nginx/access.log` 或 `error.log` 文件体积过大，占满磁盘。\n\n解决方法：\n\n- 配置 `logrotate` 定期切割日志\n- 对静态资源路径关闭日志\n\n```nginx\nlocation ~* \\.(jpg|jpeg|png|gif|ico|css|js)$ {\n    access_log off;\n    log_not_found off;\n}\n```\n\n------\n\n## 8. 防火墙或 SELinux 阻止访问\n\nCentOS7 默认启用防火墙和 SELinux，可能导致端口无法访问。\n\n### 8.1. 检查防火墙\n\n```bash\nfirewall-cmd --list-all\nfirewall-cmd --add-service=http --permanent\nfirewall-cmd --add-service=https --permanent\nfirewall-cmd --reload\n```\n\n### 8.2. 检查 SELinux\n\n```bash\nsestatus\n```\n\n如果 SELinux 启用，可以临时关闭：\n```bash\nsetenforce 0\n```","source":"_posts/Nginx.md","raw":"---\ntitle: Nginx\ndate: 2025-09-01 11:03:35\ntags: Nginx\ncategories: Nginx\n---\n\n> 本文整理了一份完整的 Nginx 学习与实践指南，涵盖从 **在CentOS7 上安装方法**、**基础配置**、**反向代理**、**负载均衡**、**HTTPS 部署**、**性能优化**、**安全加固**、**日志监控** 到 **高可用与容器化** 的全流程内容。适合需要快速上手 Nginx 的初学者，也适合在生产环境中使用 Nginx 的运维和开发人员参考。\n\n# 一. 简介\n\nNginx（“engine x”）是一款 HTTP Web 服务器、反向代理、内容缓存、负载均衡器、TCP/UDP 代理服务器和邮件代理服务器。最初由 Igor Sysoev 编写，并根据 2-clause BSD 许可证发布。F5 公司提供企业发行版、商业支持和培训。\n\n# 二. 安装Nginx\n\n## 1. CentOS7安装Nginx\n\nNginx 安装方式对比（CentOS 7）\n\n|     安装方式     | 特点                       |                          优点                          |                    缺点                     |                       适用场景                        |\n| :--------------: | -------------------------- | :----------------------------------------------------: | :-----------------------------------------: | :---------------------------------------------------: |\n|  **官方源安装**  | 使用 Nginx 官方 YUM 仓库   | 版本更新快- 安全修复及时- 配置路径标准化（/etc/nginx） |              需要额外添加 repo              |       线上生产环境，需要 **长期维护、稳定更新**       |\n| **EPEL 源安装**  | 使用 epel-release 提供的包 |                 安装简单- 系统兼容性好                 |           版本较旧- bug 修复较慢            |          快速部署，**对版本要求不高**的场景           |\n| **源码编译安装** | 手动下载源码并编译         |           可自定义编译参数和模块- 性能可优化           |        安装复杂- 升级需手动重新编译         | 高级用户，需要 **特殊模块（如第三方模块、优化参数）** |\n| **Docker 安装**  | 通过容器运行 Nginx         |       隔离性好- 升级/回滚方便- 配合 K8s 容器编排       | 依赖 Docker 环境- 数据卷/配置管理需额外考虑 |      微服务、**容器化环境**，需要快速部署和迁移       |\n\n### 1.1. EPEL + Nginx 官方仓库安装\n\nCentOS 7 默认仓库里 Nginx 版本较老，建议用官方源。\n\n#### 1.1.1. 安装依赖\n\n```bash\nsudo yum install -y epel-release\nsudo yum install -y yum-utils\n```\n\n#### 1.1.2. 添加Nginx 官方仓库\n\n```bash\nsudo tee /etc/yum.repos.d/nginx.repo <<EOF\n[nginx-stable]\nname=nginx stable repo\nbaseurl=http://nginx.org/packages/centos/7/\\$basearch/\ngpgcheck=1\nenabled=1\ngpgkey=https://nginx.org/keys/nginx_signing.key\n\n[nginx-mainline]\nname=nginx mainline repo\nbaseurl=http://nginx.org/packages/mainline/centos/7/\\$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=https://nginx.org/keys/nginx_signing.key\nEOF\n```\n\n####  1.1.3. 安装 Nginx\n\n```bash\nsudo yum install -y nginx\n```\n\n####  1.1.4. 启动并开机自启\n\n```bash\nsudo systemctl enable nginx\nsudo systemctl start nginx\n```\n\n### 2.2. EPEL 源安装\n\n#### 2.2.1. 安装 EPEL\n\n```bash\nsudo yum install -y epel-release\n```\n\n#### 2.2.2. 安装 nginx\n\n```bash\nsudo yum install -y nginx\n```\n\n#### 2.2.3. 启动服务\n\n```bash\nsudo systemctl start nginx\nsudo systemctl enable nginx\n```\n\n### 2.3. 源码编译安装\n\n适合需要自定义模块的场景。\n\n#### 2.3.1. 安装编译工具和依赖\n\n```bash\nsudo yum groupinstall -y \"Development Tools\"\nsudo yum install -y gcc pcre-devel zlib-devel make openssl-devel wget\n```\n\n#### 2.3.2. 下载源码（以稳定版 1.24.0 为例）\n\n```bash\nwget http://nginx.org/download/nginx-1.24.0.tar.gz\ntar -zxvf nginx-1.24.0.tar.gz\ncd nginx-1.24.0\n```\n\n#### 2.3.3. 配置编译参数（可加模块）\n\n```bash\n./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_gzip_static_module\nmake\nsudo make install\n```\n\n#### 2.3.4. 启动\n\n```bash\n/usr/local/nginx/sbin/nginx\n```\n\n#### 2.3.5. 添加 systemd 管理\n\n```bash\nsudo tee /etc/systemd/system/nginx.service <<EOF\n[Unit]\nDescription=The NGINX HTTP and reverse proxy server\nAfter=network.target\n\n[Service]\nExecStart=/usr/local/nginx/sbin/nginx\nExecReload=/usr/local/nginx/sbin/nginx -s reload\nExecStop=/usr/local/nginx/sbin/nginx -s quit\nPIDFile=/usr/local/nginx/logs/nginx.pid\nRestart=always\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable nginx\nsudo systemctl start nginx\n```\n\n### 2.4. 通过 Docker 安装 Nginx\n\n如果你有 Docker 环境，可以直接用容器跑。\n\n#### 2.4.1. 安装 Docker（若未安装）\n\n```bash\nsudo yum install -y yum-utils device-mapper-persistent-data lvm2\nsudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\nsudo yum install -y docker-ce docker-ce-cli containerd.io\nsudo systemctl enable docker\nsudo systemctl start docker\n```\n\n#### 2.4.2. 拉取并运行 Nginx\n\n```bash\nsudo docker run --name nginx -p 80:80 -d nginx\n```\n\n# 三. Nginx教程\n\n## 1. Nginx 基础配置\n\nNginx 的配置文件一般位于：\n\n- 主配置文件：`/etc/nginx/nginx.conf`\n- 子配置文件：`/etc/nginx/conf.d/*.conf`\n\n### 1.1. Nginx 配置文件结构\n\n一个完整的 Nginx 配置由 **三大块** 组成：\n\n1. **全局块**（定义进程数、运行用户等）\n2. **events 块**（事件处理，worker 连接数等）\n3. **http 块**（最核心部分，定义虚拟主机、反向代理、负载均衡等）\n\n```nginx\n# 全局块\nuser  nginx;\nworker_processes auto;\n\n# events 块\nevents {\n    worker_connections 1024;\n}\n\n# http 块\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    # 日志\n    access_log /var/log/nginx/access.log;\n    error_log /var/log/nginx/error.log;\n\n    # server 块（虚拟主机）\n    server {\n        listen 80;\n        server_name example.com;\n\n        location / {\n            root   /usr/share/nginx/html;\n            index  index.html index.htm;\n        }\n    }\n}\n```\n\n### 1.2. server 块（虚拟主机）\n\nNginx 可以通过 **虚拟主机** 配置多个站点：\n\n#### 1.2.1. 基于域名的虚拟主机\n\n```nginx\nserver {\n    listen 80;\n    server_name www.site1.com;\n    root /var/www/site1;\n}\n\nserver {\n    listen 80;\n    server_name www.site2.com;\n    root /var/www/site2;\n}\n```\n\n当访问 `www.site1.com` 时，会返回 `/var/www/site1` 目录内容；访问 `www.site2.com` 时，会返回 `/var/www/site2`。\n\n#### 1.2.2. 基于端口的虚拟主机\n\n```nginx\nserver {\n    listen 8080;\n    server_name localhost;\n    root /var/www/site8080;\n}\n```\n\n访问 `http://IP:8080/` 时，返回 `/var/www/site8080` 内容。\n\n### 1.3. location 块（路径匹配）\n\n`location` 用来匹配 URL 路径，并指定处理方式。\n\n常见写法：\n\n```nginx\n# 精确匹配\nlocation = /abc {\n    return 200 \"this is /abc\";\n}\n\n# 前缀匹配\nlocation /images/ {\n    root /data;\n}\n\n# 正则匹配\nlocation ~ \\.php$ {\n    root /var/www/html;\n    fastcgi_pass 127.0.0.1:9000;\n}\n```\n\n匹配优先级：\n\n`=` 精确匹配 > 前缀匹配（最长优先） > 正则匹配\n\n### 1.4. 配置静态网站\n\n最常见的用法：直接托管静态文件（HTML、JS、CSS、图片）。\n\n```nginx\nserver {\n    listen 80;\n    server_name www.example.com;\n\n    root /var/www/html;\n    index index.html index.htm;\n}\n```\n\n将文件放到 `/var/www/html/` 目录下即可访问。\n例如：`/var/www/html/index.html` → `http://www.example.com/index.html`\n\n## 2. 反向代理与动静分离\n\n### 2.1. 基本反向代理\n\n示例：将请求转发给运行在 127.0.0.1:5000 的应用服务。\n\n```nginx\nserver {\n    listen 80;\n    server_name app.example.com;\n\n    location / {\n        proxy_pass http://127.0.0.1:5000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n}\n```\n\n说明：\n\n- `proxy_pass` 指定后端服务地址\n- `proxy_set_header` 用来传递客户端的真实 IP 和 Host，避免后端获取不到正确信息\n\n### 2.2. 代理多个路径\n\n如果前端和后端服务分开，可以通过不同路径代理不同后端。\n\n```nginx\nserver {\n    listen 80;\n    server_name www.example.com;\n\n    location /api/ {\n        proxy_pass http://127.0.0.1:8000;\n    }\n\n    location / {\n        root /var/www/html;\n        index index.html;\n    }\n}\n```\n\n说明：\n\n- `/api/` 请求会转发到后端 8000 端口\n- `/` 静态资源直接由 Nginx 提供\n\n### 2.3. 动静分离\n\n动静分离的常见写法：静态资源由 Nginx 提供，动态请求交给后端。\n\n```nginx\nserver {\n    listen 80;\n    server_name www.example.com;\n\n    # 静态资源\n    location /static/ {\n        root /var/www/html;\n    }\n\n    # 动态请求\n    location / {\n        proxy_pass http://127.0.0.1:5000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n    }\n}\n```\n\n### 2.4. 针对不同后端的配置示例\n\n#### 2.4.1. Node.js\n\n```nginx\nserver {\n    listen 80;\n    server_name node.example.com;\n\n    location / {\n        proxy_pass http://127.0.0.1:3000;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n    }\n}\n```\n\n#### 2.4.2. Flask (Gunicorn)\n\n```nginx\nserver {\n    listen 80;\n    server_name flask.example.com;\n\n    location / {\n        proxy_pass http://127.0.0.1:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n    }\n}\n```\n\n#### 2.4.3. PHP (PHP-FPM)\n\n```nginx\nserver {\n    listen 80;\n    server_name php.example.com;\n    root /var/www/phpapp;\n\n    location / {\n        index index.php index.html;\n    }\n\n    location ~ \\.php$ {\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        include fastcgi_params;\n    }\n}\n```\n\n## 3. 负载均衡\n\n当单个后端服务无法满足高并发需求时，可以通过 Nginx 的 **upstream 模块** 配置多台后端，实现负载均衡。\n\n### 3.1. 基本配置\n\n```nginx\nupstream backend {\n    server 192.168.1.10;\n    server 192.168.1.11;\n}\n\nserver {\n    listen 80;\n    server_name lb.example.com;\n\n    location / {\n        proxy_pass http://backend;\n    }\n}\n```\n\n说明：\n\n- 定义 `upstream backend`，包含多个后端节点\n- 在 `proxy_pass` 中直接引用 `http://backend`\n\n默认策略为 **轮询（Round Robin）**。\n\n### 3.2. 负载均衡策略\n\n#### 3.2.1. 轮询（默认）\n\n请求按顺序分发到后端服务器。\n\n```nginx\nupstream backend {\n    server 192.168.1.10;\n    server 192.168.1.11;\n}\n```\n\n#### 3.2.2. 最少连接数（least_conn）\n\n将请求分配给当前连接数最少的后端。\n\n```nginx\nupstream backend {\n    least_conn;\n    server 192.168.1.10;\n    server 192.168.1.11;\n}\n```\n\n#### 3.2.3. IP 哈希（ip_hash）\n\n同一个客户端 IP 会固定访问同一台后端，常用于有会话需求的场景。\n\n```nginx\nupstream backend {\n    ip_hash;\n    server 192.168.1.10;\n    server 192.168.1.11;\n}\n```\n\n#### 3.2.4. 权重（weight）\n\n为不同服务器设置权重，性能好的服务器可以承担更多请求。\n\n```nginx\nupstream backend {\n    server 192.168.1.10 weight=3;\n    server 192.168.1.11 weight=1;\n}\n```\n\n### 3.3. 健康检查（被动）\n\nNginx 默认支持被动健康检查：当后端返回错误时，会自动将其标记为不可用，直到恢复正常。\n\n```nginx\nupstream backend {\n    server 192.168.1.10 max_fails=3 fail_timeout=30s;\n    server 192.168.1.11;\n}\n```\n\n## 4. HTTPS 配置\n\n随着安全要求的提升，HTTPS 已经成为网站的标配。Nginx 提供了完善的 SSL/TLS 支持，可以轻松为网站启用 HTTPS。\n\n### 4.1. 基本 HTTPS 配置\n\n假设证书和私钥文件已经准备好（例如 `example.crt` 和 `example.key`）。\n\n```nginx\nserver {\n    listen 443 ssl;\n    server_name www.example.com;\n\n    ssl_certificate     /etc/nginx/ssl/example.crt;\n    ssl_certificate_key /etc/nginx/ssl/example.key;\n\n    location / {\n        root /usr/share/nginx/html;\n        index index.html;\n    }\n}\n```\n\n说明：\n\n- `listen 443 ssl` 表示启用 443 端口并开启 SSL\n- `ssl_certificate` 指定公钥证书\n- `ssl_certificate_key` 指定私钥\n\n### 4.2. HTTP 自动跳转 HTTPS\n\n通常需要将所有 HTTP 请求自动跳转到 HTTPS。\n\n```nginx\nserver {\n    listen 80;\n    server_name www.example.com;\n    return 301 https://$host$request_uri;\n}\n```\n\n### 4.3. 使用 Let’s Encrypt 免费证书\n\n安装 Certbot 获取免费 SSL 证书：\n\n```bash\nsudo yum install -y epel-release\nsudo yum install -y certbot python2-certbot-nginx\nsudo certbot --nginx -d www.example.com\n```\n\n执行成功后，Certbot 会自动修改 Nginx 配置并续期证书。\n\n### 4.4. TLS 安全优化\n\n为了避免使用不安全的协议和加密套件，可以在配置中进行限制。\n\n```nginx\nssl_protocols TLSv1.2 TLSv1.3;\nssl_ciphers HIGH:!aNULL:!MD5;\nssl_prefer_server_ciphers on;\nssl_session_cache shared:SSL:10m;\nssl_session_timeout 10m;\n```\n\n说明：\n\n- 只启用 `TLSv1.2` 和 `TLSv1.3`\n- 禁用弱加密算法\n- 开启 session 缓存，提高性能\n\n### 4.5. HTTP/2 支持\n\n开启 HTTP/2 可以提升 HTTPS 网站性能（需要 OpenSSL 支持）。\n\n```nginx\nserver {\n    listen 443 ssl http2;\n    server_name www.example.com;\n\n    ssl_certificate     /etc/nginx/ssl/example.crt;\n    ssl_certificate_key /etc/nginx/ssl/example.key;\n\n    location / {\n        root /usr/share/nginx/html;\n    }\n}\n```\n\n## 5. 性能优化\n\nNginx 默认配置在中小规模场景下可以正常工作，但在高并发或大流量场景下，需要进行性能优化以提升吞吐量和响应速度。\n\n### 5.1. worker 配置\n\nNginx 的核心是事件驱动模型，`worker_processes` 和 `worker_connections` 是性能优化的关键。\n\n```nginx\nworker_processes auto;\n\nevents {\n    worker_connections 1024;\n    use epoll;\n    multi_accept on;\n}\n```\n\n说明：\n\n- `worker_processes auto`：自动根据 CPU 核心数分配进程数\n- `worker_connections`：每个 worker 最大连接数，通常设置为 1024 或更高\n- `use epoll`：Linux 下推荐使用 epoll 模型\n- `multi_accept on`：允许 worker 一次接受多个新连接\n\n### 5.2. TCP 优化\n\nNginx 提供了几个 TCP 优化选项，提高大文件传输和连接效率。\n\n```nginx\nhttp {\n    sendfile on;\n    tcp_nopush on;\n    tcp_nodelay on;\n}\n```\n\n说明：\n\n- `sendfile on`：启用零拷贝，提高文件传输效率\n- `tcp_nopush on`：尽量一次性发送 HTTP 响应头，减少包数量\n- `tcp_nodelay on`：立即发送小数据包，适合交互式应用\n\n### 5.3. Gzip 压缩\n\n启用 gzip 压缩可减少传输数据量，提升访问速度。\n\n```nginx\nhttp {\n    gzip on;\n    gzip_min_length 1k;\n    gzip_comp_level 5;\n    gzip_types text/plain text/css application/json application/javascript application/xml application/xml+rss image/svg+xml;\n    gzip_vary on;\n}\n```\n\n说明：\n\n- `gzip_min_length`：最小压缩大小（1KB以上才压缩）\n- `gzip_comp_level`：压缩等级（1-9，推荐 4-6）\n- `gzip_types`：指定要压缩的 MIME 类型\n\n### 5.4. 静态资源缓存\n\n通过 `expires` 或 `cache-control` 指令为静态文件设置缓存策略。\n\n```nginx\nlocation ~* \\.(jpg|jpeg|png|gif|ico|css|js)$ {\n    expires 30d;\n    add_header Cache-Control \"public\";\n}\n```\n\n说明：\n\n- `expires 30d`：静态资源缓存 30 天\n- `Cache-Control public`：允许浏览器和代理缓存\n\n### 5.5. 反向代理缓存\n\nNginx 也可以缓存后端响应，减轻应用服务器压力。\n\n```nginx\nproxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m inactive=60m;\nproxy_cache_key $scheme$proxy_host$request_uri;\n\nserver {\n    location /api/ {\n        proxy_pass http://127.0.0.1:8000;\n        proxy_cache my_cache;\n        proxy_cache_valid 200 302 10m;\n        proxy_cache_valid 404 1m;\n    }\n}\n```\n\n说明：\n\n- `proxy_cache_path`：定义缓存路径和缓存区大小\n- `proxy_cache`：指定使用的缓存区\n- `proxy_cache_valid`：缓存不同响应码的时间\n\n### 5.6. 文件描述符限制\n\n需要提高系统的文件描述符数，否则高并发时可能出现 `too many open files` 错误。\n\n编辑 `/etc/security/limits.conf`：\n\n```ASCIIDOC\n* soft nofile 65535\n* hard nofile 65535\n```\n\n在 Nginx 配置中增加：\n\n```nginx\nworker_rlimit_nofile 65535;\n```\n\n## 6. 安全加固\n\nNginx 除了作为高性能 Web 服务器外，也可以在前端起到安全防护作用。通过合理的配置，可以减少攻击面、限制非法访问、缓解 DDoS/CC 攻击。\n\n### 6.1. 禁止目录遍历\n\n默认情况下，如果某目录没有 `index.html` 文件，可能会暴露文件列表。可以通过以下方式禁止目录遍历：\n\n```nginx\nlocation / {\n    autoindex off;\n}\n```\n\n### 6.2. 隐藏版本号\n\nNginx 默认会在错误页面或响应头中显示版本号，可能会暴露漏洞信息。可以关闭：\n\n```nginx\nhttp {\n    server_tokens off;\n}\n```\n\n### 6.3. 限制请求方法\n\n只允许特定的 HTTP 方法（如 GET、POST），拒绝其他请求方法：\n\n```nginx\nlocation / {\n    if ($request_method !~ ^(GET|POST)$) {\n        return 405;\n    }\n}\n```\n\n### 6.4. 请求速率限制（防止 CC 攻击）\n\n限制单个 IP 的请求速率，防止恶意刷请求：\n\n```nginx\nhttp {\n    limit_req_zone $binary_remote_addr zone=req_limit:10m rate=10r/s;\n\n    server {\n        location /api/ {\n            limit_req zone=req_limit burst=20 nodelay;\n            proxy_pass http://127.0.0.1:8000;\n        }\n    }\n}\n```\n\n说明：\n\n- `rate=10r/s`：每秒允许 10 个请求\n\n- `burst=20`：允许短时间内突发 20 个请求\n\n- `nodelay`：超出部分立即拒绝\n\n  \n\n### 6.5. 连接数限制\n\n限制单个 IP 的并发连接数，防止恶意占用连接：\n\n```nginx\nhttp {\n    limit_conn_zone $binary_remote_addr zone=addr:10m;\n\n    server {\n        location / {\n            limit_conn addr 10;\n        }\n    }\n}\n```\n\n说明：\n\n- `limit_conn_zone` 定义一个共享内存存储 IP 状态\n- `limit_conn addr 10` 表示单个 IP 最多 10 个并发连接\n\n### 6.6. 防盗链（Referer 检查）\n\n避免图片、视频等资源被其他网站盗用：\n\n```nginx\nlocation ~* \\.(jpg|jpeg|png|gif|mp4)$ {\n    valid_referers none blocked *.example.com;\n    if ($invalid_referer) {\n        return 403;\n    }\n}\n```\n\n说明：\n\n- `valid_referers` 定义合法来源\n- `$invalid_referer` 判断非法来源并返回 403\n\n### 6.7. IP 访问控制\n\n只允许特定 IP 访问管理路径，其他全部拒绝：\n\n```nginx\nlocation /admin {\n    allow 192.168.1.0/24;\n    deny all;\n}\n```\n\n### 6.8. 防止上传大文件\n\n限制请求体大小，避免恶意上传超大文件导致服务资源耗尽：\n\n```nginx\nhttp {\n    client_max_body_size 10m;\n}\n```\n\n## 7. 日志与监控\n\nNginx 提供了 **访问日志（access log）** 和 **错误日志（error log）**，是排查问题、分析流量和做安全审计的重要手段。配合第三方工具，可以实现实时监控与可视化分析。\n\n### 7.1. 访问日志\n\n访问日志记录了每个请求的详细信息，包括 IP、时间、请求方法、状态码等。\n\n```nginx\nhttp {\n    log_format main '$remote_addr - $remote_user [$time_local] \"$request\" '\n                    '$status $body_bytes_sent \"$http_referer\" '\n                    '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log /var/log/nginx/access.log main;\n}\n```\n\n说明：\n\n- `log_format` 定义日志格式（`main` 是名称）\n- `access_log` 指定日志文件和格式\n\n日志示例：\n\n```accesslog\n192.168.1.100 - - [29/Aug/2025:12:31:21 +0800] \"GET /index.html HTTP/1.1\" 200 1024 \"-\" \"Mozilla/5.0\" \"-\"\n```\n\n### 7.2. 错误日志\n\n错误日志记录了 Nginx 在运行时遇到的问题，如配置错误、后端不可达等。\n\n```nginx\nerror_log /var/log/nginx/error.log warn;\n```\n\n说明：\n\n- 日志级别：`debug`、`info`、`notice`、`warn`、`error`、`crit`\n- 建议生产环境使用 `warn` 或 `error`，避免日志过多\n\n### 7.3. 按站点分日志\n\n可以为不同的虚拟主机单独配置日志文件，方便分析。\n\n```nginx\nserver {\n    listen 80;\n    server_name site1.example.com;\n\n    access_log /var/log/nginx/site1_access.log main;\n    error_log  /var/log/nginx/site1_error.log warn;\n\n    location / {\n        root /var/www/site1;\n    }\n}\n```\n\n### 7.4. 禁用日志\n\n如果不想记录某些静态资源请求日志，可以关闭日志：\n\n```nginx\nlocation ~* \\.(jpg|jpeg|png|gif|ico|css|js)$ {\n    access_log off;\n    log_not_found off;\n}\n```\n\n### 7.5. 日志切割\n\nNginx 不会自动切割日志，通常通过 `logrotate` 管理。\n\n配置文件路径：`/etc/logrotate.d/nginx`\n\n```CONF\n/var/log/nginx/*.log {\n    daily\n    missingok\n    rotate 14\n    compress\n    delaycompress\n    notifempty\n    create 0640 nginx adm\n    sharedscripts\n    postrotate\n        [ -f /var/run/nginx.pid ] && kill -USR1 `cat /var/run/nginx.pid`\n    endscript\n}\n```\n\n### 7.6. 实时日志分析（GoAccess）\n\nGoAccess 是一个命令行实时日志分析工具。\n\n安装：\n\n```bash\nsudo yum install -y goaccess\n```\n\n使用：\n\n```bash\ngoaccess /var/log/nginx/access.log -o /var/www/html/report.html --log-format=COMBINED --real-time-html\n```\n\n浏览器访问 `http://server_ip/report.html` 即可看到可视化报表。\n\n### 7.7. 集成 ELK（ElasticSearch + Logstash + Kibana）\n\n- **Logstash** 采集和解析 Nginx 日志\n- **ElasticSearch** 存储和索引日志数据\n- **Kibana** 可视化展示请求趋势、状态码、地理位置等\n\n示例 Logstash 配置：\n\n```nginx\ninput {\n    file {\n        path => \"/var/log/nginx/access.log\"\n        start_position => \"beginning\"\n    }\n}\n\nfilter {\n    grok {\n        match => { \"message\" => \"%{COMBINEDAPACHELOG}\" }\n    }\n}\n\noutput {\n    elasticsearch { hosts => [\"localhost:9200\"] }\n    stdout { codec => rubydebug }\n}\n```\n\n## 8. 高可用与容器化\n\n在生产环境中，单台 Nginx 容易成为瓶颈或单点故障。为了解决这些问题，可以通过 **高可用架构**（Keepalived + Nginx）和 **容器化部署**（Docker、Kubernetes）来提升服务的稳定性和扩展性。\n\n### 8.1. Nginx + Keepalived 高可用\n\n#### 8.1.1. 原理\n\n- **Keepalived** 使用 VRRP 协议，为多台服务器分配一个虚拟 IP（VIP）\n- 主节点宕机后，备用节点会自动接管 VIP\n- 客户端始终通过 VIP 访问，保证服务连续性\n\n#### 8.1.2. 配置示例（主节点）\n\n安装 Keepalived：\n\n```bash\nsudo yum install -y keepalived\n```\n\n编辑 `/etc/keepalived/keepalived.conf`：\n\n```CONF\nvrrp_instance VI_1 {\n    state MASTER\n    interface eth0\n    virtual_router_id 51\n    priority 100\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 123456\n    }\n    virtual_ipaddress {\n        192.168.1.100\n    }\n}\n```\n\n#### 8.1.3. 配置示例（备节点）\n\n```CONF\nvrrp_instance VI_1 {\n    state BACKUP\n    interface eth0\n    virtual_router_id 51\n    priority 90\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 123456\n    }\n    virtual_ipaddress {\n        192.168.1.100\n    }\n}\n```\n\n说明：\n\n- `priority` 值越大优先级越高，主节点设置为 100，备节点设置为 90\n- `virtual_ipaddress` 为对外提供的虚拟 IP\n\n启动并开机自启：\n\n```bash\nsystemctl enable keepalived\nsystemctl start keepalived\n```\n\n### 8.2. Nginx 在 Kubernetes 中部署\n\n#### 8.2.1. Deployment 配置\n\n```\nnginx-deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:latest\n        ports:\n        - containerPort: 80\n```\n\n#### 8.2.2. Service 暴露\n\n```\nnginx-service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\nspec:\n  type: NodePort\n  selector:\n    app: nginx\n  ports:\n  - port: 80\n    targetPort: 80\n    nodePort: 30080\n```\n\n说明：\n\n- `replicas: 3` 表示运行 3 个副本，实现负载均衡\n- `Service` 将 Nginx 对外暴露在 `30080` 端口\n\n------\n\n# 四. 常见问题排查\n\n在使用 Nginx 的过程中，经常会遇到各种错误或异常。以下总结了常见问题及排查方法。\n\n## 1. 配置语法错误\n\n修改配置后执行：\n\n```bash\nnginx -t\n```\n\n输出示例：\n\n```terminal\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n```\n\n如果有错误，会显示出错的文件和行号。修复后再执行：\n\n```bash\nsystemctl reload nginx\n```\n\n------\n\n## 2. 80 或 443 端口被占用\n\n现象：Nginx 启动时报错 `bind() to 0.0.0.0:80 failed (98: Address already in use)`。\n\n排查：\n\n```bash\nnetstat -tulnp | grep 80\n```\n\n解决：\n\n- 停止占用端口的服务\n- 或修改 Nginx 配置文件 `listen` 为其他端口\n\n------\n\n## 3. 502 Bad Gateway\n\n常见原因：\n\n- 后端服务未启动或异常退出\n- Nginx 配置了错误的后端地址\n- PHP-FPM 未运行或监听错误\n\n排查：\n\n- 查看 Nginx 错误日志 `/var/log/nginx/error.log`\n- 确认后端服务是否正常运行\n- 检查 `proxy_pass` 或 `fastcgi_pass` 配置\n\n------\n\n## 4. 504 Gateway Timeout\n\n常见原因：\n\n- 后端服务响应过慢\n- Nginx 超时设置过低\n\n解决方法：\n\n```\nproxy_connect_timeout 60s;\nproxy_send_timeout 60s;\nproxy_read_timeout 60s;\n```\n\n可在 `server` 或 `location` 中增加以上配置。\n\n------\n\n## 5. SSL 证书错误\n\n现象：浏览器提示 `SSL certificate problem` 或 `NET::ERR_CERT_DATE_INVALID`。\n\n排查：\n\n- 检查证书和私钥路径是否正确\n- 检查证书是否过期\n\n```bash\nopenssl x509 -in /etc/nginx/ssl/example.crt -noout -dates\n```\n\n解决方法：\n\n- 重新申请证书（如使用 Let’s Encrypt 续签）\n- 确认 `ssl_certificate` 与 `ssl_certificate_key` 配对正确\n\n------\n\n## 6. 高并发下出现 `too many open files`\n\n现象：Nginx 报错 `EMFILE: Too many open files`。\n\n解决方法：\n\n1. 修改系统限制 `/etc/security/limits.conf`：\n\n   ```\n   * soft nofile 65535\n   * hard nofile 65535\n   ```\n\n2. 在 Nginx 配置文件中加入：\n\n   ```\n   worker_rlimit_nofile 65535;\n   ```\n\n3. 重启 Nginx\n\n------\n\n## 7. 日志过大\n\n现象：`/var/log/nginx/access.log` 或 `error.log` 文件体积过大，占满磁盘。\n\n解决方法：\n\n- 配置 `logrotate` 定期切割日志\n- 对静态资源路径关闭日志\n\n```nginx\nlocation ~* \\.(jpg|jpeg|png|gif|ico|css|js)$ {\n    access_log off;\n    log_not_found off;\n}\n```\n\n------\n\n## 8. 防火墙或 SELinux 阻止访问\n\nCentOS7 默认启用防火墙和 SELinux，可能导致端口无法访问。\n\n### 8.1. 检查防火墙\n\n```bash\nfirewall-cmd --list-all\nfirewall-cmd --add-service=http --permanent\nfirewall-cmd --add-service=https --permanent\nfirewall-cmd --reload\n```\n\n### 8.2. 检查 SELinux\n\n```bash\nsestatus\n```\n\n如果 SELinux 启用，可以临时关闭：\n```bash\nsetenforce 0\n```","slug":"Nginx","published":1,"updated":"2025-10-02T08:03:07.553Z","_id":"cmg94du2v000048j8ffqd16j3","comments":1,"layout":"post","photos":[],"content":"<blockquote>\n<p>本文整理了一份完整的 Nginx 学习与实践指南，涵盖从 <strong>在CentOS7 上安装方法</strong>、<strong>基础配置</strong>、<strong>反向代理</strong>、<strong>负载均衡</strong>、<strong>HTTPS 部署</strong>、<strong>性能优化</strong>、<strong>安全加固</strong>、<strong>日志监控</strong> 到 <strong>高可用与容器化</strong> 的全流程内容。适合需要快速上手 Nginx 的初学者，也适合在生产环境中使用 Nginx 的运维和开发人员参考。</p>\n</blockquote>\n<h1 id=\"一-简介\"><a href=\"#一-简介\" class=\"headerlink\" title=\"一. 简介\"></a>一. 简介</h1><p>Nginx（“engine x”）是一款 HTTP Web 服务器、反向代理、内容缓存、负载均衡器、TCP&#x2F;UDP 代理服务器和邮件代理服务器。最初由 Igor Sysoev 编写，并根据 2-clause BSD 许可证发布。F5 公司提供企业发行版、商业支持和培训。</p>\n<h1 id=\"二-安装Nginx\"><a href=\"#二-安装Nginx\" class=\"headerlink\" title=\"二. 安装Nginx\"></a>二. 安装Nginx</h1><h2 id=\"1-CentOS7安装Nginx\"><a href=\"#1-CentOS7安装Nginx\" class=\"headerlink\" title=\"1. CentOS7安装Nginx\"></a>1. CentOS7安装Nginx</h2><p>Nginx 安装方式对比（CentOS 7）</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">安装方式</th>\n<th>特点</th>\n<th align=\"center\">优点</th>\n<th align=\"center\">缺点</th>\n<th align=\"center\">适用场景</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><strong>官方源安装</strong></td>\n<td>使用 Nginx 官方 YUM 仓库</td>\n<td align=\"center\">版本更新快- 安全修复及时- 配置路径标准化（&#x2F;etc&#x2F;nginx）</td>\n<td align=\"center\">需要额外添加 repo</td>\n<td align=\"center\">线上生产环境，需要 <strong>长期维护、稳定更新</strong></td>\n</tr>\n<tr>\n<td align=\"center\"><strong>EPEL 源安装</strong></td>\n<td>使用 epel-release 提供的包</td>\n<td align=\"center\">安装简单- 系统兼容性好</td>\n<td align=\"center\">版本较旧- bug 修复较慢</td>\n<td align=\"center\">快速部署，<strong>对版本要求不高</strong>的场景</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>源码编译安装</strong></td>\n<td>手动下载源码并编译</td>\n<td align=\"center\">可自定义编译参数和模块- 性能可优化</td>\n<td align=\"center\">安装复杂- 升级需手动重新编译</td>\n<td align=\"center\">高级用户，需要 <strong>特殊模块（如第三方模块、优化参数）</strong></td>\n</tr>\n<tr>\n<td align=\"center\"><strong>Docker 安装</strong></td>\n<td>通过容器运行 Nginx</td>\n<td align=\"center\">隔离性好- 升级&#x2F;回滚方便- 配合 K8s 容器编排</td>\n<td align=\"center\">依赖 Docker 环境- 数据卷&#x2F;配置管理需额外考虑</td>\n<td align=\"center\">微服务、<strong>容器化环境</strong>，需要快速部署和迁移</td>\n</tr>\n</tbody></table>\n<h3 id=\"1-1-EPEL-Nginx-官方仓库安装\"><a href=\"#1-1-EPEL-Nginx-官方仓库安装\" class=\"headerlink\" title=\"1.1. EPEL + Nginx 官方仓库安装\"></a>1.1. EPEL + Nginx 官方仓库安装</h3><p>CentOS 7 默认仓库里 Nginx 版本较老，建议用官方源。</p>\n<h4 id=\"1-1-1-安装依赖\"><a href=\"#1-1-1-安装依赖\" class=\"headerlink\" title=\"1.1.1. 安装依赖\"></a>1.1.1. 安装依赖</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y epel-release</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y yum-utils</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-1-2-添加Nginx-官方仓库\"><a href=\"#1-1-2-添加Nginx-官方仓库\" class=\"headerlink\" title=\"1.1.2. 添加Nginx 官方仓库\"></a>1.1.2. 添加Nginx 官方仓库</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">tee</span> /etc/yum.repos.d/nginx.repo &lt;&lt;<span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">[nginx-stable]</span></span><br><span class=\"line\"><span class=\"string\">name=nginx stable repo</span></span><br><span class=\"line\"><span class=\"string\">baseurl=http://nginx.org/packages/centos/7/\\$basearch/</span></span><br><span class=\"line\"><span class=\"string\">gpgcheck=1</span></span><br><span class=\"line\"><span class=\"string\">enabled=1</span></span><br><span class=\"line\"><span class=\"string\">gpgkey=https://nginx.org/keys/nginx_signing.key</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[nginx-mainline]</span></span><br><span class=\"line\"><span class=\"string\">name=nginx mainline repo</span></span><br><span class=\"line\"><span class=\"string\">baseurl=http://nginx.org/packages/mainline/centos/7/\\$basearch/</span></span><br><span class=\"line\"><span class=\"string\">gpgcheck=1</span></span><br><span class=\"line\"><span class=\"string\">enabled=0</span></span><br><span class=\"line\"><span class=\"string\">gpgkey=https://nginx.org/keys/nginx_signing.key</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-1-3-安装-Nginx\"><a href=\"#1-1-3-安装-Nginx\" class=\"headerlink\" title=\"1.1.3. 安装 Nginx\"></a>1.1.3. 安装 Nginx</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y nginx</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-1-4-启动并开机自启\"><a href=\"#1-1-4-启动并开机自启\" class=\"headerlink\" title=\"1.1.4. 启动并开机自启\"></a>1.1.4. 启动并开机自启</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl <span class=\"built_in\">enable</span> nginx</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl start nginx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-EPEL-源安装\"><a href=\"#2-2-EPEL-源安装\" class=\"headerlink\" title=\"2.2. EPEL 源安装\"></a>2.2. EPEL 源安装</h3><h4 id=\"2-2-1-安装-EPEL\"><a href=\"#2-2-1-安装-EPEL\" class=\"headerlink\" title=\"2.2.1. 安装 EPEL\"></a>2.2.1. 安装 EPEL</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y epel-release</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-2-安装-nginx\"><a href=\"#2-2-2-安装-nginx\" class=\"headerlink\" title=\"2.2.2. 安装 nginx\"></a>2.2.2. 安装 nginx</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y nginx</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-3-启动服务\"><a href=\"#2-2-3-启动服务\" class=\"headerlink\" title=\"2.2.3. 启动服务\"></a>2.2.3. 启动服务</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl start nginx</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl <span class=\"built_in\">enable</span> nginx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-源码编译安装\"><a href=\"#2-3-源码编译安装\" class=\"headerlink\" title=\"2.3. 源码编译安装\"></a>2.3. 源码编译安装</h3><p>适合需要自定义模块的场景。</p>\n<h4 id=\"2-3-1-安装编译工具和依赖\"><a href=\"#2-3-1-安装编译工具和依赖\" class=\"headerlink\" title=\"2.3.1. 安装编译工具和依赖\"></a>2.3.1. 安装编译工具和依赖</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum groupinstall -y <span class=\"string\">&quot;Development Tools&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y gcc pcre-devel zlib-devel make openssl-devel wget</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-3-2-下载源码（以稳定版-1-24-0-为例）\"><a href=\"#2-3-2-下载源码（以稳定版-1-24-0-为例）\" class=\"headerlink\" title=\"2.3.2. 下载源码（以稳定版 1.24.0 为例）\"></a>2.3.2. 下载源码（以稳定版 1.24.0 为例）</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://nginx.org/download/nginx-1.24.0.tar.gz</span><br><span class=\"line\">tar -zxvf nginx-1.24.0.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> nginx-1.24.0</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-3-3-配置编译参数（可加模块）\"><a href=\"#2-3-3-配置编译参数（可加模块）\" class=\"headerlink\" title=\"2.3.3. 配置编译参数（可加模块）\"></a>2.3.3. 配置编译参数（可加模块）</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_gzip_static_module</span><br><span class=\"line\">make</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> make install</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-3-4-启动\"><a href=\"#2-3-4-启动\" class=\"headerlink\" title=\"2.3.4. 启动\"></a>2.3.4. 启动</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-3-5-添加-systemd-管理\"><a href=\"#2-3-5-添加-systemd-管理\" class=\"headerlink\" title=\"2.3.5. 添加 systemd 管理\"></a>2.3.5. 添加 systemd 管理</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">tee</span> /etc/systemd/system/nginx.service &lt;&lt;<span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">[Unit]</span></span><br><span class=\"line\"><span class=\"string\">Description=The NGINX HTTP and reverse proxy server</span></span><br><span class=\"line\"><span class=\"string\">After=network.target</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[Service]</span></span><br><span class=\"line\"><span class=\"string\">ExecStart=/usr/local/nginx/sbin/nginx</span></span><br><span class=\"line\"><span class=\"string\">ExecReload=/usr/local/nginx/sbin/nginx -s reload</span></span><br><span class=\"line\"><span class=\"string\">ExecStop=/usr/local/nginx/sbin/nginx -s quit</span></span><br><span class=\"line\"><span class=\"string\">PIDFile=/usr/local/nginx/logs/nginx.pid</span></span><br><span class=\"line\"><span class=\"string\">Restart=always</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[Install]</span></span><br><span class=\"line\"><span class=\"string\">WantedBy=multi-user.target</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl daemon-reload</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl <span class=\"built_in\">enable</span> nginx</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl start nginx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-4-通过-Docker-安装-Nginx\"><a href=\"#2-4-通过-Docker-安装-Nginx\" class=\"headerlink\" title=\"2.4. 通过 Docker 安装 Nginx\"></a>2.4. 通过 Docker 安装 Nginx</h3><p>如果你有 Docker 环境，可以直接用容器跑。</p>\n<h4 id=\"2-4-1-安装-Docker（若未安装）\"><a href=\"#2-4-1-安装-Docker（若未安装）\" class=\"headerlink\" title=\"2.4.1. 安装 Docker（若未安装）\"></a>2.4.1. 安装 Docker（若未安装）</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y docker-ce docker-ce-cli containerd.io</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl <span class=\"built_in\">enable</span> docker</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl start docker</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-4-2-拉取并运行-Nginx\"><a href=\"#2-4-2-拉取并运行-Nginx\" class=\"headerlink\" title=\"2.4.2. 拉取并运行 Nginx\"></a>2.4.2. 拉取并运行 Nginx</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> docker run --name nginx -p 80:80 -d nginx</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"三-Nginx教程\"><a href=\"#三-Nginx教程\" class=\"headerlink\" title=\"三. Nginx教程\"></a>三. Nginx教程</h1><h2 id=\"1-Nginx-基础配置\"><a href=\"#1-Nginx-基础配置\" class=\"headerlink\" title=\"1. Nginx 基础配置\"></a>1. Nginx 基础配置</h2><p>Nginx 的配置文件一般位于：</p>\n<ul>\n<li>主配置文件：<code>/etc/nginx/nginx.conf</code></li>\n<li>子配置文件：<code>/etc/nginx/conf.d/*.conf</code></li>\n</ul>\n<h3 id=\"1-1-Nginx-配置文件结构\"><a href=\"#1-1-Nginx-配置文件结构\" class=\"headerlink\" title=\"1.1. Nginx 配置文件结构\"></a>1.1. Nginx 配置文件结构</h3><p>一个完整的 Nginx 配置由 <strong>三大块</strong> 组成：</p>\n<ol>\n<li><strong>全局块</strong>（定义进程数、运行用户等）</li>\n<li><strong>events 块</strong>（事件处理，worker 连接数等）</li>\n<li><strong>http 块</strong>（最核心部分，定义虚拟主机、反向代理、负载均衡等）</li>\n</ol>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 全局块</span></span><br><span class=\"line\"><span class=\"attribute\">user</span>  nginx;</span><br><span class=\"line\"><span class=\"attribute\">worker_processes</span> auto;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># events 块</span></span><br><span class=\"line\"><span class=\"section\">events</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">worker_connections</span> <span class=\"number\">1024</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># http 块</span></span><br><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">include</span>       /etc/nginx/mime.types;</span><br><span class=\"line\">    <span class=\"attribute\">default_type</span>  application/octet-stream;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 日志</span></span><br><span class=\"line\">    <span class=\"attribute\">access_log</span> /var/log/nginx/access.log;</span><br><span class=\"line\">    <span class=\"attribute\">error_log</span> /var/log/nginx/<span class=\"literal\">error</span>.log;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># server 块（虚拟主机）</span></span><br><span class=\"line\">    <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">        <span class=\"attribute\">server_name</span> example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">            <span class=\"attribute\">root</span>   /usr/share/nginx/html;</span><br><span class=\"line\">            <span class=\"attribute\">index</span>  index.html index.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-server-块（虚拟主机）\"><a href=\"#1-2-server-块（虚拟主机）\" class=\"headerlink\" title=\"1.2. server 块（虚拟主机）\"></a>1.2. server 块（虚拟主机）</h3><p>Nginx 可以通过 <strong>虚拟主机</strong> 配置多个站点：</p>\n<h4 id=\"1-2-1-基于域名的虚拟主机\"><a href=\"#1-2-1-基于域名的虚拟主机\" class=\"headerlink\" title=\"1.2.1. 基于域名的虚拟主机\"></a>1.2.1. 基于域名的虚拟主机</h4><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> www.site1.com;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /var/www/site1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> www.site2.com;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /var/www/site2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当访问 <code>www.site1.com</code> 时，会返回 <code>/var/www/site1</code> 目录内容；访问 <code>www.site2.com</code> 时，会返回 <code>/var/www/site2</code>。</p>\n<h4 id=\"1-2-2-基于端口的虚拟主机\"><a href=\"#1-2-2-基于端口的虚拟主机\" class=\"headerlink\" title=\"1.2.2. 基于端口的虚拟主机\"></a>1.2.2. 基于端口的虚拟主机</h4><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">8080</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> localhost;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /var/www/site8080;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>访问 <code>http://IP:8080/</code> 时，返回 <code>/var/www/site8080</code> 内容。</p>\n<h3 id=\"1-3-location-块（路径匹配）\"><a href=\"#1-3-location-块（路径匹配）\" class=\"headerlink\" title=\"1.3. location 块（路径匹配）\"></a>1.3. location 块（路径匹配）</h3><p><code>location</code> 用来匹配 URL 路径，并指定处理方式。</p>\n<p>常见写法：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 精确匹配</span></span><br><span class=\"line\"><span class=\"section\">location</span> = /abc &#123;</span><br><span class=\"line\">    <span class=\"attribute\">return</span> <span class=\"number\">200</span> <span class=\"string\">&quot;this is /abc&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 前缀匹配</span></span><br><span class=\"line\"><span class=\"section\">location</span> /images/ &#123;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /data;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 正则匹配</span></span><br><span class=\"line\"><span class=\"section\">location</span> <span class=\"regexp\">~ \\.php$</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /var/www/html;</span><br><span class=\"line\">    <span class=\"attribute\">fastcgi_pass</span> <span class=\"number\">127.0.0.1:9000</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>匹配优先级：</p>\n<p><code>=</code> 精确匹配 &gt; 前缀匹配（最长优先） &gt; 正则匹配</p>\n<h3 id=\"1-4-配置静态网站\"><a href=\"#1-4-配置静态网站\" class=\"headerlink\" title=\"1.4. 配置静态网站\"></a>1.4. 配置静态网站</h3><p>最常见的用法：直接托管静态文件（HTML、JS、CSS、图片）。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> www.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">root</span> /var/www/html;</span><br><span class=\"line\">    <span class=\"attribute\">index</span> index.html index.htm;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>将文件放到 <code>/var/www/html/</code> 目录下即可访问。<br>例如：<code>/var/www/html/index.html</code> → <code>http://www.example.com/index.html</code></p>\n<h2 id=\"2-反向代理与动静分离\"><a href=\"#2-反向代理与动静分离\" class=\"headerlink\" title=\"2. 反向代理与动静分离\"></a>2. 反向代理与动静分离</h2><h3 id=\"2-1-基本反向代理\"><a href=\"#2-1-基本反向代理\" class=\"headerlink\" title=\"2.1. 基本反向代理\"></a>2.1. 基本反向代理</h3><p>示例：将请求转发给运行在 127.0.0.1:5000 的应用服务。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> app.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:5000;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>proxy_pass</code> 指定后端服务地址</li>\n<li><code>proxy_set_header</code> 用来传递客户端的真实 IP 和 Host，避免后端获取不到正确信息</li>\n</ul>\n<h3 id=\"2-2-代理多个路径\"><a href=\"#2-2-代理多个路径\" class=\"headerlink\" title=\"2.2. 代理多个路径\"></a>2.2. 代理多个路径</h3><p>如果前端和后端服务分开，可以通过不同路径代理不同后端。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> www.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> /api/ &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:8000;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span> /var/www/html;</span><br><span class=\"line\">        <span class=\"attribute\">index</span> index.html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>/api/</code> 请求会转发到后端 8000 端口</li>\n<li><code>/</code> 静态资源直接由 Nginx 提供</li>\n</ul>\n<h3 id=\"2-3-动静分离\"><a href=\"#2-3-动静分离\" class=\"headerlink\" title=\"2.3. 动静分离\"></a>2.3. 动静分离</h3><p>动静分离的常见写法：静态资源由 Nginx 提供，动态请求交给后端。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> www.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 静态资源</span></span><br><span class=\"line\">    <span class=\"section\">location</span> /static/ &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span> /var/www/html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 动态请求</span></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:5000;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-4-针对不同后端的配置示例\"><a href=\"#2-4-针对不同后端的配置示例\" class=\"headerlink\" title=\"2.4. 针对不同后端的配置示例\"></a>2.4. 针对不同后端的配置示例</h3><h4 id=\"2-4-1-Node-js\"><a href=\"#2-4-1-Node-js\" class=\"headerlink\" title=\"2.4.1. Node.js\"></a>2.4.1. Node.js</h4><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> node.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:3000;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_http_version</span> <span class=\"number\">1</span>.<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Upgrade <span class=\"variable\">$http_upgrade</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Connection <span class=\"string\">&#x27;upgrade&#x27;</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-4-2-Flask-Gunicorn\"><a href=\"#2-4-2-Flask-Gunicorn\" class=\"headerlink\" title=\"2.4.2. Flask (Gunicorn)\"></a>2.4.2. Flask (Gunicorn)</h4><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> flask.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:8000;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-4-3-PHP-PHP-FPM\"><a href=\"#2-4-3-PHP-PHP-FPM\" class=\"headerlink\" title=\"2.4.3. PHP (PHP-FPM)\"></a>2.4.3. PHP (PHP-FPM)</h4><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> php.example.com;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /var/www/phpapp;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">index</span> index.php index.html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> <span class=\"regexp\">~ \\.php$</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_pass</span> <span class=\"number\">127.0.0.1:9000</span>;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_index</span> index.php;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_param</span> SCRIPT_FILENAME <span class=\"variable\">$document_root</span><span class=\"variable\">$fastcgi_script_name</span>;</span><br><span class=\"line\">        <span class=\"attribute\">include</span> fastcgi_params;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-负载均衡\"><a href=\"#3-负载均衡\" class=\"headerlink\" title=\"3. 负载均衡\"></a>3. 负载均衡</h2><p>当单个后端服务无法满足高并发需求时，可以通过 Nginx 的 <strong>upstream 模块</strong> 配置多台后端，实现负载均衡。</p>\n<h3 id=\"3-1-基本配置\"><a href=\"#3-1-基本配置\" class=\"headerlink\" title=\"3.1. 基本配置\"></a>3.1. 基本配置</h3><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">upstream</span> backend &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.10</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.11</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> lb.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://backend;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li>定义 <code>upstream backend</code>，包含多个后端节点</li>\n<li>在 <code>proxy_pass</code> 中直接引用 <code>http://backend</code></li>\n</ul>\n<p>默认策略为 <strong>轮询（Round Robin）</strong>。</p>\n<h3 id=\"3-2-负载均衡策略\"><a href=\"#3-2-负载均衡策略\" class=\"headerlink\" title=\"3.2. 负载均衡策略\"></a>3.2. 负载均衡策略</h3><h4 id=\"3-2-1-轮询（默认）\"><a href=\"#3-2-1-轮询（默认）\" class=\"headerlink\" title=\"3.2.1. 轮询（默认）\"></a>3.2.1. 轮询（默认）</h4><p>请求按顺序分发到后端服务器。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">upstream</span> backend &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.10</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.11</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-2-最少连接数（least-conn）\"><a href=\"#3-2-2-最少连接数（least-conn）\" class=\"headerlink\" title=\"3.2.2. 最少连接数（least_conn）\"></a>3.2.2. 最少连接数（least_conn）</h4><p>将请求分配给当前连接数最少的后端。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">upstream</span> backend &#123;</span><br><span class=\"line\">    least_conn;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.10</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.11</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-3-IP-哈希（ip-hash）\"><a href=\"#3-2-3-IP-哈希（ip-hash）\" class=\"headerlink\" title=\"3.2.3. IP 哈希（ip_hash）\"></a>3.2.3. IP 哈希（ip_hash）</h4><p>同一个客户端 IP 会固定访问同一台后端，常用于有会话需求的场景。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">upstream</span> backend &#123;</span><br><span class=\"line\">    ip_hash;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.10</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.11</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-4-权重（weight）\"><a href=\"#3-2-4-权重（weight）\" class=\"headerlink\" title=\"3.2.4. 权重（weight）\"></a>3.2.4. 权重（weight）</h4><p>为不同服务器设置权重，性能好的服务器可以承担更多请求。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">upstream</span> backend &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.10</span> weight=<span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.11</span> weight=<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-健康检查（被动）\"><a href=\"#3-3-健康检查（被动）\" class=\"headerlink\" title=\"3.3. 健康检查（被动）\"></a>3.3. 健康检查（被动）</h3><p>Nginx 默认支持被动健康检查：当后端返回错误时，会自动将其标记为不可用，直到恢复正常。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">upstream</span> backend &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.10</span> max_fails=<span class=\"number\">3</span> fail_timeout=<span class=\"number\">30s</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.11</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-HTTPS-配置\"><a href=\"#4-HTTPS-配置\" class=\"headerlink\" title=\"4. HTTPS 配置\"></a>4. HTTPS 配置</h2><p>随着安全要求的提升，HTTPS 已经成为网站的标配。Nginx 提供了完善的 SSL&#x2F;TLS 支持，可以轻松为网站启用 HTTPS。</p>\n<h3 id=\"4-1-基本-HTTPS-配置\"><a href=\"#4-1-基本-HTTPS-配置\" class=\"headerlink\" title=\"4.1. 基本 HTTPS 配置\"></a>4.1. 基本 HTTPS 配置</h3><p>假设证书和私钥文件已经准备好（例如 <code>example.crt</code> 和 <code>example.key</code>）。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">443</span> ssl;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> www.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate</span>     /etc/nginx/ssl/example.crt;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate_key</span> /etc/nginx/ssl/example.key;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span> /usr/share/nginx/html;</span><br><span class=\"line\">        <span class=\"attribute\">index</span> index.html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>listen 443 ssl</code> 表示启用 443 端口并开启 SSL</li>\n<li><code>ssl_certificate</code> 指定公钥证书</li>\n<li><code>ssl_certificate_key</code> 指定私钥</li>\n</ul>\n<h3 id=\"4-2-HTTP-自动跳转-HTTPS\"><a href=\"#4-2-HTTP-自动跳转-HTTPS\" class=\"headerlink\" title=\"4.2. HTTP 自动跳转 HTTPS\"></a>4.2. HTTP 自动跳转 HTTPS</h3><p>通常需要将所有 HTTP 请求自动跳转到 HTTPS。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> www.example.com;</span><br><span class=\"line\">    <span class=\"attribute\">return</span> <span class=\"number\">301</span> https://<span class=\"variable\">$host</span><span class=\"variable\">$request_uri</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-使用-Let’s-Encrypt-免费证书\"><a href=\"#4-3-使用-Let’s-Encrypt-免费证书\" class=\"headerlink\" title=\"4.3. 使用 Let’s Encrypt 免费证书\"></a>4.3. 使用 Let’s Encrypt 免费证书</h3><p>安装 Certbot 获取免费 SSL 证书：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y epel-release</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y certbot python2-certbot-nginx</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> certbot --nginx -d www.example.com</span><br></pre></td></tr></table></figure>\n\n<p>执行成功后，Certbot 会自动修改 Nginx 配置并续期证书。</p>\n<h3 id=\"4-4-TLS-安全优化\"><a href=\"#4-4-TLS-安全优化\" class=\"headerlink\" title=\"4.4. TLS 安全优化\"></a>4.4. TLS 安全优化</h3><p>为了避免使用不安全的协议和加密套件，可以在配置中进行限制。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">ssl_protocols</span> TLSv1.<span class=\"number\">2</span> TLSv1.<span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"attribute\">ssl_ciphers</span> HIGH:!aNULL:!MD5;</span><br><span class=\"line\"><span class=\"attribute\">ssl_prefer_server_ciphers</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\"><span class=\"attribute\">ssl_session_cache</span> shared:SSL:<span class=\"number\">10m</span>;</span><br><span class=\"line\"><span class=\"attribute\">ssl_session_timeout</span> <span class=\"number\">10m</span>;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li>只启用 <code>TLSv1.2</code> 和 <code>TLSv1.3</code></li>\n<li>禁用弱加密算法</li>\n<li>开启 session 缓存，提高性能</li>\n</ul>\n<h3 id=\"4-5-HTTP-2-支持\"><a href=\"#4-5-HTTP-2-支持\" class=\"headerlink\" title=\"4.5. HTTP&#x2F;2 支持\"></a>4.5. HTTP&#x2F;2 支持</h3><p>开启 HTTP&#x2F;2 可以提升 HTTPS 网站性能（需要 OpenSSL 支持）。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">443</span> ssl http2;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> www.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate</span>     /etc/nginx/ssl/example.crt;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate_key</span> /etc/nginx/ssl/example.key;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span> /usr/share/nginx/html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-性能优化\"><a href=\"#5-性能优化\" class=\"headerlink\" title=\"5. 性能优化\"></a>5. 性能优化</h2><p>Nginx 默认配置在中小规模场景下可以正常工作，但在高并发或大流量场景下，需要进行性能优化以提升吞吐量和响应速度。</p>\n<h3 id=\"5-1-worker-配置\"><a href=\"#5-1-worker-配置\" class=\"headerlink\" title=\"5.1. worker 配置\"></a>5.1. worker 配置</h3><p>Nginx 的核心是事件驱动模型，<code>worker_processes</code> 和 <code>worker_connections</code> 是性能优化的关键。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">worker_processes</span> auto;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">events</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">worker_connections</span> <span class=\"number\">1024</span>;</span><br><span class=\"line\">    <span class=\"attribute\">use</span> <span class=\"literal\">epoll</span>;</span><br><span class=\"line\">    <span class=\"attribute\">multi_accept</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>worker_processes auto</code>：自动根据 CPU 核心数分配进程数</li>\n<li><code>worker_connections</code>：每个 worker 最大连接数，通常设置为 1024 或更高</li>\n<li><code>use epoll</code>：Linux 下推荐使用 epoll 模型</li>\n<li><code>multi_accept on</code>：允许 worker 一次接受多个新连接</li>\n</ul>\n<h3 id=\"5-2-TCP-优化\"><a href=\"#5-2-TCP-优化\" class=\"headerlink\" title=\"5.2. TCP 优化\"></a>5.2. TCP 优化</h3><p>Nginx 提供了几个 TCP 优化选项，提高大文件传输和连接效率。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">sendfile</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">tcp_nopush</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">tcp_nodelay</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>sendfile on</code>：启用零拷贝，提高文件传输效率</li>\n<li><code>tcp_nopush on</code>：尽量一次性发送 HTTP 响应头，减少包数量</li>\n<li><code>tcp_nodelay on</code>：立即发送小数据包，适合交互式应用</li>\n</ul>\n<h3 id=\"5-3-Gzip-压缩\"><a href=\"#5-3-Gzip-压缩\" class=\"headerlink\" title=\"5.3. Gzip 压缩\"></a>5.3. Gzip 压缩</h3><p>启用 gzip 压缩可减少传输数据量，提升访问速度。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">gzip</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">gzip_min_length</span> <span class=\"number\">1k</span>;</span><br><span class=\"line\">    <span class=\"attribute\">gzip_comp_level</span> <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"attribute\">gzip_types</span> text/plain text/css application/json application/javascript application/xml application/xml+rss image/svg+xml;</span><br><span class=\"line\">    <span class=\"attribute\">gzip_vary</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>gzip_min_length</code>：最小压缩大小（1KB以上才压缩）</li>\n<li><code>gzip_comp_level</code>：压缩等级（1-9，推荐 4-6）</li>\n<li><code>gzip_types</code>：指定要压缩的 MIME 类型</li>\n</ul>\n<h3 id=\"5-4-静态资源缓存\"><a href=\"#5-4-静态资源缓存\" class=\"headerlink\" title=\"5.4. 静态资源缓存\"></a>5.4. 静态资源缓存</h3><p>通过 <code>expires</code> 或 <code>cache-control</code> 指令为静态文件设置缓存策略。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">location</span> <span class=\"regexp\">~* \\.(jpg|jpeg|png|gif|ico|css|js)$</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">expires</span> <span class=\"number\">30d</span>;</span><br><span class=\"line\">    <span class=\"attribute\">add_header</span> Cache-Control <span class=\"string\">&quot;public&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>expires 30d</code>：静态资源缓存 30 天</li>\n<li><code>Cache-Control public</code>：允许浏览器和代理缓存</li>\n</ul>\n<h3 id=\"5-5-反向代理缓存\"><a href=\"#5-5-反向代理缓存\" class=\"headerlink\" title=\"5.5. 反向代理缓存\"></a>5.5. 反向代理缓存</h3><p>Nginx 也可以缓存后端响应，减轻应用服务器压力。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">proxy_cache_path</span> /var/cache/nginx levels=<span class=\"number\">1</span>:<span class=\"number\">2</span> keys_zone=my_cache:<span class=\"number\">10m</span> inactive=<span class=\"number\">60m</span>;</span><br><span class=\"line\"><span class=\"attribute\">proxy_cache_key</span> <span class=\"variable\">$scheme</span><span class=\"variable\">$proxy_host</span><span class=\"variable\">$request_uri</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"section\">location</span> /api/ &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:8000;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_cache</span> my_cache;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_cache_valid</span> <span class=\"number\">200</span> <span class=\"number\">302</span> <span class=\"number\">10m</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_cache_valid</span> <span class=\"number\">404</span> <span class=\"number\">1m</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>proxy_cache_path</code>：定义缓存路径和缓存区大小</li>\n<li><code>proxy_cache</code>：指定使用的缓存区</li>\n<li><code>proxy_cache_valid</code>：缓存不同响应码的时间</li>\n</ul>\n<h3 id=\"5-6-文件描述符限制\"><a href=\"#5-6-文件描述符限制\" class=\"headerlink\" title=\"5.6. 文件描述符限制\"></a>5.6. 文件描述符限制</h3><p>需要提高系统的文件描述符数，否则高并发时可能出现 <code>too many open files</code> 错误。</p>\n<p>编辑 <code>/etc/security/limits.conf</code>：</p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">* </span>soft nofile 65535</span><br><span class=\"line\"><span class=\"bullet\">* </span>hard nofile 65535</span><br></pre></td></tr></table></figure>\n\n<p>在 Nginx 配置中增加：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">worker_rlimit_nofile</span> <span class=\"number\">65535</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-安全加固\"><a href=\"#6-安全加固\" class=\"headerlink\" title=\"6. 安全加固\"></a>6. 安全加固</h2><p>Nginx 除了作为高性能 Web 服务器外，也可以在前端起到安全防护作用。通过合理的配置，可以减少攻击面、限制非法访问、缓解 DDoS&#x2F;CC 攻击。</p>\n<h3 id=\"6-1-禁止目录遍历\"><a href=\"#6-1-禁止目录遍历\" class=\"headerlink\" title=\"6.1. 禁止目录遍历\"></a>6.1. 禁止目录遍历</h3><p>默认情况下，如果某目录没有 <code>index.html</code> 文件，可能会暴露文件列表。可以通过以下方式禁止目录遍历：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">    <span class=\"attribute\">autoindex</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-2-隐藏版本号\"><a href=\"#6-2-隐藏版本号\" class=\"headerlink\" title=\"6.2. 隐藏版本号\"></a>6.2. 隐藏版本号</h3><p>Nginx 默认会在错误页面或响应头中显示版本号，可能会暴露漏洞信息。可以关闭：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server_tokens</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-3-限制请求方法\"><a href=\"#6-3-限制请求方法\" class=\"headerlink\" title=\"6.3. 限制请求方法\"></a>6.3. 限制请求方法</h3><p>只允许特定的 HTTP 方法（如 GET、POST），拒绝其他请求方法：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">    <span class=\"attribute\">if</span> (<span class=\"variable\">$request_method</span> !<span class=\"regexp\">~ ^(GET|POST)$)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">return</span> <span class=\"number\">405</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-4-请求速率限制（防止-CC-攻击）\"><a href=\"#6-4-请求速率限制（防止-CC-攻击）\" class=\"headerlink\" title=\"6.4. 请求速率限制（防止 CC 攻击）\"></a>6.4. 请求速率限制（防止 CC 攻击）</h3><p>限制单个 IP 的请求速率，防止恶意刷请求：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">limit_req_zone</span> <span class=\"variable\">$binary_remote_addr</span> zone=req_limit:<span class=\"number\">10m</span> rate=10r/s;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">        <span class=\"section\">location</span> /api/ &#123;</span><br><span class=\"line\">            <span class=\"attribute\">limit_req</span> zone=req_limit burst=<span class=\"number\">20</span> nodelay;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:8000;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><p><code>rate=10r/s</code>：每秒允许 10 个请求</p>\n</li>\n<li><p><code>burst=20</code>：允许短时间内突发 20 个请求</p>\n</li>\n<li><p><code>nodelay</code>：超出部分立即拒绝</p>\n</li>\n</ul>\n<h3 id=\"6-5-连接数限制\"><a href=\"#6-5-连接数限制\" class=\"headerlink\" title=\"6.5. 连接数限制\"></a>6.5. 连接数限制</h3><p>限制单个 IP 的并发连接数，防止恶意占用连接：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">limit_conn_zone</span> <span class=\"variable\">$binary_remote_addr</span> zone=addr:<span class=\"number\">10m</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">        <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">            <span class=\"attribute\">limit_conn</span> addr <span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>limit_conn_zone</code> 定义一个共享内存存储 IP 状态</li>\n<li><code>limit_conn addr 10</code> 表示单个 IP 最多 10 个并发连接</li>\n</ul>\n<h3 id=\"6-6-防盗链（Referer-检查）\"><a href=\"#6-6-防盗链（Referer-检查）\" class=\"headerlink\" title=\"6.6. 防盗链（Referer 检查）\"></a>6.6. 防盗链（Referer 检查）</h3><p>避免图片、视频等资源被其他网站盗用：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">location</span> <span class=\"regexp\">~* \\.(jpg|jpeg|png|gif|mp4)$</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">valid_referers</span> <span class=\"literal\">none</span> <span class=\"literal\">blocked</span> <span class=\"regexp\">*.example.com</span>;</span><br><span class=\"line\">    <span class=\"attribute\">if</span> (<span class=\"variable\">$invalid_referer</span>) &#123;</span><br><span class=\"line\">        <span class=\"attribute\">return</span> <span class=\"number\">403</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>valid_referers</code> 定义合法来源</li>\n<li><code>$invalid_referer</code> 判断非法来源并返回 403</li>\n</ul>\n<h3 id=\"6-7-IP-访问控制\"><a href=\"#6-7-IP-访问控制\" class=\"headerlink\" title=\"6.7. IP 访问控制\"></a>6.7. IP 访问控制</h3><p>只允许特定 IP 访问管理路径，其他全部拒绝：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">location</span> /admin &#123;</span><br><span class=\"line\">    <span class=\"attribute\">allow</span> <span class=\"number\">192.168.1.0</span>/<span class=\"number\">24</span>;</span><br><span class=\"line\">    <span class=\"attribute\">deny</span> all;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-8-防止上传大文件\"><a href=\"#6-8-防止上传大文件\" class=\"headerlink\" title=\"6.8. 防止上传大文件\"></a>6.8. 防止上传大文件</h3><p>限制请求体大小，避免恶意上传超大文件导致服务资源耗尽：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">client_max_body_size</span> <span class=\"number\">10m</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-日志与监控\"><a href=\"#7-日志与监控\" class=\"headerlink\" title=\"7. 日志与监控\"></a>7. 日志与监控</h2><p>Nginx 提供了 <strong>访问日志（access log）</strong> 和 <strong>错误日志（error log）</strong>，是排查问题、分析流量和做安全审计的重要手段。配合第三方工具，可以实现实时监控与可视化分析。</p>\n<h3 id=\"7-1-访问日志\"><a href=\"#7-1-访问日志\" class=\"headerlink\" title=\"7.1. 访问日志\"></a>7.1. 访问日志</h3><p>访问日志记录了每个请求的详细信息，包括 IP、时间、请求方法、状态码等。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">log_format</span> main <span class=\"string\">&#x27;<span class=\"variable\">$remote_addr</span> - <span class=\"variable\">$remote_user</span> [<span class=\"variable\">$time_local</span>] &quot;<span class=\"variable\">$request</span>&quot; &#x27;</span></span><br><span class=\"line\">                    <span class=\"string\">&#x27;<span class=\"variable\">$status</span> <span class=\"variable\">$body_bytes_sent</span> &quot;<span class=\"variable\">$http_referer</span>&quot; &#x27;</span></span><br><span class=\"line\">                    <span class=\"string\">&#x27;&quot;<span class=\"variable\">$http_user_agent</span>&quot; &quot;<span class=\"variable\">$http_x_forwarded_for</span>&quot;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">access_log</span> /var/log/nginx/access.log main;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>log_format</code> 定义日志格式（<code>main</code> 是名称）</li>\n<li><code>access_log</code> 指定日志文件和格式</li>\n</ul>\n<p>日志示例：</p>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">192.168.1.100</span> - - <span class=\"string\">[29/Aug/2025:12:31:21 +0800]</span> <span class=\"string\">&quot;<span class=\"keyword\">GET</span> /index.html HTTP/1.1&quot;</span> <span class=\"number\">200</span> <span class=\"number\">1024</span> <span class=\"string\">&quot;-&quot;</span> <span class=\"string\">&quot;Mozilla/5.0&quot;</span> <span class=\"string\">&quot;-&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-2-错误日志\"><a href=\"#7-2-错误日志\" class=\"headerlink\" title=\"7.2. 错误日志\"></a>7.2. 错误日志</h3><p>错误日志记录了 Nginx 在运行时遇到的问题，如配置错误、后端不可达等。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">error_log</span> /var/log/nginx/<span class=\"literal\">error</span>.log <span class=\"literal\">warn</span>;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li>日志级别：<code>debug</code>、<code>info</code>、<code>notice</code>、<code>warn</code>、<code>error</code>、<code>crit</code></li>\n<li>建议生产环境使用 <code>warn</code> 或 <code>error</code>，避免日志过多</li>\n</ul>\n<h3 id=\"7-3-按站点分日志\"><a href=\"#7-3-按站点分日志\" class=\"headerlink\" title=\"7.3. 按站点分日志\"></a>7.3. 按站点分日志</h3><p>可以为不同的虚拟主机单独配置日志文件，方便分析。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> site1.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">access_log</span> /var/log/nginx/site1_access.log main;</span><br><span class=\"line\">    <span class=\"attribute\">error_log</span>  /var/log/nginx/site1_error.log <span class=\"literal\">warn</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span> /var/www/site1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-4-禁用日志\"><a href=\"#7-4-禁用日志\" class=\"headerlink\" title=\"7.4. 禁用日志\"></a>7.4. 禁用日志</h3><p>如果不想记录某些静态资源请求日志，可以关闭日志：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">location</span> <span class=\"regexp\">~* \\.(jpg|jpeg|png|gif|ico|css|js)$</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">access_log</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">    <span class=\"attribute\">log_not_found</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-5-日志切割\"><a href=\"#7-5-日志切割\" class=\"headerlink\" title=\"7.5. 日志切割\"></a>7.5. 日志切割</h3><p>Nginx 不会自动切割日志，通常通过 <code>logrotate</code> 管理。</p>\n<p>配置文件路径：<code>/etc/logrotate.d/nginx</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/var/log/nginx/*.log &#123;</span><br><span class=\"line\">    daily</span><br><span class=\"line\">    missingok</span><br><span class=\"line\">    rotate 14</span><br><span class=\"line\">    compress</span><br><span class=\"line\">    delaycompress</span><br><span class=\"line\">    notifempty</span><br><span class=\"line\">    create 0640 nginx adm</span><br><span class=\"line\">    sharedscripts</span><br><span class=\"line\">    postrotate</span><br><span class=\"line\">        [ -f /var/run/nginx.pid ] &amp;&amp; kill -USR1 `cat /var/run/nginx.pid`</span><br><span class=\"line\">    endscript</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-6-实时日志分析（GoAccess）\"><a href=\"#7-6-实时日志分析（GoAccess）\" class=\"headerlink\" title=\"7.6. 实时日志分析（GoAccess）\"></a>7.6. 实时日志分析（GoAccess）</h3><p>GoAccess 是一个命令行实时日志分析工具。</p>\n<p>安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y goaccess</span><br></pre></td></tr></table></figure>\n\n<p>使用：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">goaccess /var/log/nginx/access.log -o /var/www/html/report.html --log-format=COMBINED --real-time-html</span><br></pre></td></tr></table></figure>\n\n<p>浏览器访问 <code>http://server_ip/report.html</code> 即可看到可视化报表。</p>\n<h3 id=\"7-7-集成-ELK（ElasticSearch-Logstash-Kibana）\"><a href=\"#7-7-集成-ELK（ElasticSearch-Logstash-Kibana）\" class=\"headerlink\" title=\"7.7. 集成 ELK（ElasticSearch + Logstash + Kibana）\"></a>7.7. 集成 ELK（ElasticSearch + Logstash + Kibana）</h3><ul>\n<li><strong>Logstash</strong> 采集和解析 Nginx 日志</li>\n<li><strong>ElasticSearch</strong> 存储和索引日志数据</li>\n<li><strong>Kibana</strong> 可视化展示请求趋势、状态码、地理位置等</li>\n</ul>\n<p>示例 Logstash 配置：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">input</span> &#123;</span><br><span class=\"line\">    <span class=\"section\">file</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">path</span> =&gt; <span class=\"string\">&quot;/var/log/nginx/access.log&quot;</span></span><br><span class=\"line\">        start_position =&gt; <span class=\"string\">&quot;beginning&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">filter &#123;</span><br><span class=\"line\">    <span class=\"section\">grok</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">match</span> =&gt; &#123; &quot;message&quot; =&gt; &quot;%&#123;COMBINEDAPACHELOG&#125;&quot; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">output</span> &#123;</span><br><span class=\"line\">    <span class=\"section\">elasticsearch</span> &#123; <span class=\"attribute\">hosts</span> =&gt; [<span class=\"string\">&quot;localhost:9200&quot;</span>] &#125;</span><br><span class=\"line\">    stdout &#123; <span class=\"attribute\">codec</span> =&gt; rubydebug &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"8-高可用与容器化\"><a href=\"#8-高可用与容器化\" class=\"headerlink\" title=\"8. 高可用与容器化\"></a>8. 高可用与容器化</h2><p>在生产环境中，单台 Nginx 容易成为瓶颈或单点故障。为了解决这些问题，可以通过 <strong>高可用架构</strong>（Keepalived + Nginx）和 <strong>容器化部署</strong>（Docker、Kubernetes）来提升服务的稳定性和扩展性。</p>\n<h3 id=\"8-1-Nginx-Keepalived-高可用\"><a href=\"#8-1-Nginx-Keepalived-高可用\" class=\"headerlink\" title=\"8.1. Nginx + Keepalived 高可用\"></a>8.1. Nginx + Keepalived 高可用</h3><h4 id=\"8-1-1-原理\"><a href=\"#8-1-1-原理\" class=\"headerlink\" title=\"8.1.1. 原理\"></a>8.1.1. 原理</h4><ul>\n<li><strong>Keepalived</strong> 使用 VRRP 协议，为多台服务器分配一个虚拟 IP（VIP）</li>\n<li>主节点宕机后，备用节点会自动接管 VIP</li>\n<li>客户端始终通过 VIP 访问，保证服务连续性</li>\n</ul>\n<h4 id=\"8-1-2-配置示例（主节点）\"><a href=\"#8-1-2-配置示例（主节点）\" class=\"headerlink\" title=\"8.1.2. 配置示例（主节点）\"></a>8.1.2. 配置示例（主节点）</h4><p>安装 Keepalived：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y keepalived</span><br></pre></td></tr></table></figure>\n\n<p>编辑 <code>/etc/keepalived/keepalived.conf</code>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state MASTER</span><br><span class=\"line\">    interface eth0</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 100</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 123456</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.1.100</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"8-1-3-配置示例（备节点）\"><a href=\"#8-1-3-配置示例（备节点）\" class=\"headerlink\" title=\"8.1.3. 配置示例（备节点）\"></a>8.1.3. 配置示例（备节点）</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state BACKUP</span><br><span class=\"line\">    interface eth0</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 90</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 123456</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.1.100</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>priority</code> 值越大优先级越高，主节点设置为 100，备节点设置为 90</li>\n<li><code>virtual_ipaddress</code> 为对外提供的虚拟 IP</li>\n</ul>\n<p>启动并开机自启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">enable</span> keepalived</span><br><span class=\"line\">systemctl start keepalived</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-2-Nginx-在-Kubernetes-中部署\"><a href=\"#8-2-Nginx-在-Kubernetes-中部署\" class=\"headerlink\" title=\"8.2. Nginx 在 Kubernetes 中部署\"></a>8.2. Nginx 在 Kubernetes 中部署</h3><h4 id=\"8-2-1-Deployment-配置\"><a href=\"#8-2-1-Deployment-配置\" class=\"headerlink\" title=\"8.2.1. Deployment 配置\"></a>8.2.1. Deployment 配置</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx-deployment.yaml</span><br><span class=\"line\">apiVersion: apps/v1</span><br><span class=\"line\">kind: Deployment</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: nginx-deployment</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  replicas: 3</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    matchLabels:</span><br><span class=\"line\">      app: nginx</span><br><span class=\"line\">  template:</span><br><span class=\"line\">    metadata:</span><br><span class=\"line\">      labels:</span><br><span class=\"line\">        app: nginx</span><br><span class=\"line\">    spec:</span><br><span class=\"line\">      containers:</span><br><span class=\"line\">      - name: nginx</span><br><span class=\"line\">        image: nginx:latest</span><br><span class=\"line\">        ports:</span><br><span class=\"line\">        - containerPort: 80</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"8-2-2-Service-暴露\"><a href=\"#8-2-2-Service-暴露\" class=\"headerlink\" title=\"8.2.2. Service 暴露\"></a>8.2.2. Service 暴露</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx-service.yaml</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: Service</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: nginx-service</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  type: NodePort</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    app: nginx</span><br><span class=\"line\">  ports:</span><br><span class=\"line\">  - port: 80</span><br><span class=\"line\">    targetPort: 80</span><br><span class=\"line\">    nodePort: 30080</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>replicas: 3</code> 表示运行 3 个副本，实现负载均衡</li>\n<li><code>Service</code> 将 Nginx 对外暴露在 <code>30080</code> 端口</li>\n</ul>\n<hr>\n<h1 id=\"四-常见问题排查\"><a href=\"#四-常见问题排查\" class=\"headerlink\" title=\"四. 常见问题排查\"></a>四. 常见问题排查</h1><p>在使用 Nginx 的过程中，经常会遇到各种错误或异常。以下总结了常见问题及排查方法。</p>\n<h2 id=\"1-配置语法错误\"><a href=\"#1-配置语法错误\" class=\"headerlink\" title=\"1. 配置语法错误\"></a>1. 配置语法错误</h2><p>修改配置后执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -t</span><br></pre></td></tr></table></figure>\n\n<p>输出示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx: configuration file /etc/nginx/nginx.conf test is successful</span><br></pre></td></tr></table></figure>\n\n<p>如果有错误，会显示出错的文件和行号。修复后再执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl reload nginx</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"2-80-或-443-端口被占用\"><a href=\"#2-80-或-443-端口被占用\" class=\"headerlink\" title=\"2. 80 或 443 端口被占用\"></a>2. 80 或 443 端口被占用</h2><p>现象：Nginx 启动时报错 <code>bind() to 0.0.0.0:80 failed (98: Address already in use)</code>。</p>\n<p>排查：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -tulnp | grep 80</span><br></pre></td></tr></table></figure>\n\n<p>解决：</p>\n<ul>\n<li>停止占用端口的服务</li>\n<li>或修改 Nginx 配置文件 <code>listen</code> 为其他端口</li>\n</ul>\n<hr>\n<h2 id=\"3-502-Bad-Gateway\"><a href=\"#3-502-Bad-Gateway\" class=\"headerlink\" title=\"3. 502 Bad Gateway\"></a>3. 502 Bad Gateway</h2><p>常见原因：</p>\n<ul>\n<li>后端服务未启动或异常退出</li>\n<li>Nginx 配置了错误的后端地址</li>\n<li>PHP-FPM 未运行或监听错误</li>\n</ul>\n<p>排查：</p>\n<ul>\n<li>查看 Nginx 错误日志 <code>/var/log/nginx/error.log</code></li>\n<li>确认后端服务是否正常运行</li>\n<li>检查 <code>proxy_pass</code> 或 <code>fastcgi_pass</code> 配置</li>\n</ul>\n<hr>\n<h2 id=\"4-504-Gateway-Timeout\"><a href=\"#4-504-Gateway-Timeout\" class=\"headerlink\" title=\"4. 504 Gateway Timeout\"></a>4. 504 Gateway Timeout</h2><p>常见原因：</p>\n<ul>\n<li>后端服务响应过慢</li>\n<li>Nginx 超时设置过低</li>\n</ul>\n<p>解决方法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy_connect_timeout 60s;</span><br><span class=\"line\">proxy_send_timeout 60s;</span><br><span class=\"line\">proxy_read_timeout 60s;</span><br></pre></td></tr></table></figure>\n\n<p>可在 <code>server</code> 或 <code>location</code> 中增加以上配置。</p>\n<hr>\n<h2 id=\"5-SSL-证书错误\"><a href=\"#5-SSL-证书错误\" class=\"headerlink\" title=\"5. SSL 证书错误\"></a>5. SSL 证书错误</h2><p>现象：浏览器提示 <code>SSL certificate problem</code> 或 <code>NET::ERR_CERT_DATE_INVALID</code>。</p>\n<p>排查：</p>\n<ul>\n<li>检查证书和私钥路径是否正确</li>\n<li>检查证书是否过期</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl x509 -<span class=\"keyword\">in</span> /etc/nginx/ssl/example.crt -noout -dates</span><br></pre></td></tr></table></figure>\n\n<p>解决方法：</p>\n<ul>\n<li>重新申请证书（如使用 Let’s Encrypt 续签）</li>\n<li>确认 <code>ssl_certificate</code> 与 <code>ssl_certificate_key</code> 配对正确</li>\n</ul>\n<hr>\n<h2 id=\"6-高并发下出现-too-many-open-files\"><a href=\"#6-高并发下出现-too-many-open-files\" class=\"headerlink\" title=\"6. 高并发下出现 too many open files\"></a>6. 高并发下出现 <code>too many open files</code></h2><p>现象：Nginx 报错 <code>EMFILE: Too many open files</code>。</p>\n<p>解决方法：</p>\n<ol>\n<li><p>修改系统限制 <code>/etc/security/limits.conf</code>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* soft nofile 65535</span><br><span class=\"line\">* hard nofile 65535</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 Nginx 配置文件中加入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">worker_rlimit_nofile 65535;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启 Nginx</p>\n</li>\n</ol>\n<hr>\n<h2 id=\"7-日志过大\"><a href=\"#7-日志过大\" class=\"headerlink\" title=\"7. 日志过大\"></a>7. 日志过大</h2><p>现象：<code>/var/log/nginx/access.log</code> 或 <code>error.log</code> 文件体积过大，占满磁盘。</p>\n<p>解决方法：</p>\n<ul>\n<li>配置 <code>logrotate</code> 定期切割日志</li>\n<li>对静态资源路径关闭日志</li>\n</ul>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">location</span> <span class=\"regexp\">~* \\.(jpg|jpeg|png|gif|ico|css|js)$</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">access_log</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">    <span class=\"attribute\">log_not_found</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"8-防火墙或-SELinux-阻止访问\"><a href=\"#8-防火墙或-SELinux-阻止访问\" class=\"headerlink\" title=\"8. 防火墙或 SELinux 阻止访问\"></a>8. 防火墙或 SELinux 阻止访问</h2><p>CentOS7 默认启用防火墙和 SELinux，可能导致端口无法访问。</p>\n<h3 id=\"8-1-检查防火墙\"><a href=\"#8-1-检查防火墙\" class=\"headerlink\" title=\"8.1. 检查防火墙\"></a>8.1. 检查防火墙</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --list-all</span><br><span class=\"line\">firewall-cmd --add-service=http --permanent</span><br><span class=\"line\">firewall-cmd --add-service=https --permanent</span><br><span class=\"line\">firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-2-检查-SELinux\"><a href=\"#8-2-检查-SELinux\" class=\"headerlink\" title=\"8.2. 检查 SELinux\"></a>8.2. 检查 SELinux</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sestatus</span><br></pre></td></tr></table></figure>\n\n<p>如果 SELinux 启用，可以临时关闭：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setenforce 0</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<blockquote>\n<p>本文整理了一份完整的 Nginx 学习与实践指南，涵盖从 <strong>在CentOS7 上安装方法</strong>、<strong>基础配置</strong>、<strong>反向代理</strong>、<strong>负载均衡</strong>、<strong>HTTPS 部署</strong>、<strong>性能优化</strong>、<strong>安全加固</strong>、<strong>日志监控</strong> 到 <strong>高可用与容器化</strong> 的全流程内容。适合需要快速上手 Nginx 的初学者，也适合在生产环境中使用 Nginx 的运维和开发人员参考。</p>\n</blockquote>\n<h1 id=\"一-简介\"><a href=\"#一-简介\" class=\"headerlink\" title=\"一. 简介\"></a>一. 简介</h1><p>Nginx（“engine x”）是一款 HTTP Web 服务器、反向代理、内容缓存、负载均衡器、TCP&#x2F;UDP 代理服务器和邮件代理服务器。最初由 Igor Sysoev 编写，并根据 2-clause BSD 许可证发布。F5 公司提供企业发行版、商业支持和培训。</p>\n<h1 id=\"二-安装Nginx\"><a href=\"#二-安装Nginx\" class=\"headerlink\" title=\"二. 安装Nginx\"></a>二. 安装Nginx</h1><h2 id=\"1-CentOS7安装Nginx\"><a href=\"#1-CentOS7安装Nginx\" class=\"headerlink\" title=\"1. CentOS7安装Nginx\"></a>1. CentOS7安装Nginx</h2><p>Nginx 安装方式对比（CentOS 7）</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">安装方式</th>\n<th>特点</th>\n<th align=\"center\">优点</th>\n<th align=\"center\">缺点</th>\n<th align=\"center\">适用场景</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><strong>官方源安装</strong></td>\n<td>使用 Nginx 官方 YUM 仓库</td>\n<td align=\"center\">版本更新快- 安全修复及时- 配置路径标准化（&#x2F;etc&#x2F;nginx）</td>\n<td align=\"center\">需要额外添加 repo</td>\n<td align=\"center\">线上生产环境，需要 <strong>长期维护、稳定更新</strong></td>\n</tr>\n<tr>\n<td align=\"center\"><strong>EPEL 源安装</strong></td>\n<td>使用 epel-release 提供的包</td>\n<td align=\"center\">安装简单- 系统兼容性好</td>\n<td align=\"center\">版本较旧- bug 修复较慢</td>\n<td align=\"center\">快速部署，<strong>对版本要求不高</strong>的场景</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>源码编译安装</strong></td>\n<td>手动下载源码并编译</td>\n<td align=\"center\">可自定义编译参数和模块- 性能可优化</td>\n<td align=\"center\">安装复杂- 升级需手动重新编译</td>\n<td align=\"center\">高级用户，需要 <strong>特殊模块（如第三方模块、优化参数）</strong></td>\n</tr>\n<tr>\n<td align=\"center\"><strong>Docker 安装</strong></td>\n<td>通过容器运行 Nginx</td>\n<td align=\"center\">隔离性好- 升级&#x2F;回滚方便- 配合 K8s 容器编排</td>\n<td align=\"center\">依赖 Docker 环境- 数据卷&#x2F;配置管理需额外考虑</td>\n<td align=\"center\">微服务、<strong>容器化环境</strong>，需要快速部署和迁移</td>\n</tr>\n</tbody></table>\n<h3 id=\"1-1-EPEL-Nginx-官方仓库安装\"><a href=\"#1-1-EPEL-Nginx-官方仓库安装\" class=\"headerlink\" title=\"1.1. EPEL + Nginx 官方仓库安装\"></a>1.1. EPEL + Nginx 官方仓库安装</h3><p>CentOS 7 默认仓库里 Nginx 版本较老，建议用官方源。</p>\n<h4 id=\"1-1-1-安装依赖\"><a href=\"#1-1-1-安装依赖\" class=\"headerlink\" title=\"1.1.1. 安装依赖\"></a>1.1.1. 安装依赖</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y epel-release</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y yum-utils</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-1-2-添加Nginx-官方仓库\"><a href=\"#1-1-2-添加Nginx-官方仓库\" class=\"headerlink\" title=\"1.1.2. 添加Nginx 官方仓库\"></a>1.1.2. 添加Nginx 官方仓库</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">tee</span> /etc/yum.repos.d/nginx.repo &lt;&lt;<span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">[nginx-stable]</span></span><br><span class=\"line\"><span class=\"string\">name=nginx stable repo</span></span><br><span class=\"line\"><span class=\"string\">baseurl=http://nginx.org/packages/centos/7/\\$basearch/</span></span><br><span class=\"line\"><span class=\"string\">gpgcheck=1</span></span><br><span class=\"line\"><span class=\"string\">enabled=1</span></span><br><span class=\"line\"><span class=\"string\">gpgkey=https://nginx.org/keys/nginx_signing.key</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[nginx-mainline]</span></span><br><span class=\"line\"><span class=\"string\">name=nginx mainline repo</span></span><br><span class=\"line\"><span class=\"string\">baseurl=http://nginx.org/packages/mainline/centos/7/\\$basearch/</span></span><br><span class=\"line\"><span class=\"string\">gpgcheck=1</span></span><br><span class=\"line\"><span class=\"string\">enabled=0</span></span><br><span class=\"line\"><span class=\"string\">gpgkey=https://nginx.org/keys/nginx_signing.key</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-1-3-安装-Nginx\"><a href=\"#1-1-3-安装-Nginx\" class=\"headerlink\" title=\"1.1.3. 安装 Nginx\"></a>1.1.3. 安装 Nginx</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y nginx</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-1-4-启动并开机自启\"><a href=\"#1-1-4-启动并开机自启\" class=\"headerlink\" title=\"1.1.4. 启动并开机自启\"></a>1.1.4. 启动并开机自启</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl <span class=\"built_in\">enable</span> nginx</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl start nginx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-EPEL-源安装\"><a href=\"#2-2-EPEL-源安装\" class=\"headerlink\" title=\"2.2. EPEL 源安装\"></a>2.2. EPEL 源安装</h3><h4 id=\"2-2-1-安装-EPEL\"><a href=\"#2-2-1-安装-EPEL\" class=\"headerlink\" title=\"2.2.1. 安装 EPEL\"></a>2.2.1. 安装 EPEL</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y epel-release</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-2-安装-nginx\"><a href=\"#2-2-2-安装-nginx\" class=\"headerlink\" title=\"2.2.2. 安装 nginx\"></a>2.2.2. 安装 nginx</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y nginx</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-3-启动服务\"><a href=\"#2-2-3-启动服务\" class=\"headerlink\" title=\"2.2.3. 启动服务\"></a>2.2.3. 启动服务</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl start nginx</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl <span class=\"built_in\">enable</span> nginx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-源码编译安装\"><a href=\"#2-3-源码编译安装\" class=\"headerlink\" title=\"2.3. 源码编译安装\"></a>2.3. 源码编译安装</h3><p>适合需要自定义模块的场景。</p>\n<h4 id=\"2-3-1-安装编译工具和依赖\"><a href=\"#2-3-1-安装编译工具和依赖\" class=\"headerlink\" title=\"2.3.1. 安装编译工具和依赖\"></a>2.3.1. 安装编译工具和依赖</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum groupinstall -y <span class=\"string\">&quot;Development Tools&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y gcc pcre-devel zlib-devel make openssl-devel wget</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-3-2-下载源码（以稳定版-1-24-0-为例）\"><a href=\"#2-3-2-下载源码（以稳定版-1-24-0-为例）\" class=\"headerlink\" title=\"2.3.2. 下载源码（以稳定版 1.24.0 为例）\"></a>2.3.2. 下载源码（以稳定版 1.24.0 为例）</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://nginx.org/download/nginx-1.24.0.tar.gz</span><br><span class=\"line\">tar -zxvf nginx-1.24.0.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> nginx-1.24.0</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-3-3-配置编译参数（可加模块）\"><a href=\"#2-3-3-配置编译参数（可加模块）\" class=\"headerlink\" title=\"2.3.3. 配置编译参数（可加模块）\"></a>2.3.3. 配置编译参数（可加模块）</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_gzip_static_module</span><br><span class=\"line\">make</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> make install</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-3-4-启动\"><a href=\"#2-3-4-启动\" class=\"headerlink\" title=\"2.3.4. 启动\"></a>2.3.4. 启动</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-3-5-添加-systemd-管理\"><a href=\"#2-3-5-添加-systemd-管理\" class=\"headerlink\" title=\"2.3.5. 添加 systemd 管理\"></a>2.3.5. 添加 systemd 管理</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">tee</span> /etc/systemd/system/nginx.service &lt;&lt;<span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">[Unit]</span></span><br><span class=\"line\"><span class=\"string\">Description=The NGINX HTTP and reverse proxy server</span></span><br><span class=\"line\"><span class=\"string\">After=network.target</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[Service]</span></span><br><span class=\"line\"><span class=\"string\">ExecStart=/usr/local/nginx/sbin/nginx</span></span><br><span class=\"line\"><span class=\"string\">ExecReload=/usr/local/nginx/sbin/nginx -s reload</span></span><br><span class=\"line\"><span class=\"string\">ExecStop=/usr/local/nginx/sbin/nginx -s quit</span></span><br><span class=\"line\"><span class=\"string\">PIDFile=/usr/local/nginx/logs/nginx.pid</span></span><br><span class=\"line\"><span class=\"string\">Restart=always</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[Install]</span></span><br><span class=\"line\"><span class=\"string\">WantedBy=multi-user.target</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl daemon-reload</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl <span class=\"built_in\">enable</span> nginx</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl start nginx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-4-通过-Docker-安装-Nginx\"><a href=\"#2-4-通过-Docker-安装-Nginx\" class=\"headerlink\" title=\"2.4. 通过 Docker 安装 Nginx\"></a>2.4. 通过 Docker 安装 Nginx</h3><p>如果你有 Docker 环境，可以直接用容器跑。</p>\n<h4 id=\"2-4-1-安装-Docker（若未安装）\"><a href=\"#2-4-1-安装-Docker（若未安装）\" class=\"headerlink\" title=\"2.4.1. 安装 Docker（若未安装）\"></a>2.4.1. 安装 Docker（若未安装）</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y docker-ce docker-ce-cli containerd.io</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl <span class=\"built_in\">enable</span> docker</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl start docker</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-4-2-拉取并运行-Nginx\"><a href=\"#2-4-2-拉取并运行-Nginx\" class=\"headerlink\" title=\"2.4.2. 拉取并运行 Nginx\"></a>2.4.2. 拉取并运行 Nginx</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> docker run --name nginx -p 80:80 -d nginx</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"三-Nginx教程\"><a href=\"#三-Nginx教程\" class=\"headerlink\" title=\"三. Nginx教程\"></a>三. Nginx教程</h1><h2 id=\"1-Nginx-基础配置\"><a href=\"#1-Nginx-基础配置\" class=\"headerlink\" title=\"1. Nginx 基础配置\"></a>1. Nginx 基础配置</h2><p>Nginx 的配置文件一般位于：</p>\n<ul>\n<li>主配置文件：<code>/etc/nginx/nginx.conf</code></li>\n<li>子配置文件：<code>/etc/nginx/conf.d/*.conf</code></li>\n</ul>\n<h3 id=\"1-1-Nginx-配置文件结构\"><a href=\"#1-1-Nginx-配置文件结构\" class=\"headerlink\" title=\"1.1. Nginx 配置文件结构\"></a>1.1. Nginx 配置文件结构</h3><p>一个完整的 Nginx 配置由 <strong>三大块</strong> 组成：</p>\n<ol>\n<li><strong>全局块</strong>（定义进程数、运行用户等）</li>\n<li><strong>events 块</strong>（事件处理，worker 连接数等）</li>\n<li><strong>http 块</strong>（最核心部分，定义虚拟主机、反向代理、负载均衡等）</li>\n</ol>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 全局块</span></span><br><span class=\"line\"><span class=\"attribute\">user</span>  nginx;</span><br><span class=\"line\"><span class=\"attribute\">worker_processes</span> auto;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># events 块</span></span><br><span class=\"line\"><span class=\"section\">events</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">worker_connections</span> <span class=\"number\">1024</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># http 块</span></span><br><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">include</span>       /etc/nginx/mime.types;</span><br><span class=\"line\">    <span class=\"attribute\">default_type</span>  application/octet-stream;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 日志</span></span><br><span class=\"line\">    <span class=\"attribute\">access_log</span> /var/log/nginx/access.log;</span><br><span class=\"line\">    <span class=\"attribute\">error_log</span> /var/log/nginx/<span class=\"literal\">error</span>.log;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># server 块（虚拟主机）</span></span><br><span class=\"line\">    <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">        <span class=\"attribute\">server_name</span> example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">            <span class=\"attribute\">root</span>   /usr/share/nginx/html;</span><br><span class=\"line\">            <span class=\"attribute\">index</span>  index.html index.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-server-块（虚拟主机）\"><a href=\"#1-2-server-块（虚拟主机）\" class=\"headerlink\" title=\"1.2. server 块（虚拟主机）\"></a>1.2. server 块（虚拟主机）</h3><p>Nginx 可以通过 <strong>虚拟主机</strong> 配置多个站点：</p>\n<h4 id=\"1-2-1-基于域名的虚拟主机\"><a href=\"#1-2-1-基于域名的虚拟主机\" class=\"headerlink\" title=\"1.2.1. 基于域名的虚拟主机\"></a>1.2.1. 基于域名的虚拟主机</h4><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> www.site1.com;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /var/www/site1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> www.site2.com;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /var/www/site2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当访问 <code>www.site1.com</code> 时，会返回 <code>/var/www/site1</code> 目录内容；访问 <code>www.site2.com</code> 时，会返回 <code>/var/www/site2</code>。</p>\n<h4 id=\"1-2-2-基于端口的虚拟主机\"><a href=\"#1-2-2-基于端口的虚拟主机\" class=\"headerlink\" title=\"1.2.2. 基于端口的虚拟主机\"></a>1.2.2. 基于端口的虚拟主机</h4><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">8080</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> localhost;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /var/www/site8080;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>访问 <code>http://IP:8080/</code> 时，返回 <code>/var/www/site8080</code> 内容。</p>\n<h3 id=\"1-3-location-块（路径匹配）\"><a href=\"#1-3-location-块（路径匹配）\" class=\"headerlink\" title=\"1.3. location 块（路径匹配）\"></a>1.3. location 块（路径匹配）</h3><p><code>location</code> 用来匹配 URL 路径，并指定处理方式。</p>\n<p>常见写法：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 精确匹配</span></span><br><span class=\"line\"><span class=\"section\">location</span> = /abc &#123;</span><br><span class=\"line\">    <span class=\"attribute\">return</span> <span class=\"number\">200</span> <span class=\"string\">&quot;this is /abc&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 前缀匹配</span></span><br><span class=\"line\"><span class=\"section\">location</span> /images/ &#123;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /data;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 正则匹配</span></span><br><span class=\"line\"><span class=\"section\">location</span> <span class=\"regexp\">~ \\.php$</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /var/www/html;</span><br><span class=\"line\">    <span class=\"attribute\">fastcgi_pass</span> <span class=\"number\">127.0.0.1:9000</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>匹配优先级：</p>\n<p><code>=</code> 精确匹配 &gt; 前缀匹配（最长优先） &gt; 正则匹配</p>\n<h3 id=\"1-4-配置静态网站\"><a href=\"#1-4-配置静态网站\" class=\"headerlink\" title=\"1.4. 配置静态网站\"></a>1.4. 配置静态网站</h3><p>最常见的用法：直接托管静态文件（HTML、JS、CSS、图片）。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> www.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">root</span> /var/www/html;</span><br><span class=\"line\">    <span class=\"attribute\">index</span> index.html index.htm;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>将文件放到 <code>/var/www/html/</code> 目录下即可访问。<br>例如：<code>/var/www/html/index.html</code> → <code>http://www.example.com/index.html</code></p>\n<h2 id=\"2-反向代理与动静分离\"><a href=\"#2-反向代理与动静分离\" class=\"headerlink\" title=\"2. 反向代理与动静分离\"></a>2. 反向代理与动静分离</h2><h3 id=\"2-1-基本反向代理\"><a href=\"#2-1-基本反向代理\" class=\"headerlink\" title=\"2.1. 基本反向代理\"></a>2.1. 基本反向代理</h3><p>示例：将请求转发给运行在 127.0.0.1:5000 的应用服务。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> app.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:5000;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>proxy_pass</code> 指定后端服务地址</li>\n<li><code>proxy_set_header</code> 用来传递客户端的真实 IP 和 Host，避免后端获取不到正确信息</li>\n</ul>\n<h3 id=\"2-2-代理多个路径\"><a href=\"#2-2-代理多个路径\" class=\"headerlink\" title=\"2.2. 代理多个路径\"></a>2.2. 代理多个路径</h3><p>如果前端和后端服务分开，可以通过不同路径代理不同后端。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> www.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> /api/ &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:8000;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span> /var/www/html;</span><br><span class=\"line\">        <span class=\"attribute\">index</span> index.html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>/api/</code> 请求会转发到后端 8000 端口</li>\n<li><code>/</code> 静态资源直接由 Nginx 提供</li>\n</ul>\n<h3 id=\"2-3-动静分离\"><a href=\"#2-3-动静分离\" class=\"headerlink\" title=\"2.3. 动静分离\"></a>2.3. 动静分离</h3><p>动静分离的常见写法：静态资源由 Nginx 提供，动态请求交给后端。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> www.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 静态资源</span></span><br><span class=\"line\">    <span class=\"section\">location</span> /static/ &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span> /var/www/html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 动态请求</span></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:5000;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-4-针对不同后端的配置示例\"><a href=\"#2-4-针对不同后端的配置示例\" class=\"headerlink\" title=\"2.4. 针对不同后端的配置示例\"></a>2.4. 针对不同后端的配置示例</h3><h4 id=\"2-4-1-Node-js\"><a href=\"#2-4-1-Node-js\" class=\"headerlink\" title=\"2.4.1. Node.js\"></a>2.4.1. Node.js</h4><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> node.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:3000;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_http_version</span> <span class=\"number\">1</span>.<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Upgrade <span class=\"variable\">$http_upgrade</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Connection <span class=\"string\">&#x27;upgrade&#x27;</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-4-2-Flask-Gunicorn\"><a href=\"#2-4-2-Flask-Gunicorn\" class=\"headerlink\" title=\"2.4.2. Flask (Gunicorn)\"></a>2.4.2. Flask (Gunicorn)</h4><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> flask.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:8000;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-4-3-PHP-PHP-FPM\"><a href=\"#2-4-3-PHP-PHP-FPM\" class=\"headerlink\" title=\"2.4.3. PHP (PHP-FPM)\"></a>2.4.3. PHP (PHP-FPM)</h4><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> php.example.com;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /var/www/phpapp;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">index</span> index.php index.html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> <span class=\"regexp\">~ \\.php$</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_pass</span> <span class=\"number\">127.0.0.1:9000</span>;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_index</span> index.php;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_param</span> SCRIPT_FILENAME <span class=\"variable\">$document_root</span><span class=\"variable\">$fastcgi_script_name</span>;</span><br><span class=\"line\">        <span class=\"attribute\">include</span> fastcgi_params;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-负载均衡\"><a href=\"#3-负载均衡\" class=\"headerlink\" title=\"3. 负载均衡\"></a>3. 负载均衡</h2><p>当单个后端服务无法满足高并发需求时，可以通过 Nginx 的 <strong>upstream 模块</strong> 配置多台后端，实现负载均衡。</p>\n<h3 id=\"3-1-基本配置\"><a href=\"#3-1-基本配置\" class=\"headerlink\" title=\"3.1. 基本配置\"></a>3.1. 基本配置</h3><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">upstream</span> backend &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.10</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.11</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> lb.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://backend;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li>定义 <code>upstream backend</code>，包含多个后端节点</li>\n<li>在 <code>proxy_pass</code> 中直接引用 <code>http://backend</code></li>\n</ul>\n<p>默认策略为 <strong>轮询（Round Robin）</strong>。</p>\n<h3 id=\"3-2-负载均衡策略\"><a href=\"#3-2-负载均衡策略\" class=\"headerlink\" title=\"3.2. 负载均衡策略\"></a>3.2. 负载均衡策略</h3><h4 id=\"3-2-1-轮询（默认）\"><a href=\"#3-2-1-轮询（默认）\" class=\"headerlink\" title=\"3.2.1. 轮询（默认）\"></a>3.2.1. 轮询（默认）</h4><p>请求按顺序分发到后端服务器。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">upstream</span> backend &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.10</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.11</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-2-最少连接数（least-conn）\"><a href=\"#3-2-2-最少连接数（least-conn）\" class=\"headerlink\" title=\"3.2.2. 最少连接数（least_conn）\"></a>3.2.2. 最少连接数（least_conn）</h4><p>将请求分配给当前连接数最少的后端。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">upstream</span> backend &#123;</span><br><span class=\"line\">    least_conn;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.10</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.11</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-3-IP-哈希（ip-hash）\"><a href=\"#3-2-3-IP-哈希（ip-hash）\" class=\"headerlink\" title=\"3.2.3. IP 哈希（ip_hash）\"></a>3.2.3. IP 哈希（ip_hash）</h4><p>同一个客户端 IP 会固定访问同一台后端，常用于有会话需求的场景。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">upstream</span> backend &#123;</span><br><span class=\"line\">    ip_hash;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.10</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.11</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-4-权重（weight）\"><a href=\"#3-2-4-权重（weight）\" class=\"headerlink\" title=\"3.2.4. 权重（weight）\"></a>3.2.4. 权重（weight）</h4><p>为不同服务器设置权重，性能好的服务器可以承担更多请求。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">upstream</span> backend &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.10</span> weight=<span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.11</span> weight=<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-健康检查（被动）\"><a href=\"#3-3-健康检查（被动）\" class=\"headerlink\" title=\"3.3. 健康检查（被动）\"></a>3.3. 健康检查（被动）</h3><p>Nginx 默认支持被动健康检查：当后端返回错误时，会自动将其标记为不可用，直到恢复正常。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">upstream</span> backend &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.10</span> max_fails=<span class=\"number\">3</span> fail_timeout=<span class=\"number\">30s</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.1.11</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-HTTPS-配置\"><a href=\"#4-HTTPS-配置\" class=\"headerlink\" title=\"4. HTTPS 配置\"></a>4. HTTPS 配置</h2><p>随着安全要求的提升，HTTPS 已经成为网站的标配。Nginx 提供了完善的 SSL&#x2F;TLS 支持，可以轻松为网站启用 HTTPS。</p>\n<h3 id=\"4-1-基本-HTTPS-配置\"><a href=\"#4-1-基本-HTTPS-配置\" class=\"headerlink\" title=\"4.1. 基本 HTTPS 配置\"></a>4.1. 基本 HTTPS 配置</h3><p>假设证书和私钥文件已经准备好（例如 <code>example.crt</code> 和 <code>example.key</code>）。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">443</span> ssl;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> www.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate</span>     /etc/nginx/ssl/example.crt;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate_key</span> /etc/nginx/ssl/example.key;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span> /usr/share/nginx/html;</span><br><span class=\"line\">        <span class=\"attribute\">index</span> index.html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>listen 443 ssl</code> 表示启用 443 端口并开启 SSL</li>\n<li><code>ssl_certificate</code> 指定公钥证书</li>\n<li><code>ssl_certificate_key</code> 指定私钥</li>\n</ul>\n<h3 id=\"4-2-HTTP-自动跳转-HTTPS\"><a href=\"#4-2-HTTP-自动跳转-HTTPS\" class=\"headerlink\" title=\"4.2. HTTP 自动跳转 HTTPS\"></a>4.2. HTTP 自动跳转 HTTPS</h3><p>通常需要将所有 HTTP 请求自动跳转到 HTTPS。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> www.example.com;</span><br><span class=\"line\">    <span class=\"attribute\">return</span> <span class=\"number\">301</span> https://<span class=\"variable\">$host</span><span class=\"variable\">$request_uri</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-使用-Let’s-Encrypt-免费证书\"><a href=\"#4-3-使用-Let’s-Encrypt-免费证书\" class=\"headerlink\" title=\"4.3. 使用 Let’s Encrypt 免费证书\"></a>4.3. 使用 Let’s Encrypt 免费证书</h3><p>安装 Certbot 获取免费 SSL 证书：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y epel-release</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y certbot python2-certbot-nginx</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> certbot --nginx -d www.example.com</span><br></pre></td></tr></table></figure>\n\n<p>执行成功后，Certbot 会自动修改 Nginx 配置并续期证书。</p>\n<h3 id=\"4-4-TLS-安全优化\"><a href=\"#4-4-TLS-安全优化\" class=\"headerlink\" title=\"4.4. TLS 安全优化\"></a>4.4. TLS 安全优化</h3><p>为了避免使用不安全的协议和加密套件，可以在配置中进行限制。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">ssl_protocols</span> TLSv1.<span class=\"number\">2</span> TLSv1.<span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"attribute\">ssl_ciphers</span> HIGH:!aNULL:!MD5;</span><br><span class=\"line\"><span class=\"attribute\">ssl_prefer_server_ciphers</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\"><span class=\"attribute\">ssl_session_cache</span> shared:SSL:<span class=\"number\">10m</span>;</span><br><span class=\"line\"><span class=\"attribute\">ssl_session_timeout</span> <span class=\"number\">10m</span>;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li>只启用 <code>TLSv1.2</code> 和 <code>TLSv1.3</code></li>\n<li>禁用弱加密算法</li>\n<li>开启 session 缓存，提高性能</li>\n</ul>\n<h3 id=\"4-5-HTTP-2-支持\"><a href=\"#4-5-HTTP-2-支持\" class=\"headerlink\" title=\"4.5. HTTP&#x2F;2 支持\"></a>4.5. HTTP&#x2F;2 支持</h3><p>开启 HTTP&#x2F;2 可以提升 HTTPS 网站性能（需要 OpenSSL 支持）。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">443</span> ssl http2;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> www.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate</span>     /etc/nginx/ssl/example.crt;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate_key</span> /etc/nginx/ssl/example.key;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span> /usr/share/nginx/html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-性能优化\"><a href=\"#5-性能优化\" class=\"headerlink\" title=\"5. 性能优化\"></a>5. 性能优化</h2><p>Nginx 默认配置在中小规模场景下可以正常工作，但在高并发或大流量场景下，需要进行性能优化以提升吞吐量和响应速度。</p>\n<h3 id=\"5-1-worker-配置\"><a href=\"#5-1-worker-配置\" class=\"headerlink\" title=\"5.1. worker 配置\"></a>5.1. worker 配置</h3><p>Nginx 的核心是事件驱动模型，<code>worker_processes</code> 和 <code>worker_connections</code> 是性能优化的关键。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">worker_processes</span> auto;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">events</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">worker_connections</span> <span class=\"number\">1024</span>;</span><br><span class=\"line\">    <span class=\"attribute\">use</span> <span class=\"literal\">epoll</span>;</span><br><span class=\"line\">    <span class=\"attribute\">multi_accept</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>worker_processes auto</code>：自动根据 CPU 核心数分配进程数</li>\n<li><code>worker_connections</code>：每个 worker 最大连接数，通常设置为 1024 或更高</li>\n<li><code>use epoll</code>：Linux 下推荐使用 epoll 模型</li>\n<li><code>multi_accept on</code>：允许 worker 一次接受多个新连接</li>\n</ul>\n<h3 id=\"5-2-TCP-优化\"><a href=\"#5-2-TCP-优化\" class=\"headerlink\" title=\"5.2. TCP 优化\"></a>5.2. TCP 优化</h3><p>Nginx 提供了几个 TCP 优化选项，提高大文件传输和连接效率。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">sendfile</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">tcp_nopush</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">tcp_nodelay</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>sendfile on</code>：启用零拷贝，提高文件传输效率</li>\n<li><code>tcp_nopush on</code>：尽量一次性发送 HTTP 响应头，减少包数量</li>\n<li><code>tcp_nodelay on</code>：立即发送小数据包，适合交互式应用</li>\n</ul>\n<h3 id=\"5-3-Gzip-压缩\"><a href=\"#5-3-Gzip-压缩\" class=\"headerlink\" title=\"5.3. Gzip 压缩\"></a>5.3. Gzip 压缩</h3><p>启用 gzip 压缩可减少传输数据量，提升访问速度。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">gzip</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">gzip_min_length</span> <span class=\"number\">1k</span>;</span><br><span class=\"line\">    <span class=\"attribute\">gzip_comp_level</span> <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"attribute\">gzip_types</span> text/plain text/css application/json application/javascript application/xml application/xml+rss image/svg+xml;</span><br><span class=\"line\">    <span class=\"attribute\">gzip_vary</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>gzip_min_length</code>：最小压缩大小（1KB以上才压缩）</li>\n<li><code>gzip_comp_level</code>：压缩等级（1-9，推荐 4-6）</li>\n<li><code>gzip_types</code>：指定要压缩的 MIME 类型</li>\n</ul>\n<h3 id=\"5-4-静态资源缓存\"><a href=\"#5-4-静态资源缓存\" class=\"headerlink\" title=\"5.4. 静态资源缓存\"></a>5.4. 静态资源缓存</h3><p>通过 <code>expires</code> 或 <code>cache-control</code> 指令为静态文件设置缓存策略。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">location</span> <span class=\"regexp\">~* \\.(jpg|jpeg|png|gif|ico|css|js)$</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">expires</span> <span class=\"number\">30d</span>;</span><br><span class=\"line\">    <span class=\"attribute\">add_header</span> Cache-Control <span class=\"string\">&quot;public&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>expires 30d</code>：静态资源缓存 30 天</li>\n<li><code>Cache-Control public</code>：允许浏览器和代理缓存</li>\n</ul>\n<h3 id=\"5-5-反向代理缓存\"><a href=\"#5-5-反向代理缓存\" class=\"headerlink\" title=\"5.5. 反向代理缓存\"></a>5.5. 反向代理缓存</h3><p>Nginx 也可以缓存后端响应，减轻应用服务器压力。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">proxy_cache_path</span> /var/cache/nginx levels=<span class=\"number\">1</span>:<span class=\"number\">2</span> keys_zone=my_cache:<span class=\"number\">10m</span> inactive=<span class=\"number\">60m</span>;</span><br><span class=\"line\"><span class=\"attribute\">proxy_cache_key</span> <span class=\"variable\">$scheme</span><span class=\"variable\">$proxy_host</span><span class=\"variable\">$request_uri</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"section\">location</span> /api/ &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:8000;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_cache</span> my_cache;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_cache_valid</span> <span class=\"number\">200</span> <span class=\"number\">302</span> <span class=\"number\">10m</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_cache_valid</span> <span class=\"number\">404</span> <span class=\"number\">1m</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>proxy_cache_path</code>：定义缓存路径和缓存区大小</li>\n<li><code>proxy_cache</code>：指定使用的缓存区</li>\n<li><code>proxy_cache_valid</code>：缓存不同响应码的时间</li>\n</ul>\n<h3 id=\"5-6-文件描述符限制\"><a href=\"#5-6-文件描述符限制\" class=\"headerlink\" title=\"5.6. 文件描述符限制\"></a>5.6. 文件描述符限制</h3><p>需要提高系统的文件描述符数，否则高并发时可能出现 <code>too many open files</code> 错误。</p>\n<p>编辑 <code>/etc/security/limits.conf</code>：</p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">* </span>soft nofile 65535</span><br><span class=\"line\"><span class=\"bullet\">* </span>hard nofile 65535</span><br></pre></td></tr></table></figure>\n\n<p>在 Nginx 配置中增加：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">worker_rlimit_nofile</span> <span class=\"number\">65535</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-安全加固\"><a href=\"#6-安全加固\" class=\"headerlink\" title=\"6. 安全加固\"></a>6. 安全加固</h2><p>Nginx 除了作为高性能 Web 服务器外，也可以在前端起到安全防护作用。通过合理的配置，可以减少攻击面、限制非法访问、缓解 DDoS&#x2F;CC 攻击。</p>\n<h3 id=\"6-1-禁止目录遍历\"><a href=\"#6-1-禁止目录遍历\" class=\"headerlink\" title=\"6.1. 禁止目录遍历\"></a>6.1. 禁止目录遍历</h3><p>默认情况下，如果某目录没有 <code>index.html</code> 文件，可能会暴露文件列表。可以通过以下方式禁止目录遍历：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">    <span class=\"attribute\">autoindex</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-2-隐藏版本号\"><a href=\"#6-2-隐藏版本号\" class=\"headerlink\" title=\"6.2. 隐藏版本号\"></a>6.2. 隐藏版本号</h3><p>Nginx 默认会在错误页面或响应头中显示版本号，可能会暴露漏洞信息。可以关闭：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server_tokens</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-3-限制请求方法\"><a href=\"#6-3-限制请求方法\" class=\"headerlink\" title=\"6.3. 限制请求方法\"></a>6.3. 限制请求方法</h3><p>只允许特定的 HTTP 方法（如 GET、POST），拒绝其他请求方法：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">    <span class=\"attribute\">if</span> (<span class=\"variable\">$request_method</span> !<span class=\"regexp\">~ ^(GET|POST)$)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">return</span> <span class=\"number\">405</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-4-请求速率限制（防止-CC-攻击）\"><a href=\"#6-4-请求速率限制（防止-CC-攻击）\" class=\"headerlink\" title=\"6.4. 请求速率限制（防止 CC 攻击）\"></a>6.4. 请求速率限制（防止 CC 攻击）</h3><p>限制单个 IP 的请求速率，防止恶意刷请求：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">limit_req_zone</span> <span class=\"variable\">$binary_remote_addr</span> zone=req_limit:<span class=\"number\">10m</span> rate=10r/s;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">        <span class=\"section\">location</span> /api/ &#123;</span><br><span class=\"line\">            <span class=\"attribute\">limit_req</span> zone=req_limit burst=<span class=\"number\">20</span> nodelay;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:8000;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><p><code>rate=10r/s</code>：每秒允许 10 个请求</p>\n</li>\n<li><p><code>burst=20</code>：允许短时间内突发 20 个请求</p>\n</li>\n<li><p><code>nodelay</code>：超出部分立即拒绝</p>\n</li>\n</ul>\n<h3 id=\"6-5-连接数限制\"><a href=\"#6-5-连接数限制\" class=\"headerlink\" title=\"6.5. 连接数限制\"></a>6.5. 连接数限制</h3><p>限制单个 IP 的并发连接数，防止恶意占用连接：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">limit_conn_zone</span> <span class=\"variable\">$binary_remote_addr</span> zone=addr:<span class=\"number\">10m</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">        <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">            <span class=\"attribute\">limit_conn</span> addr <span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>limit_conn_zone</code> 定义一个共享内存存储 IP 状态</li>\n<li><code>limit_conn addr 10</code> 表示单个 IP 最多 10 个并发连接</li>\n</ul>\n<h3 id=\"6-6-防盗链（Referer-检查）\"><a href=\"#6-6-防盗链（Referer-检查）\" class=\"headerlink\" title=\"6.6. 防盗链（Referer 检查）\"></a>6.6. 防盗链（Referer 检查）</h3><p>避免图片、视频等资源被其他网站盗用：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">location</span> <span class=\"regexp\">~* \\.(jpg|jpeg|png|gif|mp4)$</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">valid_referers</span> <span class=\"literal\">none</span> <span class=\"literal\">blocked</span> <span class=\"regexp\">*.example.com</span>;</span><br><span class=\"line\">    <span class=\"attribute\">if</span> (<span class=\"variable\">$invalid_referer</span>) &#123;</span><br><span class=\"line\">        <span class=\"attribute\">return</span> <span class=\"number\">403</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>valid_referers</code> 定义合法来源</li>\n<li><code>$invalid_referer</code> 判断非法来源并返回 403</li>\n</ul>\n<h3 id=\"6-7-IP-访问控制\"><a href=\"#6-7-IP-访问控制\" class=\"headerlink\" title=\"6.7. IP 访问控制\"></a>6.7. IP 访问控制</h3><p>只允许特定 IP 访问管理路径，其他全部拒绝：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">location</span> /admin &#123;</span><br><span class=\"line\">    <span class=\"attribute\">allow</span> <span class=\"number\">192.168.1.0</span>/<span class=\"number\">24</span>;</span><br><span class=\"line\">    <span class=\"attribute\">deny</span> all;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-8-防止上传大文件\"><a href=\"#6-8-防止上传大文件\" class=\"headerlink\" title=\"6.8. 防止上传大文件\"></a>6.8. 防止上传大文件</h3><p>限制请求体大小，避免恶意上传超大文件导致服务资源耗尽：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">client_max_body_size</span> <span class=\"number\">10m</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-日志与监控\"><a href=\"#7-日志与监控\" class=\"headerlink\" title=\"7. 日志与监控\"></a>7. 日志与监控</h2><p>Nginx 提供了 <strong>访问日志（access log）</strong> 和 <strong>错误日志（error log）</strong>，是排查问题、分析流量和做安全审计的重要手段。配合第三方工具，可以实现实时监控与可视化分析。</p>\n<h3 id=\"7-1-访问日志\"><a href=\"#7-1-访问日志\" class=\"headerlink\" title=\"7.1. 访问日志\"></a>7.1. 访问日志</h3><p>访问日志记录了每个请求的详细信息，包括 IP、时间、请求方法、状态码等。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">log_format</span> main <span class=\"string\">&#x27;<span class=\"variable\">$remote_addr</span> - <span class=\"variable\">$remote_user</span> [<span class=\"variable\">$time_local</span>] &quot;<span class=\"variable\">$request</span>&quot; &#x27;</span></span><br><span class=\"line\">                    <span class=\"string\">&#x27;<span class=\"variable\">$status</span> <span class=\"variable\">$body_bytes_sent</span> &quot;<span class=\"variable\">$http_referer</span>&quot; &#x27;</span></span><br><span class=\"line\">                    <span class=\"string\">&#x27;&quot;<span class=\"variable\">$http_user_agent</span>&quot; &quot;<span class=\"variable\">$http_x_forwarded_for</span>&quot;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">access_log</span> /var/log/nginx/access.log main;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>log_format</code> 定义日志格式（<code>main</code> 是名称）</li>\n<li><code>access_log</code> 指定日志文件和格式</li>\n</ul>\n<p>日志示例：</p>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">192.168.1.100</span> - - <span class=\"string\">[29/Aug/2025:12:31:21 +0800]</span> <span class=\"string\">&quot;<span class=\"keyword\">GET</span> /index.html HTTP/1.1&quot;</span> <span class=\"number\">200</span> <span class=\"number\">1024</span> <span class=\"string\">&quot;-&quot;</span> <span class=\"string\">&quot;Mozilla/5.0&quot;</span> <span class=\"string\">&quot;-&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-2-错误日志\"><a href=\"#7-2-错误日志\" class=\"headerlink\" title=\"7.2. 错误日志\"></a>7.2. 错误日志</h3><p>错误日志记录了 Nginx 在运行时遇到的问题，如配置错误、后端不可达等。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">error_log</span> /var/log/nginx/<span class=\"literal\">error</span>.log <span class=\"literal\">warn</span>;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li>日志级别：<code>debug</code>、<code>info</code>、<code>notice</code>、<code>warn</code>、<code>error</code>、<code>crit</code></li>\n<li>建议生产环境使用 <code>warn</code> 或 <code>error</code>，避免日志过多</li>\n</ul>\n<h3 id=\"7-3-按站点分日志\"><a href=\"#7-3-按站点分日志\" class=\"headerlink\" title=\"7.3. 按站点分日志\"></a>7.3. 按站点分日志</h3><p>可以为不同的虚拟主机单独配置日志文件，方便分析。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> site1.example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">access_log</span> /var/log/nginx/site1_access.log main;</span><br><span class=\"line\">    <span class=\"attribute\">error_log</span>  /var/log/nginx/site1_error.log <span class=\"literal\">warn</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span> /var/www/site1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-4-禁用日志\"><a href=\"#7-4-禁用日志\" class=\"headerlink\" title=\"7.4. 禁用日志\"></a>7.4. 禁用日志</h3><p>如果不想记录某些静态资源请求日志，可以关闭日志：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">location</span> <span class=\"regexp\">~* \\.(jpg|jpeg|png|gif|ico|css|js)$</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">access_log</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">    <span class=\"attribute\">log_not_found</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-5-日志切割\"><a href=\"#7-5-日志切割\" class=\"headerlink\" title=\"7.5. 日志切割\"></a>7.5. 日志切割</h3><p>Nginx 不会自动切割日志，通常通过 <code>logrotate</code> 管理。</p>\n<p>配置文件路径：<code>/etc/logrotate.d/nginx</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/var/log/nginx/*.log &#123;</span><br><span class=\"line\">    daily</span><br><span class=\"line\">    missingok</span><br><span class=\"line\">    rotate 14</span><br><span class=\"line\">    compress</span><br><span class=\"line\">    delaycompress</span><br><span class=\"line\">    notifempty</span><br><span class=\"line\">    create 0640 nginx adm</span><br><span class=\"line\">    sharedscripts</span><br><span class=\"line\">    postrotate</span><br><span class=\"line\">        [ -f /var/run/nginx.pid ] &amp;&amp; kill -USR1 `cat /var/run/nginx.pid`</span><br><span class=\"line\">    endscript</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-6-实时日志分析（GoAccess）\"><a href=\"#7-6-实时日志分析（GoAccess）\" class=\"headerlink\" title=\"7.6. 实时日志分析（GoAccess）\"></a>7.6. 实时日志分析（GoAccess）</h3><p>GoAccess 是一个命令行实时日志分析工具。</p>\n<p>安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y goaccess</span><br></pre></td></tr></table></figure>\n\n<p>使用：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">goaccess /var/log/nginx/access.log -o /var/www/html/report.html --log-format=COMBINED --real-time-html</span><br></pre></td></tr></table></figure>\n\n<p>浏览器访问 <code>http://server_ip/report.html</code> 即可看到可视化报表。</p>\n<h3 id=\"7-7-集成-ELK（ElasticSearch-Logstash-Kibana）\"><a href=\"#7-7-集成-ELK（ElasticSearch-Logstash-Kibana）\" class=\"headerlink\" title=\"7.7. 集成 ELK（ElasticSearch + Logstash + Kibana）\"></a>7.7. 集成 ELK（ElasticSearch + Logstash + Kibana）</h3><ul>\n<li><strong>Logstash</strong> 采集和解析 Nginx 日志</li>\n<li><strong>ElasticSearch</strong> 存储和索引日志数据</li>\n<li><strong>Kibana</strong> 可视化展示请求趋势、状态码、地理位置等</li>\n</ul>\n<p>示例 Logstash 配置：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">input</span> &#123;</span><br><span class=\"line\">    <span class=\"section\">file</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">path</span> =&gt; <span class=\"string\">&quot;/var/log/nginx/access.log&quot;</span></span><br><span class=\"line\">        start_position =&gt; <span class=\"string\">&quot;beginning&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">filter &#123;</span><br><span class=\"line\">    <span class=\"section\">grok</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">match</span> =&gt; &#123; &quot;message&quot; =&gt; &quot;%&#123;COMBINEDAPACHELOG&#125;&quot; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">output</span> &#123;</span><br><span class=\"line\">    <span class=\"section\">elasticsearch</span> &#123; <span class=\"attribute\">hosts</span> =&gt; [<span class=\"string\">&quot;localhost:9200&quot;</span>] &#125;</span><br><span class=\"line\">    stdout &#123; <span class=\"attribute\">codec</span> =&gt; rubydebug &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"8-高可用与容器化\"><a href=\"#8-高可用与容器化\" class=\"headerlink\" title=\"8. 高可用与容器化\"></a>8. 高可用与容器化</h2><p>在生产环境中，单台 Nginx 容易成为瓶颈或单点故障。为了解决这些问题，可以通过 <strong>高可用架构</strong>（Keepalived + Nginx）和 <strong>容器化部署</strong>（Docker、Kubernetes）来提升服务的稳定性和扩展性。</p>\n<h3 id=\"8-1-Nginx-Keepalived-高可用\"><a href=\"#8-1-Nginx-Keepalived-高可用\" class=\"headerlink\" title=\"8.1. Nginx + Keepalived 高可用\"></a>8.1. Nginx + Keepalived 高可用</h3><h4 id=\"8-1-1-原理\"><a href=\"#8-1-1-原理\" class=\"headerlink\" title=\"8.1.1. 原理\"></a>8.1.1. 原理</h4><ul>\n<li><strong>Keepalived</strong> 使用 VRRP 协议，为多台服务器分配一个虚拟 IP（VIP）</li>\n<li>主节点宕机后，备用节点会自动接管 VIP</li>\n<li>客户端始终通过 VIP 访问，保证服务连续性</li>\n</ul>\n<h4 id=\"8-1-2-配置示例（主节点）\"><a href=\"#8-1-2-配置示例（主节点）\" class=\"headerlink\" title=\"8.1.2. 配置示例（主节点）\"></a>8.1.2. 配置示例（主节点）</h4><p>安装 Keepalived：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install -y keepalived</span><br></pre></td></tr></table></figure>\n\n<p>编辑 <code>/etc/keepalived/keepalived.conf</code>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state MASTER</span><br><span class=\"line\">    interface eth0</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 100</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 123456</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.1.100</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"8-1-3-配置示例（备节点）\"><a href=\"#8-1-3-配置示例（备节点）\" class=\"headerlink\" title=\"8.1.3. 配置示例（备节点）\"></a>8.1.3. 配置示例（备节点）</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state BACKUP</span><br><span class=\"line\">    interface eth0</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 90</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 123456</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.1.100</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>priority</code> 值越大优先级越高，主节点设置为 100，备节点设置为 90</li>\n<li><code>virtual_ipaddress</code> 为对外提供的虚拟 IP</li>\n</ul>\n<p>启动并开机自启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">enable</span> keepalived</span><br><span class=\"line\">systemctl start keepalived</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-2-Nginx-在-Kubernetes-中部署\"><a href=\"#8-2-Nginx-在-Kubernetes-中部署\" class=\"headerlink\" title=\"8.2. Nginx 在 Kubernetes 中部署\"></a>8.2. Nginx 在 Kubernetes 中部署</h3><h4 id=\"8-2-1-Deployment-配置\"><a href=\"#8-2-1-Deployment-配置\" class=\"headerlink\" title=\"8.2.1. Deployment 配置\"></a>8.2.1. Deployment 配置</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx-deployment.yaml</span><br><span class=\"line\">apiVersion: apps/v1</span><br><span class=\"line\">kind: Deployment</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: nginx-deployment</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  replicas: 3</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    matchLabels:</span><br><span class=\"line\">      app: nginx</span><br><span class=\"line\">  template:</span><br><span class=\"line\">    metadata:</span><br><span class=\"line\">      labels:</span><br><span class=\"line\">        app: nginx</span><br><span class=\"line\">    spec:</span><br><span class=\"line\">      containers:</span><br><span class=\"line\">      - name: nginx</span><br><span class=\"line\">        image: nginx:latest</span><br><span class=\"line\">        ports:</span><br><span class=\"line\">        - containerPort: 80</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"8-2-2-Service-暴露\"><a href=\"#8-2-2-Service-暴露\" class=\"headerlink\" title=\"8.2.2. Service 暴露\"></a>8.2.2. Service 暴露</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx-service.yaml</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: Service</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: nginx-service</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  type: NodePort</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    app: nginx</span><br><span class=\"line\">  ports:</span><br><span class=\"line\">  - port: 80</span><br><span class=\"line\">    targetPort: 80</span><br><span class=\"line\">    nodePort: 30080</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>replicas: 3</code> 表示运行 3 个副本，实现负载均衡</li>\n<li><code>Service</code> 将 Nginx 对外暴露在 <code>30080</code> 端口</li>\n</ul>\n<hr>\n<h1 id=\"四-常见问题排查\"><a href=\"#四-常见问题排查\" class=\"headerlink\" title=\"四. 常见问题排查\"></a>四. 常见问题排查</h1><p>在使用 Nginx 的过程中，经常会遇到各种错误或异常。以下总结了常见问题及排查方法。</p>\n<h2 id=\"1-配置语法错误\"><a href=\"#1-配置语法错误\" class=\"headerlink\" title=\"1. 配置语法错误\"></a>1. 配置语法错误</h2><p>修改配置后执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -t</span><br></pre></td></tr></table></figure>\n\n<p>输出示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx: configuration file /etc/nginx/nginx.conf test is successful</span><br></pre></td></tr></table></figure>\n\n<p>如果有错误，会显示出错的文件和行号。修复后再执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl reload nginx</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"2-80-或-443-端口被占用\"><a href=\"#2-80-或-443-端口被占用\" class=\"headerlink\" title=\"2. 80 或 443 端口被占用\"></a>2. 80 或 443 端口被占用</h2><p>现象：Nginx 启动时报错 <code>bind() to 0.0.0.0:80 failed (98: Address already in use)</code>。</p>\n<p>排查：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -tulnp | grep 80</span><br></pre></td></tr></table></figure>\n\n<p>解决：</p>\n<ul>\n<li>停止占用端口的服务</li>\n<li>或修改 Nginx 配置文件 <code>listen</code> 为其他端口</li>\n</ul>\n<hr>\n<h2 id=\"3-502-Bad-Gateway\"><a href=\"#3-502-Bad-Gateway\" class=\"headerlink\" title=\"3. 502 Bad Gateway\"></a>3. 502 Bad Gateway</h2><p>常见原因：</p>\n<ul>\n<li>后端服务未启动或异常退出</li>\n<li>Nginx 配置了错误的后端地址</li>\n<li>PHP-FPM 未运行或监听错误</li>\n</ul>\n<p>排查：</p>\n<ul>\n<li>查看 Nginx 错误日志 <code>/var/log/nginx/error.log</code></li>\n<li>确认后端服务是否正常运行</li>\n<li>检查 <code>proxy_pass</code> 或 <code>fastcgi_pass</code> 配置</li>\n</ul>\n<hr>\n<h2 id=\"4-504-Gateway-Timeout\"><a href=\"#4-504-Gateway-Timeout\" class=\"headerlink\" title=\"4. 504 Gateway Timeout\"></a>4. 504 Gateway Timeout</h2><p>常见原因：</p>\n<ul>\n<li>后端服务响应过慢</li>\n<li>Nginx 超时设置过低</li>\n</ul>\n<p>解决方法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy_connect_timeout 60s;</span><br><span class=\"line\">proxy_send_timeout 60s;</span><br><span class=\"line\">proxy_read_timeout 60s;</span><br></pre></td></tr></table></figure>\n\n<p>可在 <code>server</code> 或 <code>location</code> 中增加以上配置。</p>\n<hr>\n<h2 id=\"5-SSL-证书错误\"><a href=\"#5-SSL-证书错误\" class=\"headerlink\" title=\"5. SSL 证书错误\"></a>5. SSL 证书错误</h2><p>现象：浏览器提示 <code>SSL certificate problem</code> 或 <code>NET::ERR_CERT_DATE_INVALID</code>。</p>\n<p>排查：</p>\n<ul>\n<li>检查证书和私钥路径是否正确</li>\n<li>检查证书是否过期</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl x509 -<span class=\"keyword\">in</span> /etc/nginx/ssl/example.crt -noout -dates</span><br></pre></td></tr></table></figure>\n\n<p>解决方法：</p>\n<ul>\n<li>重新申请证书（如使用 Let’s Encrypt 续签）</li>\n<li>确认 <code>ssl_certificate</code> 与 <code>ssl_certificate_key</code> 配对正确</li>\n</ul>\n<hr>\n<h2 id=\"6-高并发下出现-too-many-open-files\"><a href=\"#6-高并发下出现-too-many-open-files\" class=\"headerlink\" title=\"6. 高并发下出现 too many open files\"></a>6. 高并发下出现 <code>too many open files</code></h2><p>现象：Nginx 报错 <code>EMFILE: Too many open files</code>。</p>\n<p>解决方法：</p>\n<ol>\n<li><p>修改系统限制 <code>/etc/security/limits.conf</code>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* soft nofile 65535</span><br><span class=\"line\">* hard nofile 65535</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 Nginx 配置文件中加入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">worker_rlimit_nofile 65535;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启 Nginx</p>\n</li>\n</ol>\n<hr>\n<h2 id=\"7-日志过大\"><a href=\"#7-日志过大\" class=\"headerlink\" title=\"7. 日志过大\"></a>7. 日志过大</h2><p>现象：<code>/var/log/nginx/access.log</code> 或 <code>error.log</code> 文件体积过大，占满磁盘。</p>\n<p>解决方法：</p>\n<ul>\n<li>配置 <code>logrotate</code> 定期切割日志</li>\n<li>对静态资源路径关闭日志</li>\n</ul>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">location</span> <span class=\"regexp\">~* \\.(jpg|jpeg|png|gif|ico|css|js)$</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">access_log</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">    <span class=\"attribute\">log_not_found</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"8-防火墙或-SELinux-阻止访问\"><a href=\"#8-防火墙或-SELinux-阻止访问\" class=\"headerlink\" title=\"8. 防火墙或 SELinux 阻止访问\"></a>8. 防火墙或 SELinux 阻止访问</h2><p>CentOS7 默认启用防火墙和 SELinux，可能导致端口无法访问。</p>\n<h3 id=\"8-1-检查防火墙\"><a href=\"#8-1-检查防火墙\" class=\"headerlink\" title=\"8.1. 检查防火墙\"></a>8.1. 检查防火墙</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --list-all</span><br><span class=\"line\">firewall-cmd --add-service=http --permanent</span><br><span class=\"line\">firewall-cmd --add-service=https --permanent</span><br><span class=\"line\">firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-2-检查-SELinux\"><a href=\"#8-2-检查-SELinux\" class=\"headerlink\" title=\"8.2. 检查 SELinux\"></a>8.2. 检查 SELinux</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sestatus</span><br></pre></td></tr></table></figure>\n\n<p>如果 SELinux 启用，可以临时关闭：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setenforce 0</span><br></pre></td></tr></table></figure>"},{"title":"Phpipam","date":"2025-07-23T03:03:35.000Z","_content":"\n# 1. 简介\n\nphpipam 是一款开源的 Web IP 地址管理应用程序 (IPAM)。其目标是提供轻量、现代且实用的 IP 地址管理。\n\n# 2. 环境准备\n\n- CentOS7\n  - 系统镜像下载：https://mirrors.aliyun.com/centos/7/isos/x86_64/\n  - 系统初始化配置（可选）：https://zcxx0322.github.io/2024/11/21/%E5%88%9D%E5%A7%8B%E5%8C%96%E9%85%8D%E7%BD%AECentOS7/\n- phpipam\n  - https://github.com/phpipam/phpipam/releases/download/v1.7.3/phpipam-v1.7.3.tgz\n\n- Mysql5.7\n- Apache\n- PHP7.4+\n\n# 3. Mysql\n\n## 3.1. 新增Yum仓库\n\n***新增仓库***\n\n```bash\nyum install -y https://dev.mysql.com/get/mysql80-community-release-el7-7.noarch.rpm\n```\n\n*** 导入公钥***\n\n```bash\nrpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql*\n```\n\n*** 默认禁用MySQL仓库***\n\n```bash\nyum-config-manager --disable mysql-connectors-community | egrep '(\\[mysql-connectors-community\\])|enabled'\nyum-config-manager --disable mysql-tools-community | egrep '(\\[mysql-tools-community\\])|enabled'\nyum-config-manager --disable mysql80-community | egrep '(\\[mysql80-community\\])|enabled'\n```\n\n## 3.2. 安装Mysql5.7\n\n```bash\nyum --enablerepo=mysql57-community install -y mysql-community-server\n```\n\n## 3.3. 初始化Mysql5.7\n\n***设置日志***\n\n```bash\nmkdir -p /var/log/mysqld\ntouch /var/log/mysqld/error.log\nchown -R mysql:mysql /var/log/mysqld\n\ncrudini --set --existing /etc/my.cnf mysqld log-error /var/log/mysqld/error.log\n```\n\n***设置MySQL数据目录***\n\n```bash\nmkdir -p /data/mysql\n\ncrudini --set --existing /etc/my.cnf mysqld datadir /data/mysql\n```\n\n## 3.4. 配置Mysql5.7\n\n```bash\ncrudini --set /etc/my.cnf mysqld default-storage-engine InnoDB\ncrudini --set /etc/my.cnf mysqld disabled_storage_engines '\"MyISAM\"'\n\ncrudini --set /etc/my.cnf mysqld bind-address 0.0.0.0\ncrudini --set /etc/my.cnf mysqld max_connections 1000\n\ncrudini --set /etc/my.cnf mysqld general_log OFF\ncrudini --set /etc/my.cnf mysqld general_log_file /var/log/mysqld/general.log\n\ncrudini --set /etc/my.cnf mysqld long_query_time 3\ncrudini --set /etc/my.cnf mysqld slow_query_log ON\ncrudini --set /etc/my.cnf mysqld slow_query_log_file /var/log/mysqld/slow_query.log\n\n# 开启兼容模式，兼容老MySQL代码，比如使用空字符串代替NULL插入数据\ncrudini --set /etc/my.cnf mysqld sql_mode '\"\"'\n\ncrudini --set /etc/my.cnf mysqld skip-name-resolve 'OFF'\n\ncrudini --set /etc/my.cnf mysqldump max_allowed_packet 100M\necho \"quick\" >> /etc/my.cnf\necho \"quote-names\" >> /etc/my.cnf\n```\n\n## 3.5. 启动Mysql5.7\n\n```bash\nsystemctl enable mysqld\n\nsystemctl start mysqld\n\nsystemctl status mysqld\n```\n\n## 3.6. 配置Mysql密码\n\n***临时密码有不常用的特殊字符，不便日常管理。不降低安全性的前提性，更改MySQL密码***\n\n```bash\nMYSQL_TMP_ROOT_PASSWORD=$(grep 'A temporary password' /var/log/mysqld/error.log | tail -n 1 | awk '{print $NF}')\n\nexport BY_MYSQL_ROOT_PASSWORD=geek\n# 永久保存临时配置（重新登录或重启都有效）\nsed -i '/export BY_/d' ~/.bash_profile && env | grep BY_ | awk '{print \"export \"$1}' >> ~/.bash_profile\n\necho -e \"  MySQL用户名：root\\nMySQL临时密码：${MYSQL_TMP_ROOT_PASSWORD}\\n  MySQL新密码：${BY_MYSQL_ROOT_PASSWORD}\"\n\nmysqladmin -uroot -p\"${MYSQL_TMP_ROOT_PASSWORD}\" password ${BY_MYSQL_ROOT_PASSWORD}\n```\n\n*终端输出*\n\n```bash\nMySQL用户名：root\nMySQL临时密码：caJ<TYnjX8iC\nMySQL新密码：geek\n```\n\n## 3.7. 修改Mysql密码策略\n\n```mysql\nset global validate_password_policy=0;\nset global validate_password_length=0;\n```\n\n## 3.8. 创建phpipam用户/数据库\n\n```mysql\nCREATE DATABASE phpipam;\nCREATE USER 'phpipam'@'localhost' IDENTIFIED BY 'geek';\nGRANT ALL PRIVILEGES ON phpipam.* TO 'phpipam'@'localhost';\t\nGRANT ALL PRIVILEGES ON *.* TO 'phpipam'@'本机IP' IDENTIFIED BY 'geek' WITH GRANT OPTION; \nFLUSH PRIVILEGES;\nEXIT;\n```\n\n# 4. Apache\n\n## 4.1. 安装httpd\n\n```bash\nsudo yum install httpd -y\nsudo systemctl enable --now httpd\n```\n\n## 4.2. 配置httpd\n\n```bash\nvim /etc/httpd/conf.d/phpipam.conf\n\n<VirtualHost *:80>\n    ServerName 修改为想要的IP地址\n    DocumentRoot /var/www/html/phpipam\n    <Directory /var/www/html/phpipam>\n        Options FollowSymLinks\n        AllowOverride All\n        Require all granted\n    </Directory>\n    ErrorLog /var/log/httpd/phpipam_error.log\n    CustomLog /var/log/httpd/phpipam_access.log combined\n</VirtualHost>\n\n# 重启httpd服务\nsudo systemctl restart httpd\n```\n\n# 5. PHP\n\n```bash\nsudo yum install epel-release -y\nsudo yum install http://rpms.remirepo.net/enterprise/remi-release-7.rpm -y\nsudo yum-config-manager --enable remi-php74  # 启用 PHP 7.4\nsudo yum install php php-cli php-mysqlnd php-json php-gd php-ldap php-curl php-zip php-mbstring php-xml php-bcmath php-gmp php-pear -y\n```\n\n# 6. phpipam\n\n## 6.1. 下载phpipam\n\n```bash\ncd /tmp\nwget -c https://github.com/phpipam/phpipam/releases/download/v1.7.3/phpipam-v1.7.3.tgz \ntar -xzvf phpipam-v1.7.3.tgz\nsudo mv phpipam /var/www/html/\nsudo chown -R apache:apache /var/www/html/phpipam\n```\n\n## 6.2. 配置phpipam\n\n```bash\ncp /var/www/html/phpipam/config.dist.php /var/www/html/phpipam/config.php\nvim  /var/www/html/phpipam/config.php\n\n$db['host'] = '虚拟机IP'; // 使用虚拟机实际IP \n\n$db['user'] = 'phpipam';         // 专用用户 \n\n$db['pass'] = 'geek'; \n\n$db['name'] = 'phpipam'\n```\n\n## 6.3. 配置 Cron 任务\n\n用于扫描网络状态：\n\n```bash\nsudo crontab -e\n\n*/5 * * * * /usr/bin/php /var/www/html/phpipam/functions/scripts/pingCheck.php\n*/5 * * * * /usr/bin/php /var/www/html/phpipam/functions/scripts/discoveryCheck.php\n```\n\n# 7. 关闭SELinux和防火墙\n\n```bash\necho SELINUX=disabled>/etc/selinux/config\necho SELINUXTYPE=targeted>>/etc/selinux/config\n\nsystemctl disable firewalld\nsystemctl stop firewalld\n\n# 重启虚拟机\nreboot\n```\n\n# 8. 访问phpipam开始安装\n\n```url\nhttp://虚拟机IP/phpipam/\n```\n\n# 9. 常见问题解决\n\n- **PHP 扩展缺失**：根据报错安装对应扩展（如 `php-pecl-zip`）。\n- **文件权限问题**：确保 `/var/www/html/phpipam` 属主为 `apache`。\n- **数据库连接错误**：检查数据库用户权限及密码。\n- **页面空白**：检查 PHP 错误日志 `/var/log/php-fpm/error.log`。\n\n完成以上步骤后，即可通过 Web 界面管理 IP 地址。如需 HTTPS，可使用 Let's Encrypt 配置 SSL 证\n\n\n\n","source":"_posts/Phpipam.md","raw":"---\ntitle: Phpipam\ndate: 2025-07-23 11:03:35\ntags: phpipam\ncategories: phpipam\n---\n\n# 1. 简介\n\nphpipam 是一款开源的 Web IP 地址管理应用程序 (IPAM)。其目标是提供轻量、现代且实用的 IP 地址管理。\n\n# 2. 环境准备\n\n- CentOS7\n  - 系统镜像下载：https://mirrors.aliyun.com/centos/7/isos/x86_64/\n  - 系统初始化配置（可选）：https://zcxx0322.github.io/2024/11/21/%E5%88%9D%E5%A7%8B%E5%8C%96%E9%85%8D%E7%BD%AECentOS7/\n- phpipam\n  - https://github.com/phpipam/phpipam/releases/download/v1.7.3/phpipam-v1.7.3.tgz\n\n- Mysql5.7\n- Apache\n- PHP7.4+\n\n# 3. Mysql\n\n## 3.1. 新增Yum仓库\n\n***新增仓库***\n\n```bash\nyum install -y https://dev.mysql.com/get/mysql80-community-release-el7-7.noarch.rpm\n```\n\n*** 导入公钥***\n\n```bash\nrpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql*\n```\n\n*** 默认禁用MySQL仓库***\n\n```bash\nyum-config-manager --disable mysql-connectors-community | egrep '(\\[mysql-connectors-community\\])|enabled'\nyum-config-manager --disable mysql-tools-community | egrep '(\\[mysql-tools-community\\])|enabled'\nyum-config-manager --disable mysql80-community | egrep '(\\[mysql80-community\\])|enabled'\n```\n\n## 3.2. 安装Mysql5.7\n\n```bash\nyum --enablerepo=mysql57-community install -y mysql-community-server\n```\n\n## 3.3. 初始化Mysql5.7\n\n***设置日志***\n\n```bash\nmkdir -p /var/log/mysqld\ntouch /var/log/mysqld/error.log\nchown -R mysql:mysql /var/log/mysqld\n\ncrudini --set --existing /etc/my.cnf mysqld log-error /var/log/mysqld/error.log\n```\n\n***设置MySQL数据目录***\n\n```bash\nmkdir -p /data/mysql\n\ncrudini --set --existing /etc/my.cnf mysqld datadir /data/mysql\n```\n\n## 3.4. 配置Mysql5.7\n\n```bash\ncrudini --set /etc/my.cnf mysqld default-storage-engine InnoDB\ncrudini --set /etc/my.cnf mysqld disabled_storage_engines '\"MyISAM\"'\n\ncrudini --set /etc/my.cnf mysqld bind-address 0.0.0.0\ncrudini --set /etc/my.cnf mysqld max_connections 1000\n\ncrudini --set /etc/my.cnf mysqld general_log OFF\ncrudini --set /etc/my.cnf mysqld general_log_file /var/log/mysqld/general.log\n\ncrudini --set /etc/my.cnf mysqld long_query_time 3\ncrudini --set /etc/my.cnf mysqld slow_query_log ON\ncrudini --set /etc/my.cnf mysqld slow_query_log_file /var/log/mysqld/slow_query.log\n\n# 开启兼容模式，兼容老MySQL代码，比如使用空字符串代替NULL插入数据\ncrudini --set /etc/my.cnf mysqld sql_mode '\"\"'\n\ncrudini --set /etc/my.cnf mysqld skip-name-resolve 'OFF'\n\ncrudini --set /etc/my.cnf mysqldump max_allowed_packet 100M\necho \"quick\" >> /etc/my.cnf\necho \"quote-names\" >> /etc/my.cnf\n```\n\n## 3.5. 启动Mysql5.7\n\n```bash\nsystemctl enable mysqld\n\nsystemctl start mysqld\n\nsystemctl status mysqld\n```\n\n## 3.6. 配置Mysql密码\n\n***临时密码有不常用的特殊字符，不便日常管理。不降低安全性的前提性，更改MySQL密码***\n\n```bash\nMYSQL_TMP_ROOT_PASSWORD=$(grep 'A temporary password' /var/log/mysqld/error.log | tail -n 1 | awk '{print $NF}')\n\nexport BY_MYSQL_ROOT_PASSWORD=geek\n# 永久保存临时配置（重新登录或重启都有效）\nsed -i '/export BY_/d' ~/.bash_profile && env | grep BY_ | awk '{print \"export \"$1}' >> ~/.bash_profile\n\necho -e \"  MySQL用户名：root\\nMySQL临时密码：${MYSQL_TMP_ROOT_PASSWORD}\\n  MySQL新密码：${BY_MYSQL_ROOT_PASSWORD}\"\n\nmysqladmin -uroot -p\"${MYSQL_TMP_ROOT_PASSWORD}\" password ${BY_MYSQL_ROOT_PASSWORD}\n```\n\n*终端输出*\n\n```bash\nMySQL用户名：root\nMySQL临时密码：caJ<TYnjX8iC\nMySQL新密码：geek\n```\n\n## 3.7. 修改Mysql密码策略\n\n```mysql\nset global validate_password_policy=0;\nset global validate_password_length=0;\n```\n\n## 3.8. 创建phpipam用户/数据库\n\n```mysql\nCREATE DATABASE phpipam;\nCREATE USER 'phpipam'@'localhost' IDENTIFIED BY 'geek';\nGRANT ALL PRIVILEGES ON phpipam.* TO 'phpipam'@'localhost';\t\nGRANT ALL PRIVILEGES ON *.* TO 'phpipam'@'本机IP' IDENTIFIED BY 'geek' WITH GRANT OPTION; \nFLUSH PRIVILEGES;\nEXIT;\n```\n\n# 4. Apache\n\n## 4.1. 安装httpd\n\n```bash\nsudo yum install httpd -y\nsudo systemctl enable --now httpd\n```\n\n## 4.2. 配置httpd\n\n```bash\nvim /etc/httpd/conf.d/phpipam.conf\n\n<VirtualHost *:80>\n    ServerName 修改为想要的IP地址\n    DocumentRoot /var/www/html/phpipam\n    <Directory /var/www/html/phpipam>\n        Options FollowSymLinks\n        AllowOverride All\n        Require all granted\n    </Directory>\n    ErrorLog /var/log/httpd/phpipam_error.log\n    CustomLog /var/log/httpd/phpipam_access.log combined\n</VirtualHost>\n\n# 重启httpd服务\nsudo systemctl restart httpd\n```\n\n# 5. PHP\n\n```bash\nsudo yum install epel-release -y\nsudo yum install http://rpms.remirepo.net/enterprise/remi-release-7.rpm -y\nsudo yum-config-manager --enable remi-php74  # 启用 PHP 7.4\nsudo yum install php php-cli php-mysqlnd php-json php-gd php-ldap php-curl php-zip php-mbstring php-xml php-bcmath php-gmp php-pear -y\n```\n\n# 6. phpipam\n\n## 6.1. 下载phpipam\n\n```bash\ncd /tmp\nwget -c https://github.com/phpipam/phpipam/releases/download/v1.7.3/phpipam-v1.7.3.tgz \ntar -xzvf phpipam-v1.7.3.tgz\nsudo mv phpipam /var/www/html/\nsudo chown -R apache:apache /var/www/html/phpipam\n```\n\n## 6.2. 配置phpipam\n\n```bash\ncp /var/www/html/phpipam/config.dist.php /var/www/html/phpipam/config.php\nvim  /var/www/html/phpipam/config.php\n\n$db['host'] = '虚拟机IP'; // 使用虚拟机实际IP \n\n$db['user'] = 'phpipam';         // 专用用户 \n\n$db['pass'] = 'geek'; \n\n$db['name'] = 'phpipam'\n```\n\n## 6.3. 配置 Cron 任务\n\n用于扫描网络状态：\n\n```bash\nsudo crontab -e\n\n*/5 * * * * /usr/bin/php /var/www/html/phpipam/functions/scripts/pingCheck.php\n*/5 * * * * /usr/bin/php /var/www/html/phpipam/functions/scripts/discoveryCheck.php\n```\n\n# 7. 关闭SELinux和防火墙\n\n```bash\necho SELINUX=disabled>/etc/selinux/config\necho SELINUXTYPE=targeted>>/etc/selinux/config\n\nsystemctl disable firewalld\nsystemctl stop firewalld\n\n# 重启虚拟机\nreboot\n```\n\n# 8. 访问phpipam开始安装\n\n```url\nhttp://虚拟机IP/phpipam/\n```\n\n# 9. 常见问题解决\n\n- **PHP 扩展缺失**：根据报错安装对应扩展（如 `php-pecl-zip`）。\n- **文件权限问题**：确保 `/var/www/html/phpipam` 属主为 `apache`。\n- **数据库连接错误**：检查数据库用户权限及密码。\n- **页面空白**：检查 PHP 错误日志 `/var/log/php-fpm/error.log`。\n\n完成以上步骤后，即可通过 Web 界面管理 IP 地址。如需 HTTPS，可使用 Let's Encrypt 配置 SSL 证\n\n\n\n","slug":"Phpipam","published":1,"updated":"2025-10-02T08:03:47.993Z","_id":"cmg94h9eh0000r8j89k6xh8sb","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"1-简介\"><a href=\"#1-简介\" class=\"headerlink\" title=\"1. 简介\"></a>1. 简介</h1><p>phpipam 是一款开源的 Web IP 地址管理应用程序 (IPAM)。其目标是提供轻量、现代且实用的 IP 地址管理。</p>\n<h1 id=\"2-环境准备\"><a href=\"#2-环境准备\" class=\"headerlink\" title=\"2. 环境准备\"></a>2. 环境准备</h1><ul>\n<li><p>CentOS7</p>\n<ul>\n<li>系统镜像下载：<a href=\"https://mirrors.aliyun.com/centos/7/isos/x86_64/\">https://mirrors.aliyun.com/centos/7/isos/x86_64/</a></li>\n<li>系统初始化配置（可选）：<a href=\"https://zcxx0322.github.io/2024/11/21/%E5%88%9D%E5%A7%8B%E5%8C%96%E9%85%8D%E7%BD%AECentOS7/\">https://zcxx0322.github.io/2024/11/21/%E5%88%9D%E5%A7%8B%E5%8C%96%E9%85%8D%E7%BD%AECentOS7/</a></li>\n</ul>\n</li>\n<li><p>phpipam</p>\n<ul>\n<li><a href=\"https://github.com/phpipam/phpipam/releases/download/v1.7.3/phpipam-v1.7.3.tgz\">https://github.com/phpipam/phpipam/releases/download/v1.7.3/phpipam-v1.7.3.tgz</a></li>\n</ul>\n</li>\n<li><p>Mysql5.7</p>\n</li>\n<li><p>Apache</p>\n</li>\n<li><p>PHP7.4+</p>\n</li>\n</ul>\n<h1 id=\"3-Mysql\"><a href=\"#3-Mysql\" class=\"headerlink\" title=\"3. Mysql\"></a>3. Mysql</h1><h2 id=\"3-1-新增Yum仓库\"><a href=\"#3-1-新增Yum仓库\" class=\"headerlink\" title=\"3.1. 新增Yum仓库\"></a>3.1. 新增Yum仓库</h2><p><em><strong>新增仓库</strong></em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y https://dev.mysql.com/get/mysql80-community-release-el7-7.noarch.rpm</span><br></pre></td></tr></table></figure>\n\n<p>*** 导入公钥***</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql*</span><br></pre></td></tr></table></figure>\n\n<p>*** 默认禁用MySQL仓库***</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum-config-manager --<span class=\"built_in\">disable</span> mysql-connectors-community | egrep <span class=\"string\">&#x27;(\\[mysql-connectors-community\\])|enabled&#x27;</span></span><br><span class=\"line\">yum-config-manager --<span class=\"built_in\">disable</span> mysql-tools-community | egrep <span class=\"string\">&#x27;(\\[mysql-tools-community\\])|enabled&#x27;</span></span><br><span class=\"line\">yum-config-manager --<span class=\"built_in\">disable</span> mysql80-community | egrep <span class=\"string\">&#x27;(\\[mysql80-community\\])|enabled&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-2-安装Mysql5-7\"><a href=\"#3-2-安装Mysql5-7\" class=\"headerlink\" title=\"3.2. 安装Mysql5.7\"></a>3.2. 安装Mysql5.7</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum --enablerepo=mysql57-community install -y mysql-community-server</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-3-初始化Mysql5-7\"><a href=\"#3-3-初始化Mysql5-7\" class=\"headerlink\" title=\"3.3. 初始化Mysql5.7\"></a>3.3. 初始化Mysql5.7</h2><p><em><strong>设置日志</strong></em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /var/log/mysqld</span><br><span class=\"line\"><span class=\"built_in\">touch</span> /var/log/mysqld/error.log</span><br><span class=\"line\"><span class=\"built_in\">chown</span> -R mysql:mysql /var/log/mysqld</span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> --existing /etc/my.cnf mysqld log-error /var/log/mysqld/error.log</span><br></pre></td></tr></table></figure>\n\n<p><em><strong>设置MySQL数据目录</strong></em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /data/mysql</span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> --existing /etc/my.cnf mysqld datadir /data/mysql</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-4-配置Mysql5-7\"><a href=\"#3-4-配置Mysql5-7\" class=\"headerlink\" title=\"3.4. 配置Mysql5.7\"></a>3.4. 配置Mysql5.7</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld default-storage-engine InnoDB</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld disabled_storage_engines <span class=\"string\">&#x27;&quot;MyISAM&quot;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld bind-address 0.0.0.0</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld max_connections 1000</span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld general_log OFF</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld general_log_file /var/log/mysqld/general.log</span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld long_query_time 3</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld slow_query_log ON</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld slow_query_log_file /var/log/mysqld/slow_query.log</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开启兼容模式，兼容老MySQL代码，比如使用空字符串代替NULL插入数据</span></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld sql_mode <span class=\"string\">&#x27;&quot;&quot;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld skip-name-resolve <span class=\"string\">&#x27;OFF&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqldump max_allowed_packet 100M</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;quick&quot;</span> &gt;&gt; /etc/my.cnf</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;quote-names&quot;</span> &gt;&gt; /etc/my.cnf</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-5-启动Mysql5-7\"><a href=\"#3-5-启动Mysql5-7\" class=\"headerlink\" title=\"3.5. 启动Mysql5.7\"></a>3.5. 启动Mysql5.7</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">enable</span> mysqld</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl start mysqld</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl status mysqld</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-6-配置Mysql密码\"><a href=\"#3-6-配置Mysql密码\" class=\"headerlink\" title=\"3.6. 配置Mysql密码\"></a>3.6. 配置Mysql密码</h2><p><em><strong>临时密码有不常用的特殊字符，不便日常管理。不降低安全性的前提性，更改MySQL密码</strong></em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MYSQL_TMP_ROOT_PASSWORD=$(grep <span class=\"string\">&#x27;A temporary password&#x27;</span> /var/log/mysqld/error.log | <span class=\"built_in\">tail</span> -n 1 | awk <span class=\"string\">&#x27;&#123;print $NF&#125;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> BY_MYSQL_ROOT_PASSWORD=geek</span><br><span class=\"line\"><span class=\"comment\"># 永久保存临时配置（重新登录或重启都有效）</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;/export BY_/d&#x27;</span> ~/.bash_profile &amp;&amp; <span class=\"built_in\">env</span> | grep BY_ | awk <span class=\"string\">&#x27;&#123;print &quot;export &quot;$1&#125;&#x27;</span> &gt;&gt; ~/.bash_profile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">&quot;  MySQL用户名：root\\nMySQL临时密码：<span class=\"variable\">$&#123;MYSQL_TMP_ROOT_PASSWORD&#125;</span>\\n  MySQL新密码：<span class=\"variable\">$&#123;BY_MYSQL_ROOT_PASSWORD&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysqladmin -uroot -p<span class=\"string\">&quot;<span class=\"variable\">$&#123;MYSQL_TMP_ROOT_PASSWORD&#125;</span>&quot;</span> password <span class=\"variable\">$&#123;BY_MYSQL_ROOT_PASSWORD&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><em>终端输出</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MySQL用户名：root</span><br><span class=\"line\">MySQL临时密码：caJ&lt;TYnjX8iC</span><br><span class=\"line\">MySQL新密码：geek</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-7-修改Mysql密码策略\"><a href=\"#3-7-修改Mysql密码策略\" class=\"headerlink\" title=\"3.7. 修改Mysql密码策略\"></a>3.7. 修改Mysql密码策略</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set global validate_password_policy=0;</span><br><span class=\"line\">set global validate_password_length=0;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-8-创建phpipam用户-数据库\"><a href=\"#3-8-创建phpipam用户-数据库\" class=\"headerlink\" title=\"3.8. 创建phpipam用户&#x2F;数据库\"></a>3.8. 创建phpipam用户&#x2F;数据库</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE DATABASE phpipam;</span><br><span class=\"line\">CREATE USER &#x27;phpipam&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;geek&#x27;;</span><br><span class=\"line\">GRANT ALL PRIVILEGES ON phpipam.* TO &#x27;phpipam&#x27;@&#x27;localhost&#x27;;\t</span><br><span class=\"line\">GRANT ALL PRIVILEGES ON *.* TO &#x27;phpipam&#x27;@&#x27;本机IP&#x27; IDENTIFIED BY &#x27;geek&#x27; WITH GRANT OPTION; </span><br><span class=\"line\">FLUSH PRIVILEGES;</span><br><span class=\"line\">EXIT;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"4-Apache\"><a href=\"#4-Apache\" class=\"headerlink\" title=\"4. Apache\"></a>4. Apache</h1><h2 id=\"4-1-安装httpd\"><a href=\"#4-1-安装httpd\" class=\"headerlink\" title=\"4.1. 安装httpd\"></a>4.1. 安装httpd</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install httpd -y</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl <span class=\"built_in\">enable</span> --now httpd</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-2-配置httpd\"><a href=\"#4-2-配置httpd\" class=\"headerlink\" title=\"4.2. 配置httpd\"></a>4.2. 配置httpd</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/httpd/conf.d/phpipam.conf</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;VirtualHost *:80&gt;</span><br><span class=\"line\">    ServerName 修改为想要的IP地址</span><br><span class=\"line\">    DocumentRoot /var/www/html/phpipam</span><br><span class=\"line\">    &lt;Directory /var/www/html/phpipam&gt;</span><br><span class=\"line\">        Options FollowSymLinks</span><br><span class=\"line\">        AllowOverride All</span><br><span class=\"line\">        Require all granted</span><br><span class=\"line\">    &lt;/Directory&gt;</span><br><span class=\"line\">    ErrorLog /var/log/httpd/phpipam_error.log</span><br><span class=\"line\">    CustomLog /var/log/httpd/phpipam_access.log combined</span><br><span class=\"line\">&lt;/VirtualHost&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启httpd服务</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl restart httpd</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"5-PHP\"><a href=\"#5-PHP\" class=\"headerlink\" title=\"5. PHP\"></a>5. PHP</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install epel-release -y</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> yum install http://rpms.remirepo.net/enterprise/remi-release-7.rpm -y</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> yum-config-manager --<span class=\"built_in\">enable</span> remi-php74  <span class=\"comment\"># 启用 PHP 7.4</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> yum install php php-cli php-mysqlnd php-json php-gd php-ldap php-curl php-zip php-mbstring php-xml php-bcmath php-gmp php-pear -y</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"6-phpipam\"><a href=\"#6-phpipam\" class=\"headerlink\" title=\"6. phpipam\"></a>6. phpipam</h1><h2 id=\"6-1-下载phpipam\"><a href=\"#6-1-下载phpipam\" class=\"headerlink\" title=\"6.1. 下载phpipam\"></a>6.1. 下载phpipam</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /tmp</span><br><span class=\"line\">wget -c https://github.com/phpipam/phpipam/releases/download/v1.7.3/phpipam-v1.7.3.tgz </span><br><span class=\"line\">tar -xzvf phpipam-v1.7.3.tgz</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">mv</span> phpipam /var/www/html/</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">chown</span> -R apache:apache /var/www/html/phpipam</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-2-配置phpipam\"><a href=\"#6-2-配置phpipam\" class=\"headerlink\" title=\"6.2. 配置phpipam\"></a>6.2. 配置phpipam</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> /var/www/html/phpipam/config.dist.php /var/www/html/phpipam/config.php</span><br><span class=\"line\">vim  /var/www/html/phpipam/config.php</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$db</span>[<span class=\"string\">&#x27;host&#x27;</span>] = <span class=\"string\">&#x27;虚拟机IP&#x27;</span>; // 使用虚拟机实际IP </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$db</span>[<span class=\"string\">&#x27;user&#x27;</span>] = <span class=\"string\">&#x27;phpipam&#x27;</span>;         // 专用用户 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$db</span>[<span class=\"string\">&#x27;pass&#x27;</span>] = <span class=\"string\">&#x27;geek&#x27;</span>; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$db</span>[<span class=\"string\">&#x27;name&#x27;</span>] = <span class=\"string\">&#x27;phpipam&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-3-配置-Cron-任务\"><a href=\"#6-3-配置-Cron-任务\" class=\"headerlink\" title=\"6.3. 配置 Cron 任务\"></a>6.3. 配置 Cron 任务</h2><p>用于扫描网络状态：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> crontab -e</span><br><span class=\"line\"></span><br><span class=\"line\">*/5 * * * * /usr/bin/php /var/www/html/phpipam/functions/scripts/pingCheck.php</span><br><span class=\"line\">*/5 * * * * /usr/bin/php /var/www/html/phpipam/functions/scripts/discoveryCheck.php</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"7-关闭SELinux和防火墙\"><a href=\"#7-关闭SELinux和防火墙\" class=\"headerlink\" title=\"7. 关闭SELinux和防火墙\"></a>7. 关闭SELinux和防火墙</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> SELINUX=disabled&gt;/etc/selinux/config</span><br><span class=\"line\"><span class=\"built_in\">echo</span> SELINUXTYPE=targeted&gt;&gt;/etc/selinux/config</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld</span><br><span class=\"line\">systemctl stop firewalld</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启虚拟机</span></span><br><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"8-访问phpipam开始安装\"><a href=\"#8-访问phpipam开始安装\" class=\"headerlink\" title=\"8. 访问phpipam开始安装\"></a>8. 访问phpipam开始安装</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://虚拟机IP/phpipam/</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"9-常见问题解决\"><a href=\"#9-常见问题解决\" class=\"headerlink\" title=\"9. 常见问题解决\"></a>9. 常见问题解决</h1><ul>\n<li><strong>PHP 扩展缺失</strong>：根据报错安装对应扩展（如 <code>php-pecl-zip</code>）。</li>\n<li><strong>文件权限问题</strong>：确保 <code>/var/www/html/phpipam</code> 属主为 <code>apache</code>。</li>\n<li><strong>数据库连接错误</strong>：检查数据库用户权限及密码。</li>\n<li><strong>页面空白</strong>：检查 PHP 错误日志 <code>/var/log/php-fpm/error.log</code>。</li>\n</ul>\n<p>完成以上步骤后，即可通过 Web 界面管理 IP 地址。如需 HTTPS，可使用 Let’s Encrypt 配置 SSL 证</p>\n","excerpt":"","more":"<h1 id=\"1-简介\"><a href=\"#1-简介\" class=\"headerlink\" title=\"1. 简介\"></a>1. 简介</h1><p>phpipam 是一款开源的 Web IP 地址管理应用程序 (IPAM)。其目标是提供轻量、现代且实用的 IP 地址管理。</p>\n<h1 id=\"2-环境准备\"><a href=\"#2-环境准备\" class=\"headerlink\" title=\"2. 环境准备\"></a>2. 环境准备</h1><ul>\n<li><p>CentOS7</p>\n<ul>\n<li>系统镜像下载：<a href=\"https://mirrors.aliyun.com/centos/7/isos/x86_64/\">https://mirrors.aliyun.com/centos/7/isos/x86_64/</a></li>\n<li>系统初始化配置（可选）：<a href=\"https://zcxx0322.github.io/2024/11/21/%E5%88%9D%E5%A7%8B%E5%8C%96%E9%85%8D%E7%BD%AECentOS7/\">https://zcxx0322.github.io/2024/11/21/%E5%88%9D%E5%A7%8B%E5%8C%96%E9%85%8D%E7%BD%AECentOS7/</a></li>\n</ul>\n</li>\n<li><p>phpipam</p>\n<ul>\n<li><a href=\"https://github.com/phpipam/phpipam/releases/download/v1.7.3/phpipam-v1.7.3.tgz\">https://github.com/phpipam/phpipam/releases/download/v1.7.3/phpipam-v1.7.3.tgz</a></li>\n</ul>\n</li>\n<li><p>Mysql5.7</p>\n</li>\n<li><p>Apache</p>\n</li>\n<li><p>PHP7.4+</p>\n</li>\n</ul>\n<h1 id=\"3-Mysql\"><a href=\"#3-Mysql\" class=\"headerlink\" title=\"3. Mysql\"></a>3. Mysql</h1><h2 id=\"3-1-新增Yum仓库\"><a href=\"#3-1-新增Yum仓库\" class=\"headerlink\" title=\"3.1. 新增Yum仓库\"></a>3.1. 新增Yum仓库</h2><p><em><strong>新增仓库</strong></em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y https://dev.mysql.com/get/mysql80-community-release-el7-7.noarch.rpm</span><br></pre></td></tr></table></figure>\n\n<p>*** 导入公钥***</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql*</span><br></pre></td></tr></table></figure>\n\n<p>*** 默认禁用MySQL仓库***</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum-config-manager --<span class=\"built_in\">disable</span> mysql-connectors-community | egrep <span class=\"string\">&#x27;(\\[mysql-connectors-community\\])|enabled&#x27;</span></span><br><span class=\"line\">yum-config-manager --<span class=\"built_in\">disable</span> mysql-tools-community | egrep <span class=\"string\">&#x27;(\\[mysql-tools-community\\])|enabled&#x27;</span></span><br><span class=\"line\">yum-config-manager --<span class=\"built_in\">disable</span> mysql80-community | egrep <span class=\"string\">&#x27;(\\[mysql80-community\\])|enabled&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-2-安装Mysql5-7\"><a href=\"#3-2-安装Mysql5-7\" class=\"headerlink\" title=\"3.2. 安装Mysql5.7\"></a>3.2. 安装Mysql5.7</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum --enablerepo=mysql57-community install -y mysql-community-server</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-3-初始化Mysql5-7\"><a href=\"#3-3-初始化Mysql5-7\" class=\"headerlink\" title=\"3.3. 初始化Mysql5.7\"></a>3.3. 初始化Mysql5.7</h2><p><em><strong>设置日志</strong></em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /var/log/mysqld</span><br><span class=\"line\"><span class=\"built_in\">touch</span> /var/log/mysqld/error.log</span><br><span class=\"line\"><span class=\"built_in\">chown</span> -R mysql:mysql /var/log/mysqld</span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> --existing /etc/my.cnf mysqld log-error /var/log/mysqld/error.log</span><br></pre></td></tr></table></figure>\n\n<p><em><strong>设置MySQL数据目录</strong></em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /data/mysql</span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> --existing /etc/my.cnf mysqld datadir /data/mysql</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-4-配置Mysql5-7\"><a href=\"#3-4-配置Mysql5-7\" class=\"headerlink\" title=\"3.4. 配置Mysql5.7\"></a>3.4. 配置Mysql5.7</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld default-storage-engine InnoDB</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld disabled_storage_engines <span class=\"string\">&#x27;&quot;MyISAM&quot;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld bind-address 0.0.0.0</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld max_connections 1000</span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld general_log OFF</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld general_log_file /var/log/mysqld/general.log</span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld long_query_time 3</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld slow_query_log ON</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld slow_query_log_file /var/log/mysqld/slow_query.log</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开启兼容模式，兼容老MySQL代码，比如使用空字符串代替NULL插入数据</span></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld sql_mode <span class=\"string\">&#x27;&quot;&quot;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld skip-name-resolve <span class=\"string\">&#x27;OFF&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqldump max_allowed_packet 100M</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;quick&quot;</span> &gt;&gt; /etc/my.cnf</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;quote-names&quot;</span> &gt;&gt; /etc/my.cnf</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-5-启动Mysql5-7\"><a href=\"#3-5-启动Mysql5-7\" class=\"headerlink\" title=\"3.5. 启动Mysql5.7\"></a>3.5. 启动Mysql5.7</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">enable</span> mysqld</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl start mysqld</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl status mysqld</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-6-配置Mysql密码\"><a href=\"#3-6-配置Mysql密码\" class=\"headerlink\" title=\"3.6. 配置Mysql密码\"></a>3.6. 配置Mysql密码</h2><p><em><strong>临时密码有不常用的特殊字符，不便日常管理。不降低安全性的前提性，更改MySQL密码</strong></em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MYSQL_TMP_ROOT_PASSWORD=$(grep <span class=\"string\">&#x27;A temporary password&#x27;</span> /var/log/mysqld/error.log | <span class=\"built_in\">tail</span> -n 1 | awk <span class=\"string\">&#x27;&#123;print $NF&#125;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> BY_MYSQL_ROOT_PASSWORD=geek</span><br><span class=\"line\"><span class=\"comment\"># 永久保存临时配置（重新登录或重启都有效）</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;/export BY_/d&#x27;</span> ~/.bash_profile &amp;&amp; <span class=\"built_in\">env</span> | grep BY_ | awk <span class=\"string\">&#x27;&#123;print &quot;export &quot;$1&#125;&#x27;</span> &gt;&gt; ~/.bash_profile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">&quot;  MySQL用户名：root\\nMySQL临时密码：<span class=\"variable\">$&#123;MYSQL_TMP_ROOT_PASSWORD&#125;</span>\\n  MySQL新密码：<span class=\"variable\">$&#123;BY_MYSQL_ROOT_PASSWORD&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysqladmin -uroot -p<span class=\"string\">&quot;<span class=\"variable\">$&#123;MYSQL_TMP_ROOT_PASSWORD&#125;</span>&quot;</span> password <span class=\"variable\">$&#123;BY_MYSQL_ROOT_PASSWORD&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><em>终端输出</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MySQL用户名：root</span><br><span class=\"line\">MySQL临时密码：caJ&lt;TYnjX8iC</span><br><span class=\"line\">MySQL新密码：geek</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-7-修改Mysql密码策略\"><a href=\"#3-7-修改Mysql密码策略\" class=\"headerlink\" title=\"3.7. 修改Mysql密码策略\"></a>3.7. 修改Mysql密码策略</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set global validate_password_policy=0;</span><br><span class=\"line\">set global validate_password_length=0;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-8-创建phpipam用户-数据库\"><a href=\"#3-8-创建phpipam用户-数据库\" class=\"headerlink\" title=\"3.8. 创建phpipam用户&#x2F;数据库\"></a>3.8. 创建phpipam用户&#x2F;数据库</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE DATABASE phpipam;</span><br><span class=\"line\">CREATE USER &#x27;phpipam&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;geek&#x27;;</span><br><span class=\"line\">GRANT ALL PRIVILEGES ON phpipam.* TO &#x27;phpipam&#x27;@&#x27;localhost&#x27;;\t</span><br><span class=\"line\">GRANT ALL PRIVILEGES ON *.* TO &#x27;phpipam&#x27;@&#x27;本机IP&#x27; IDENTIFIED BY &#x27;geek&#x27; WITH GRANT OPTION; </span><br><span class=\"line\">FLUSH PRIVILEGES;</span><br><span class=\"line\">EXIT;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"4-Apache\"><a href=\"#4-Apache\" class=\"headerlink\" title=\"4. Apache\"></a>4. Apache</h1><h2 id=\"4-1-安装httpd\"><a href=\"#4-1-安装httpd\" class=\"headerlink\" title=\"4.1. 安装httpd\"></a>4.1. 安装httpd</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install httpd -y</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl <span class=\"built_in\">enable</span> --now httpd</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-2-配置httpd\"><a href=\"#4-2-配置httpd\" class=\"headerlink\" title=\"4.2. 配置httpd\"></a>4.2. 配置httpd</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/httpd/conf.d/phpipam.conf</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;VirtualHost *:80&gt;</span><br><span class=\"line\">    ServerName 修改为想要的IP地址</span><br><span class=\"line\">    DocumentRoot /var/www/html/phpipam</span><br><span class=\"line\">    &lt;Directory /var/www/html/phpipam&gt;</span><br><span class=\"line\">        Options FollowSymLinks</span><br><span class=\"line\">        AllowOverride All</span><br><span class=\"line\">        Require all granted</span><br><span class=\"line\">    &lt;/Directory&gt;</span><br><span class=\"line\">    ErrorLog /var/log/httpd/phpipam_error.log</span><br><span class=\"line\">    CustomLog /var/log/httpd/phpipam_access.log combined</span><br><span class=\"line\">&lt;/VirtualHost&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启httpd服务</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl restart httpd</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"5-PHP\"><a href=\"#5-PHP\" class=\"headerlink\" title=\"5. PHP\"></a>5. PHP</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> yum install epel-release -y</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> yum install http://rpms.remirepo.net/enterprise/remi-release-7.rpm -y</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> yum-config-manager --<span class=\"built_in\">enable</span> remi-php74  <span class=\"comment\"># 启用 PHP 7.4</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> yum install php php-cli php-mysqlnd php-json php-gd php-ldap php-curl php-zip php-mbstring php-xml php-bcmath php-gmp php-pear -y</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"6-phpipam\"><a href=\"#6-phpipam\" class=\"headerlink\" title=\"6. phpipam\"></a>6. phpipam</h1><h2 id=\"6-1-下载phpipam\"><a href=\"#6-1-下载phpipam\" class=\"headerlink\" title=\"6.1. 下载phpipam\"></a>6.1. 下载phpipam</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /tmp</span><br><span class=\"line\">wget -c https://github.com/phpipam/phpipam/releases/download/v1.7.3/phpipam-v1.7.3.tgz </span><br><span class=\"line\">tar -xzvf phpipam-v1.7.3.tgz</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">mv</span> phpipam /var/www/html/</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">chown</span> -R apache:apache /var/www/html/phpipam</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-2-配置phpipam\"><a href=\"#6-2-配置phpipam\" class=\"headerlink\" title=\"6.2. 配置phpipam\"></a>6.2. 配置phpipam</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> /var/www/html/phpipam/config.dist.php /var/www/html/phpipam/config.php</span><br><span class=\"line\">vim  /var/www/html/phpipam/config.php</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$db</span>[<span class=\"string\">&#x27;host&#x27;</span>] = <span class=\"string\">&#x27;虚拟机IP&#x27;</span>; // 使用虚拟机实际IP </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$db</span>[<span class=\"string\">&#x27;user&#x27;</span>] = <span class=\"string\">&#x27;phpipam&#x27;</span>;         // 专用用户 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$db</span>[<span class=\"string\">&#x27;pass&#x27;</span>] = <span class=\"string\">&#x27;geek&#x27;</span>; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$db</span>[<span class=\"string\">&#x27;name&#x27;</span>] = <span class=\"string\">&#x27;phpipam&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-3-配置-Cron-任务\"><a href=\"#6-3-配置-Cron-任务\" class=\"headerlink\" title=\"6.3. 配置 Cron 任务\"></a>6.3. 配置 Cron 任务</h2><p>用于扫描网络状态：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> crontab -e</span><br><span class=\"line\"></span><br><span class=\"line\">*/5 * * * * /usr/bin/php /var/www/html/phpipam/functions/scripts/pingCheck.php</span><br><span class=\"line\">*/5 * * * * /usr/bin/php /var/www/html/phpipam/functions/scripts/discoveryCheck.php</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"7-关闭SELinux和防火墙\"><a href=\"#7-关闭SELinux和防火墙\" class=\"headerlink\" title=\"7. 关闭SELinux和防火墙\"></a>7. 关闭SELinux和防火墙</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> SELINUX=disabled&gt;/etc/selinux/config</span><br><span class=\"line\"><span class=\"built_in\">echo</span> SELINUXTYPE=targeted&gt;&gt;/etc/selinux/config</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld</span><br><span class=\"line\">systemctl stop firewalld</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启虚拟机</span></span><br><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"8-访问phpipam开始安装\"><a href=\"#8-访问phpipam开始安装\" class=\"headerlink\" title=\"8. 访问phpipam开始安装\"></a>8. 访问phpipam开始安装</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://虚拟机IP/phpipam/</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"9-常见问题解决\"><a href=\"#9-常见问题解决\" class=\"headerlink\" title=\"9. 常见问题解决\"></a>9. 常见问题解决</h1><ul>\n<li><strong>PHP 扩展缺失</strong>：根据报错安装对应扩展（如 <code>php-pecl-zip</code>）。</li>\n<li><strong>文件权限问题</strong>：确保 <code>/var/www/html/phpipam</code> 属主为 <code>apache</code>。</li>\n<li><strong>数据库连接错误</strong>：检查数据库用户权限及密码。</li>\n<li><strong>页面空白</strong>：检查 PHP 错误日志 <code>/var/log/php-fpm/error.log</code>。</li>\n</ul>\n<p>完成以上步骤后，即可通过 Web 界面管理 IP 地址。如需 HTTPS，可使用 Let’s Encrypt 配置 SSL 证</p>\n"},{"title":"Uptime-Kuma","date":"2025-08-19T06:36:13.000Z","_content":"\n# Uptime Kuma 安装指南\n\n## 1. 简介\n\nUptime Kuma 是一款开源、免费且易于使用的自托管监控工具。它兼容多种平台，包括 Linux、Windows 10 (x64) 和 Windows Server。\n\nUptime Kuma 的仪表板简洁高效，功能强大，让监控服务正常运行时间变得前所未有的简单。\n\n## 2. Windows（Docker方式）\n\n### 2.1 环境准备\n\n- Windows 10 以上操作系统\n- [Docker Desktop](https://desktop.docker.com/win/main/amd64/Docker%20Desktop%20Installer.exe?utm_source=docker&utm_medium=webreferral&utm_campaign=dd-smartbutton&utm_location=module&_gl=1*1irokkm*_gcl_au*MTk2NTU1MjQ0NC4xNzU1NTc1NzU4*_ga*NTM4MzAyMTMyLjE3NTE0Mjg3ODg.*_ga_XJWPQMJYHQ*czE3NTU1ODM4OTAkbzEwJGcxJHQxNzU1NTg1OTUzJGo1MCRsMCRoMA..)\n- Uptime Kuma 版本：1.23.16\n\n### 2.2 开启 Hyper-V 虚拟化技术\n\n控制面板 → 程序和功能 → 启用或关闭 Windows 功能 → Hyper-V → 勾选 Hyper-V 工具和 Hyper-V 管理平台\n\n![](/img/kuma1.png)\n\n### 2.3 安装 Docker Desktop\n\n按照常规流程安装 Docker Desktop。\n\n### 2.4 拉取 Uptime Kuma 镜像\n\n![](/img/kuma2.png)\n\n### 2.5 运行 Uptime Kuma\n\n在终端中运行以下命令：\n\n```bash\n# 创建数据卷\ndocker volume create uptime-kuma\n\n# 启动容器\ndocker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma --network host louislam/uptime-kuma:1.23.16\n```\n\n### 2.6 访问使用\n\n```\nhttp://127.0.0.1:3001\n```\n\n## 3. Windows（NPM方式）\n\n### 3.1 环境准备\n\n- Windows 10 (x64), Windows Server 2012 R2 (x64) 或更高版本\n- [Git](https://git-scm.com/downloads/win)\n- [Node.js](https://nodejs.org/en/download/current/) 14 / 16 / 18 / 20.4\n- [npm](https://docs.npmjs.com/cli/) ≥ 7\n- [pm2](https://pm2.keymetrics.io/)\n- Uptime Kuma 版本：1.23.16\n\n### 3.2 安装 Node.js 20.19.4\n\n下载链接：https://nodejs.org/dist/v20.19.4/node-v20.19.4-x64.msi\n\n### 3.3 安装 Uptime Kuma\n\n```bash\n# 配置 npm 镜像源\nnpm config set registry https://registry.npmmirror.com\n\n# 克隆仓库\ngit clone https://github.com/louislam/uptime-kuma.git\n\n# 如果存在网络问题，可使用加速地址（加速节点参考 https://ghproxy.link/）\ngit clone https://ghfast.top/github.com/louislam/uptime-kuma.git\n\n# 安装依赖\ncd uptime-kuma\ngit checkout 1.23.16\nnpm run setup\n\n# 如果 npm run setup 下载前端文件较慢，可以修改 extra/download-dist.js 文件中的 const url\n# 修改为：https://ghfast.top/github.com/louislam/uptime-kuma/releases/download/1.23.16/dist.tar.gz\n# 保存后重新执行 npm run setup\n```\n\n### 3.4 配置 PM2\n\nPM2 主要用于进程管理和服务守护。\n\n```bash\n# 安装 PM2\nnpm install pm2 -g\npm2 install pm2-logrotate\n\n# 启动进程\npm2 start server/server.js --name uptime-kuma\n\n# 实时监控资源使用情况\npm2 monit\n\n# 配置开机自启\npm2 save && pm2 startup\n```\n\n### 3.5 访问使用\n\n```\nhttp://127.0.0.1:3001\n```\n\n## 4. CentOS 7（NPM方式）\n\n### 4.1 环境准备\n\n- CentOS Linux release 7.9.2009 (Core)\n- 内核版本：3.10.0-1160.119.1.el7.x86_64\n- [Git](https://git-scm.com/downloads/win)\n- [Node.js](https://nodejs.org/en/download/current/) 18 / 20.4\n- [npm](https://docs.npmjs.com/cli/) ≥ 7\n- [pm2](https://pm2.keymetrics.io/)\n- Uptime Kuma 版本：2.0.0-beta.2\n\n### 4.2 安装 Node.js\n\n由于 CentOS 7 默认的 glibc 版本较低，需要选择基于 glibc 2.17 构建的 Node.js 20。\n\n```bash\n# 下载 Node.js\ncd /opt\nwget -c https://unofficial-builds.nodejs.org/download/release/v20.12.2/node-v20.12.2-linux-x64-glibc-217.tar.xz\n\n# 安装 Node.js\ncd /usr/local\ntar -xvf /opt/node-v20.12.2-linux-x64-glibc-217.tar.xz\nmv node-v20.12.2-linux-x64-glibc-217 node-v20.12.2\n\n# 配置环境变量\ncat >> /etc/profile << 'EOF'\nexport NODE_HOME=/usr/local/node-v20.12.2\nexport PATH=$PATH:$NODE_HOME/bin\nEOF\n\n# 使环境变量生效\nsource /etc/profile\n\n# 配置 npm 镜像源\nnpm config set registry https://registry.npmmirror.com\n```\n\n### 4.3 安装 Uptime Kuma\n\n> **注意：**\n> - 安装脚本默认会将 git 分支切换回 main，需要修改 package.json 文件\n> - 建议将 dist.tar.gz 下载链接修改为国内加速源\n\n```bash\n# 克隆仓库\ngit clone https://github.com/louislam/uptime-kuma.git\n\n# 如果存在网络问题，可使用加速地址\ngit clone https://ghfast.top/github.com/louislam/uptime-kuma.git\ncd uptime-kuma\n\n# 切换到指定版本分支\ngit checkout release-2.0.0-beta.2\n\n# 修改 package.json 文件，避免安装脚本自动切换分支\nvim package.json\n```\n\n将 scripts 部分修改为：\n```json\n\"scripts\": {\n  \"setup\": \"npm ci --omit dev && npm run download-dist\"\n}\n```\n\n```bash\n# 配置 dist.tar.gz 下载链接为国内加速源\nvim extra/download-dist.js\n```\n\n修改为：\n```\nhttps://ghfast.top/github.com/louislam/uptime-kuma/releases/download/2.0.0-beta.2/dist.tar.gz\n```\n\n```bash\n# 执行安装脚本\nnpm run setup\n```\n\n### 4.4 配置 PM2\n\nPM2 主要用于进程管理和服务守护。\n\n```bash\n# 安装 PM2\nnpm install pm2 -g\npm2 install pm2-logrotate\n\n# 启动进程\npm2 start server/server.js --name uptime-kuma\n\n# 实时监控资源使用情况\npm2 monit\n\n# 配置开机自启\npm2 save && pm2 startup\n```\n\n### 4.5 访问使用\n\n```\nhttp://127.0.0.1:3001\n```\n\n## 5. PM2 命令清单\n\n以下是常用的 PM2 命令清单，适用于管理 Uptime Kuma 或其他 Node.js 应用：\n\n### 5.1 安装和基础操作\n\n```bash\n# 全局安装 PM2\nnpm install pm2 -g\n\n# 启动应用\npm2 start server.js --name uptime-kuma\n\n# 查看运行中的进程列表\npm2 list\npm2 status\n```\n\n### 5.2 进程管理\n\n```bash\n# 停止指定应用\npm2 stop uptime-kuma\n\n# 重启指定应用\npm2 restart uptime-kuma\n\n# 删除指定应用\npm2 delete uptime-kuma\n\n# 停止/重启/删除所有应用\npm2 stop all\npm2 restart all\npm2 delete all\n```\n\n### 5.3 日志管理\n\n```bash\n# 查看应用日志（实时输出）\npm2 logs uptime-kuma\n\n# 查看错误日志\npm2 logs uptime-kuma --err\n\n# 查看最近 100 行日志\npm2 logs uptime-kuma --lines 100\n```\n\n### 5.4 自动重启与开机自启\n\n```bash\n# 保存当前进程列表，开机自动恢复\npm2 save\n\n# 生成开机启动脚本\npm2 startup\n\n# 删除开机启动设置\npm2 unstartup\n```\n\n### 5.5 资源监控\n\n```bash\n# 实时监控 CPU/内存等资源使用情况\npm2 monit\n```","source":"_posts/Uptime-Kuma.md","raw":"---\ntitle: Uptime-Kuma\ndate: 2025-08-19 14:36:13\ntags: Uptime-Kuma\ncategories: Uptime-Kuma\n---\n\n# Uptime Kuma 安装指南\n\n## 1. 简介\n\nUptime Kuma 是一款开源、免费且易于使用的自托管监控工具。它兼容多种平台，包括 Linux、Windows 10 (x64) 和 Windows Server。\n\nUptime Kuma 的仪表板简洁高效，功能强大，让监控服务正常运行时间变得前所未有的简单。\n\n## 2. Windows（Docker方式）\n\n### 2.1 环境准备\n\n- Windows 10 以上操作系统\n- [Docker Desktop](https://desktop.docker.com/win/main/amd64/Docker%20Desktop%20Installer.exe?utm_source=docker&utm_medium=webreferral&utm_campaign=dd-smartbutton&utm_location=module&_gl=1*1irokkm*_gcl_au*MTk2NTU1MjQ0NC4xNzU1NTc1NzU4*_ga*NTM4MzAyMTMyLjE3NTE0Mjg3ODg.*_ga_XJWPQMJYHQ*czE3NTU1ODM4OTAkbzEwJGcxJHQxNzU1NTg1OTUzJGo1MCRsMCRoMA..)\n- Uptime Kuma 版本：1.23.16\n\n### 2.2 开启 Hyper-V 虚拟化技术\n\n控制面板 → 程序和功能 → 启用或关闭 Windows 功能 → Hyper-V → 勾选 Hyper-V 工具和 Hyper-V 管理平台\n\n![](/img/kuma1.png)\n\n### 2.3 安装 Docker Desktop\n\n按照常规流程安装 Docker Desktop。\n\n### 2.4 拉取 Uptime Kuma 镜像\n\n![](/img/kuma2.png)\n\n### 2.5 运行 Uptime Kuma\n\n在终端中运行以下命令：\n\n```bash\n# 创建数据卷\ndocker volume create uptime-kuma\n\n# 启动容器\ndocker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma --network host louislam/uptime-kuma:1.23.16\n```\n\n### 2.6 访问使用\n\n```\nhttp://127.0.0.1:3001\n```\n\n## 3. Windows（NPM方式）\n\n### 3.1 环境准备\n\n- Windows 10 (x64), Windows Server 2012 R2 (x64) 或更高版本\n- [Git](https://git-scm.com/downloads/win)\n- [Node.js](https://nodejs.org/en/download/current/) 14 / 16 / 18 / 20.4\n- [npm](https://docs.npmjs.com/cli/) ≥ 7\n- [pm2](https://pm2.keymetrics.io/)\n- Uptime Kuma 版本：1.23.16\n\n### 3.2 安装 Node.js 20.19.4\n\n下载链接：https://nodejs.org/dist/v20.19.4/node-v20.19.4-x64.msi\n\n### 3.3 安装 Uptime Kuma\n\n```bash\n# 配置 npm 镜像源\nnpm config set registry https://registry.npmmirror.com\n\n# 克隆仓库\ngit clone https://github.com/louislam/uptime-kuma.git\n\n# 如果存在网络问题，可使用加速地址（加速节点参考 https://ghproxy.link/）\ngit clone https://ghfast.top/github.com/louislam/uptime-kuma.git\n\n# 安装依赖\ncd uptime-kuma\ngit checkout 1.23.16\nnpm run setup\n\n# 如果 npm run setup 下载前端文件较慢，可以修改 extra/download-dist.js 文件中的 const url\n# 修改为：https://ghfast.top/github.com/louislam/uptime-kuma/releases/download/1.23.16/dist.tar.gz\n# 保存后重新执行 npm run setup\n```\n\n### 3.4 配置 PM2\n\nPM2 主要用于进程管理和服务守护。\n\n```bash\n# 安装 PM2\nnpm install pm2 -g\npm2 install pm2-logrotate\n\n# 启动进程\npm2 start server/server.js --name uptime-kuma\n\n# 实时监控资源使用情况\npm2 monit\n\n# 配置开机自启\npm2 save && pm2 startup\n```\n\n### 3.5 访问使用\n\n```\nhttp://127.0.0.1:3001\n```\n\n## 4. CentOS 7（NPM方式）\n\n### 4.1 环境准备\n\n- CentOS Linux release 7.9.2009 (Core)\n- 内核版本：3.10.0-1160.119.1.el7.x86_64\n- [Git](https://git-scm.com/downloads/win)\n- [Node.js](https://nodejs.org/en/download/current/) 18 / 20.4\n- [npm](https://docs.npmjs.com/cli/) ≥ 7\n- [pm2](https://pm2.keymetrics.io/)\n- Uptime Kuma 版本：2.0.0-beta.2\n\n### 4.2 安装 Node.js\n\n由于 CentOS 7 默认的 glibc 版本较低，需要选择基于 glibc 2.17 构建的 Node.js 20。\n\n```bash\n# 下载 Node.js\ncd /opt\nwget -c https://unofficial-builds.nodejs.org/download/release/v20.12.2/node-v20.12.2-linux-x64-glibc-217.tar.xz\n\n# 安装 Node.js\ncd /usr/local\ntar -xvf /opt/node-v20.12.2-linux-x64-glibc-217.tar.xz\nmv node-v20.12.2-linux-x64-glibc-217 node-v20.12.2\n\n# 配置环境变量\ncat >> /etc/profile << 'EOF'\nexport NODE_HOME=/usr/local/node-v20.12.2\nexport PATH=$PATH:$NODE_HOME/bin\nEOF\n\n# 使环境变量生效\nsource /etc/profile\n\n# 配置 npm 镜像源\nnpm config set registry https://registry.npmmirror.com\n```\n\n### 4.3 安装 Uptime Kuma\n\n> **注意：**\n> - 安装脚本默认会将 git 分支切换回 main，需要修改 package.json 文件\n> - 建议将 dist.tar.gz 下载链接修改为国内加速源\n\n```bash\n# 克隆仓库\ngit clone https://github.com/louislam/uptime-kuma.git\n\n# 如果存在网络问题，可使用加速地址\ngit clone https://ghfast.top/github.com/louislam/uptime-kuma.git\ncd uptime-kuma\n\n# 切换到指定版本分支\ngit checkout release-2.0.0-beta.2\n\n# 修改 package.json 文件，避免安装脚本自动切换分支\nvim package.json\n```\n\n将 scripts 部分修改为：\n```json\n\"scripts\": {\n  \"setup\": \"npm ci --omit dev && npm run download-dist\"\n}\n```\n\n```bash\n# 配置 dist.tar.gz 下载链接为国内加速源\nvim extra/download-dist.js\n```\n\n修改为：\n```\nhttps://ghfast.top/github.com/louislam/uptime-kuma/releases/download/2.0.0-beta.2/dist.tar.gz\n```\n\n```bash\n# 执行安装脚本\nnpm run setup\n```\n\n### 4.4 配置 PM2\n\nPM2 主要用于进程管理和服务守护。\n\n```bash\n# 安装 PM2\nnpm install pm2 -g\npm2 install pm2-logrotate\n\n# 启动进程\npm2 start server/server.js --name uptime-kuma\n\n# 实时监控资源使用情况\npm2 monit\n\n# 配置开机自启\npm2 save && pm2 startup\n```\n\n### 4.5 访问使用\n\n```\nhttp://127.0.0.1:3001\n```\n\n## 5. PM2 命令清单\n\n以下是常用的 PM2 命令清单，适用于管理 Uptime Kuma 或其他 Node.js 应用：\n\n### 5.1 安装和基础操作\n\n```bash\n# 全局安装 PM2\nnpm install pm2 -g\n\n# 启动应用\npm2 start server.js --name uptime-kuma\n\n# 查看运行中的进程列表\npm2 list\npm2 status\n```\n\n### 5.2 进程管理\n\n```bash\n# 停止指定应用\npm2 stop uptime-kuma\n\n# 重启指定应用\npm2 restart uptime-kuma\n\n# 删除指定应用\npm2 delete uptime-kuma\n\n# 停止/重启/删除所有应用\npm2 stop all\npm2 restart all\npm2 delete all\n```\n\n### 5.3 日志管理\n\n```bash\n# 查看应用日志（实时输出）\npm2 logs uptime-kuma\n\n# 查看错误日志\npm2 logs uptime-kuma --err\n\n# 查看最近 100 行日志\npm2 logs uptime-kuma --lines 100\n```\n\n### 5.4 自动重启与开机自启\n\n```bash\n# 保存当前进程列表，开机自动恢复\npm2 save\n\n# 生成开机启动脚本\npm2 startup\n\n# 删除开机启动设置\npm2 unstartup\n```\n\n### 5.5 资源监控\n\n```bash\n# 实时监控 CPU/内存等资源使用情况\npm2 monit\n```","slug":"Uptime-Kuma","published":1,"updated":"2025-10-02T08:03:52.459Z","_id":"cmg94h9ek0005r8j8a35qcp15","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"Uptime-Kuma-安装指南\"><a href=\"#Uptime-Kuma-安装指南\" class=\"headerlink\" title=\"Uptime Kuma 安装指南\"></a>Uptime Kuma 安装指南</h1><h2 id=\"1-简介\"><a href=\"#1-简介\" class=\"headerlink\" title=\"1. 简介\"></a>1. 简介</h2><p>Uptime Kuma 是一款开源、免费且易于使用的自托管监控工具。它兼容多种平台，包括 Linux、Windows 10 (x64) 和 Windows Server。</p>\n<p>Uptime Kuma 的仪表板简洁高效，功能强大，让监控服务正常运行时间变得前所未有的简单。</p>\n<h2 id=\"2-Windows（Docker方式）\"><a href=\"#2-Windows（Docker方式）\" class=\"headerlink\" title=\"2. Windows（Docker方式）\"></a>2. Windows（Docker方式）</h2><h3 id=\"2-1-环境准备\"><a href=\"#2-1-环境准备\" class=\"headerlink\" title=\"2.1 环境准备\"></a>2.1 环境准备</h3><ul>\n<li>Windows 10 以上操作系统</li>\n<li><a href=\"https://desktop.docker.com/win/main/amd64/Docker%20Desktop%20Installer.exe?utm_source=docker&utm_medium=webreferral&utm_campaign=dd-smartbutton&utm_location=module&_gl=1*1irokkm*_gcl_au*MTk2NTU1MjQ0NC4xNzU1NTc1NzU4*_ga*NTM4MzAyMTMyLjE3NTE0Mjg3ODg.*_ga_XJWPQMJYHQ*czE3NTU1ODM4OTAkbzEwJGcxJHQxNzU1NTg1OTUzJGo1MCRsMCRoMA..\">Docker Desktop</a></li>\n<li>Uptime Kuma 版本：1.23.16</li>\n</ul>\n<h3 id=\"2-2-开启-Hyper-V-虚拟化技术\"><a href=\"#2-2-开启-Hyper-V-虚拟化技术\" class=\"headerlink\" title=\"2.2 开启 Hyper-V 虚拟化技术\"></a>2.2 开启 Hyper-V 虚拟化技术</h3><p>控制面板 → 程序和功能 → 启用或关闭 Windows 功能 → Hyper-V → 勾选 Hyper-V 工具和 Hyper-V 管理平台</p>\n<p><img src=\"/img/kuma1.png\"></p>\n<h3 id=\"2-3-安装-Docker-Desktop\"><a href=\"#2-3-安装-Docker-Desktop\" class=\"headerlink\" title=\"2.3 安装 Docker Desktop\"></a>2.3 安装 Docker Desktop</h3><p>按照常规流程安装 Docker Desktop。</p>\n<h3 id=\"2-4-拉取-Uptime-Kuma-镜像\"><a href=\"#2-4-拉取-Uptime-Kuma-镜像\" class=\"headerlink\" title=\"2.4 拉取 Uptime Kuma 镜像\"></a>2.4 拉取 Uptime Kuma 镜像</h3><p><img src=\"/img/kuma2.png\"></p>\n<h3 id=\"2-5-运行-Uptime-Kuma\"><a href=\"#2-5-运行-Uptime-Kuma\" class=\"headerlink\" title=\"2.5 运行 Uptime Kuma\"></a>2.5 运行 Uptime Kuma</h3><p>在终端中运行以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建数据卷</span></span><br><span class=\"line\">docker volume create uptime-kuma</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动容器</span></span><br><span class=\"line\">docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma --network host louislam/uptime-kuma:1.23.16</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-6-访问使用\"><a href=\"#2-6-访问使用\" class=\"headerlink\" title=\"2.6 访问使用\"></a>2.6 访问使用</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1:3001</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-Windows（NPM方式）\"><a href=\"#3-Windows（NPM方式）\" class=\"headerlink\" title=\"3. Windows（NPM方式）\"></a>3. Windows（NPM方式）</h2><h3 id=\"3-1-环境准备\"><a href=\"#3-1-环境准备\" class=\"headerlink\" title=\"3.1 环境准备\"></a>3.1 环境准备</h3><ul>\n<li>Windows 10 (x64), Windows Server 2012 R2 (x64) 或更高版本</li>\n<li><a href=\"https://git-scm.com/downloads/win\">Git</a></li>\n<li><a href=\"https://nodejs.org/en/download/current/\">Node.js</a> 14 &#x2F; 16 &#x2F; 18 &#x2F; 20.4</li>\n<li><a href=\"https://docs.npmjs.com/cli/\">npm</a> ≥ 7</li>\n<li><a href=\"https://pm2.keymetrics.io/\">pm2</a></li>\n<li>Uptime Kuma 版本：1.23.16</li>\n</ul>\n<h3 id=\"3-2-安装-Node-js-20-19-4\"><a href=\"#3-2-安装-Node-js-20-19-4\" class=\"headerlink\" title=\"3.2 安装 Node.js 20.19.4\"></a>3.2 安装 Node.js 20.19.4</h3><p>下载链接：<a href=\"https://nodejs.org/dist/v20.19.4/node-v20.19.4-x64.msi\">https://nodejs.org/dist/v20.19.4/node-v20.19.4-x64.msi</a></p>\n<h3 id=\"3-3-安装-Uptime-Kuma\"><a href=\"#3-3-安装-Uptime-Kuma\" class=\"headerlink\" title=\"3.3 安装 Uptime Kuma\"></a>3.3 安装 Uptime Kuma</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置 npm 镜像源</span></span><br><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npmmirror.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 克隆仓库</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/louislam/uptime-kuma.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果存在网络问题，可使用加速地址（加速节点参考 https://ghproxy.link/）</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://ghfast.top/github.com/louislam/uptime-kuma.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装依赖</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> uptime-kuma</span><br><span class=\"line\">git checkout 1.23.16</span><br><span class=\"line\">npm run setup</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果 npm run setup 下载前端文件较慢，可以修改 extra/download-dist.js 文件中的 const url</span></span><br><span class=\"line\"><span class=\"comment\"># 修改为：https://ghfast.top/github.com/louislam/uptime-kuma/releases/download/1.23.16/dist.tar.gz</span></span><br><span class=\"line\"><span class=\"comment\"># 保存后重新执行 npm run setup</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-4-配置-PM2\"><a href=\"#3-4-配置-PM2\" class=\"headerlink\" title=\"3.4 配置 PM2\"></a>3.4 配置 PM2</h3><p>PM2 主要用于进程管理和服务守护。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 PM2</span></span><br><span class=\"line\">npm install pm2 -g</span><br><span class=\"line\">pm2 install pm2-logrotate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动进程</span></span><br><span class=\"line\">pm2 start server/server.js --name uptime-kuma</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 实时监控资源使用情况</span></span><br><span class=\"line\">pm2 monit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置开机自启</span></span><br><span class=\"line\">pm2 save &amp;&amp; pm2 startup</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-5-访问使用\"><a href=\"#3-5-访问使用\" class=\"headerlink\" title=\"3.5 访问使用\"></a>3.5 访问使用</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1:3001</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-CentOS-7（NPM方式）\"><a href=\"#4-CentOS-7（NPM方式）\" class=\"headerlink\" title=\"4. CentOS 7（NPM方式）\"></a>4. CentOS 7（NPM方式）</h2><h3 id=\"4-1-环境准备\"><a href=\"#4-1-环境准备\" class=\"headerlink\" title=\"4.1 环境准备\"></a>4.1 环境准备</h3><ul>\n<li>CentOS Linux release 7.9.2009 (Core)</li>\n<li>内核版本：3.10.0-1160.119.1.el7.x86_64</li>\n<li><a href=\"https://git-scm.com/downloads/win\">Git</a></li>\n<li><a href=\"https://nodejs.org/en/download/current/\">Node.js</a> 18 &#x2F; 20.4</li>\n<li><a href=\"https://docs.npmjs.com/cli/\">npm</a> ≥ 7</li>\n<li><a href=\"https://pm2.keymetrics.io/\">pm2</a></li>\n<li>Uptime Kuma 版本：2.0.0-beta.2</li>\n</ul>\n<h3 id=\"4-2-安装-Node-js\"><a href=\"#4-2-安装-Node-js\" class=\"headerlink\" title=\"4.2 安装 Node.js\"></a>4.2 安装 Node.js</h3><p>由于 CentOS 7 默认的 glibc 版本较低，需要选择基于 glibc 2.17 构建的 Node.js 20。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载 Node.js</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /opt</span><br><span class=\"line\">wget -c https://unofficial-builds.nodejs.org/download/release/v20.12.2/node-v20.12.2-linux-x64-glibc-217.tar.xz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装 Node.js</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/local</span><br><span class=\"line\">tar -xvf /opt/node-v20.12.2-linux-x64-glibc-217.tar.xz</span><br><span class=\"line\"><span class=\"built_in\">mv</span> node-v20.12.2-linux-x64-glibc-217 node-v20.12.2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置环境变量</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> &gt;&gt; /etc/profile &lt;&lt; <span class=\"string\">&#x27;EOF&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> NODE_HOME=/usr/local/node-v20.12.2</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$NODE_HOME</span>/bin</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使环境变量生效</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置 npm 镜像源</span></span><br><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-安装-Uptime-Kuma\"><a href=\"#4-3-安装-Uptime-Kuma\" class=\"headerlink\" title=\"4.3 安装 Uptime Kuma\"></a>4.3 安装 Uptime Kuma</h3><blockquote>\n<p><strong>注意：</strong></p>\n<ul>\n<li>安装脚本默认会将 git 分支切换回 main，需要修改 package.json 文件</li>\n<li>建议将 dist.tar.gz 下载链接修改为国内加速源</li>\n</ul>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 克隆仓库</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/louislam/uptime-kuma.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果存在网络问题，可使用加速地址</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://ghfast.top/github.com/louislam/uptime-kuma.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> uptime-kuma</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切换到指定版本分支</span></span><br><span class=\"line\">git checkout release-2.0.0-beta.2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改 package.json 文件，避免安装脚本自动切换分支</span></span><br><span class=\"line\">vim package.json</span><br></pre></td></tr></table></figure>\n\n<p>将 scripts 部分修改为：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;setup&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;npm ci --omit dev &amp;&amp; npm run download-dist&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置 dist.tar.gz 下载链接为国内加速源</span></span><br><span class=\"line\">vim extra/download-dist.js</span><br></pre></td></tr></table></figure>\n\n<p>修改为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://ghfast.top/github.com/louislam/uptime-kuma/releases/download/2.0.0-beta.2/dist.tar.gz</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 执行安装脚本</span></span><br><span class=\"line\">npm run setup</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-4-配置-PM2\"><a href=\"#4-4-配置-PM2\" class=\"headerlink\" title=\"4.4 配置 PM2\"></a>4.4 配置 PM2</h3><p>PM2 主要用于进程管理和服务守护。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 PM2</span></span><br><span class=\"line\">npm install pm2 -g</span><br><span class=\"line\">pm2 install pm2-logrotate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动进程</span></span><br><span class=\"line\">pm2 start server/server.js --name uptime-kuma</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 实时监控资源使用情况</span></span><br><span class=\"line\">pm2 monit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置开机自启</span></span><br><span class=\"line\">pm2 save &amp;&amp; pm2 startup</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-5-访问使用\"><a href=\"#4-5-访问使用\" class=\"headerlink\" title=\"4.5 访问使用\"></a>4.5 访问使用</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1:3001</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-PM2-命令清单\"><a href=\"#5-PM2-命令清单\" class=\"headerlink\" title=\"5. PM2 命令清单\"></a>5. PM2 命令清单</h2><p>以下是常用的 PM2 命令清单，适用于管理 Uptime Kuma 或其他 Node.js 应用：</p>\n<h3 id=\"5-1-安装和基础操作\"><a href=\"#5-1-安装和基础操作\" class=\"headerlink\" title=\"5.1 安装和基础操作\"></a>5.1 安装和基础操作</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 全局安装 PM2</span></span><br><span class=\"line\">npm install pm2 -g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动应用</span></span><br><span class=\"line\">pm2 start server.js --name uptime-kuma</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看运行中的进程列表</span></span><br><span class=\"line\">pm2 list</span><br><span class=\"line\">pm2 status</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-2-进程管理\"><a href=\"#5-2-进程管理\" class=\"headerlink\" title=\"5.2 进程管理\"></a>5.2 进程管理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 停止指定应用</span></span><br><span class=\"line\">pm2 stop uptime-kuma</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启指定应用</span></span><br><span class=\"line\">pm2 restart uptime-kuma</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除指定应用</span></span><br><span class=\"line\">pm2 delete uptime-kuma</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 停止/重启/删除所有应用</span></span><br><span class=\"line\">pm2 stop all</span><br><span class=\"line\">pm2 restart all</span><br><span class=\"line\">pm2 delete all</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-3-日志管理\"><a href=\"#5-3-日志管理\" class=\"headerlink\" title=\"5.3 日志管理\"></a>5.3 日志管理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看应用日志（实时输出）</span></span><br><span class=\"line\">pm2 logs uptime-kuma</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看错误日志</span></span><br><span class=\"line\">pm2 logs uptime-kuma --err</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看最近 100 行日志</span></span><br><span class=\"line\">pm2 logs uptime-kuma --lines 100</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-4-自动重启与开机自启\"><a href=\"#5-4-自动重启与开机自启\" class=\"headerlink\" title=\"5.4 自动重启与开机自启\"></a>5.4 自动重启与开机自启</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 保存当前进程列表，开机自动恢复</span></span><br><span class=\"line\">pm2 save</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成开机启动脚本</span></span><br><span class=\"line\">pm2 startup</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除开机启动设置</span></span><br><span class=\"line\">pm2 unstartup</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-5-资源监控\"><a href=\"#5-5-资源监控\" class=\"headerlink\" title=\"5.5 资源监控\"></a>5.5 资源监控</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 实时监控 CPU/内存等资源使用情况</span></span><br><span class=\"line\">pm2 monit</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h1 id=\"Uptime-Kuma-安装指南\"><a href=\"#Uptime-Kuma-安装指南\" class=\"headerlink\" title=\"Uptime Kuma 安装指南\"></a>Uptime Kuma 安装指南</h1><h2 id=\"1-简介\"><a href=\"#1-简介\" class=\"headerlink\" title=\"1. 简介\"></a>1. 简介</h2><p>Uptime Kuma 是一款开源、免费且易于使用的自托管监控工具。它兼容多种平台，包括 Linux、Windows 10 (x64) 和 Windows Server。</p>\n<p>Uptime Kuma 的仪表板简洁高效，功能强大，让监控服务正常运行时间变得前所未有的简单。</p>\n<h2 id=\"2-Windows（Docker方式）\"><a href=\"#2-Windows（Docker方式）\" class=\"headerlink\" title=\"2. Windows（Docker方式）\"></a>2. Windows（Docker方式）</h2><h3 id=\"2-1-环境准备\"><a href=\"#2-1-环境准备\" class=\"headerlink\" title=\"2.1 环境准备\"></a>2.1 环境准备</h3><ul>\n<li>Windows 10 以上操作系统</li>\n<li><a href=\"https://desktop.docker.com/win/main/amd64/Docker%20Desktop%20Installer.exe?utm_source=docker&utm_medium=webreferral&utm_campaign=dd-smartbutton&utm_location=module&_gl=1*1irokkm*_gcl_au*MTk2NTU1MjQ0NC4xNzU1NTc1NzU4*_ga*NTM4MzAyMTMyLjE3NTE0Mjg3ODg.*_ga_XJWPQMJYHQ*czE3NTU1ODM4OTAkbzEwJGcxJHQxNzU1NTg1OTUzJGo1MCRsMCRoMA..\">Docker Desktop</a></li>\n<li>Uptime Kuma 版本：1.23.16</li>\n</ul>\n<h3 id=\"2-2-开启-Hyper-V-虚拟化技术\"><a href=\"#2-2-开启-Hyper-V-虚拟化技术\" class=\"headerlink\" title=\"2.2 开启 Hyper-V 虚拟化技术\"></a>2.2 开启 Hyper-V 虚拟化技术</h3><p>控制面板 → 程序和功能 → 启用或关闭 Windows 功能 → Hyper-V → 勾选 Hyper-V 工具和 Hyper-V 管理平台</p>\n<p><img src=\"/img/kuma1.png\"></p>\n<h3 id=\"2-3-安装-Docker-Desktop\"><a href=\"#2-3-安装-Docker-Desktop\" class=\"headerlink\" title=\"2.3 安装 Docker Desktop\"></a>2.3 安装 Docker Desktop</h3><p>按照常规流程安装 Docker Desktop。</p>\n<h3 id=\"2-4-拉取-Uptime-Kuma-镜像\"><a href=\"#2-4-拉取-Uptime-Kuma-镜像\" class=\"headerlink\" title=\"2.4 拉取 Uptime Kuma 镜像\"></a>2.4 拉取 Uptime Kuma 镜像</h3><p><img src=\"/img/kuma2.png\"></p>\n<h3 id=\"2-5-运行-Uptime-Kuma\"><a href=\"#2-5-运行-Uptime-Kuma\" class=\"headerlink\" title=\"2.5 运行 Uptime Kuma\"></a>2.5 运行 Uptime Kuma</h3><p>在终端中运行以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建数据卷</span></span><br><span class=\"line\">docker volume create uptime-kuma</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动容器</span></span><br><span class=\"line\">docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma --network host louislam/uptime-kuma:1.23.16</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-6-访问使用\"><a href=\"#2-6-访问使用\" class=\"headerlink\" title=\"2.6 访问使用\"></a>2.6 访问使用</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1:3001</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-Windows（NPM方式）\"><a href=\"#3-Windows（NPM方式）\" class=\"headerlink\" title=\"3. Windows（NPM方式）\"></a>3. Windows（NPM方式）</h2><h3 id=\"3-1-环境准备\"><a href=\"#3-1-环境准备\" class=\"headerlink\" title=\"3.1 环境准备\"></a>3.1 环境准备</h3><ul>\n<li>Windows 10 (x64), Windows Server 2012 R2 (x64) 或更高版本</li>\n<li><a href=\"https://git-scm.com/downloads/win\">Git</a></li>\n<li><a href=\"https://nodejs.org/en/download/current/\">Node.js</a> 14 &#x2F; 16 &#x2F; 18 &#x2F; 20.4</li>\n<li><a href=\"https://docs.npmjs.com/cli/\">npm</a> ≥ 7</li>\n<li><a href=\"https://pm2.keymetrics.io/\">pm2</a></li>\n<li>Uptime Kuma 版本：1.23.16</li>\n</ul>\n<h3 id=\"3-2-安装-Node-js-20-19-4\"><a href=\"#3-2-安装-Node-js-20-19-4\" class=\"headerlink\" title=\"3.2 安装 Node.js 20.19.4\"></a>3.2 安装 Node.js 20.19.4</h3><p>下载链接：<a href=\"https://nodejs.org/dist/v20.19.4/node-v20.19.4-x64.msi\">https://nodejs.org/dist/v20.19.4/node-v20.19.4-x64.msi</a></p>\n<h3 id=\"3-3-安装-Uptime-Kuma\"><a href=\"#3-3-安装-Uptime-Kuma\" class=\"headerlink\" title=\"3.3 安装 Uptime Kuma\"></a>3.3 安装 Uptime Kuma</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置 npm 镜像源</span></span><br><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npmmirror.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 克隆仓库</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/louislam/uptime-kuma.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果存在网络问题，可使用加速地址（加速节点参考 https://ghproxy.link/）</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://ghfast.top/github.com/louislam/uptime-kuma.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装依赖</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> uptime-kuma</span><br><span class=\"line\">git checkout 1.23.16</span><br><span class=\"line\">npm run setup</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果 npm run setup 下载前端文件较慢，可以修改 extra/download-dist.js 文件中的 const url</span></span><br><span class=\"line\"><span class=\"comment\"># 修改为：https://ghfast.top/github.com/louislam/uptime-kuma/releases/download/1.23.16/dist.tar.gz</span></span><br><span class=\"line\"><span class=\"comment\"># 保存后重新执行 npm run setup</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-4-配置-PM2\"><a href=\"#3-4-配置-PM2\" class=\"headerlink\" title=\"3.4 配置 PM2\"></a>3.4 配置 PM2</h3><p>PM2 主要用于进程管理和服务守护。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 PM2</span></span><br><span class=\"line\">npm install pm2 -g</span><br><span class=\"line\">pm2 install pm2-logrotate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动进程</span></span><br><span class=\"line\">pm2 start server/server.js --name uptime-kuma</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 实时监控资源使用情况</span></span><br><span class=\"line\">pm2 monit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置开机自启</span></span><br><span class=\"line\">pm2 save &amp;&amp; pm2 startup</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-5-访问使用\"><a href=\"#3-5-访问使用\" class=\"headerlink\" title=\"3.5 访问使用\"></a>3.5 访问使用</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1:3001</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-CentOS-7（NPM方式）\"><a href=\"#4-CentOS-7（NPM方式）\" class=\"headerlink\" title=\"4. CentOS 7（NPM方式）\"></a>4. CentOS 7（NPM方式）</h2><h3 id=\"4-1-环境准备\"><a href=\"#4-1-环境准备\" class=\"headerlink\" title=\"4.1 环境准备\"></a>4.1 环境准备</h3><ul>\n<li>CentOS Linux release 7.9.2009 (Core)</li>\n<li>内核版本：3.10.0-1160.119.1.el7.x86_64</li>\n<li><a href=\"https://git-scm.com/downloads/win\">Git</a></li>\n<li><a href=\"https://nodejs.org/en/download/current/\">Node.js</a> 18 &#x2F; 20.4</li>\n<li><a href=\"https://docs.npmjs.com/cli/\">npm</a> ≥ 7</li>\n<li><a href=\"https://pm2.keymetrics.io/\">pm2</a></li>\n<li>Uptime Kuma 版本：2.0.0-beta.2</li>\n</ul>\n<h3 id=\"4-2-安装-Node-js\"><a href=\"#4-2-安装-Node-js\" class=\"headerlink\" title=\"4.2 安装 Node.js\"></a>4.2 安装 Node.js</h3><p>由于 CentOS 7 默认的 glibc 版本较低，需要选择基于 glibc 2.17 构建的 Node.js 20。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载 Node.js</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /opt</span><br><span class=\"line\">wget -c https://unofficial-builds.nodejs.org/download/release/v20.12.2/node-v20.12.2-linux-x64-glibc-217.tar.xz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装 Node.js</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/local</span><br><span class=\"line\">tar -xvf /opt/node-v20.12.2-linux-x64-glibc-217.tar.xz</span><br><span class=\"line\"><span class=\"built_in\">mv</span> node-v20.12.2-linux-x64-glibc-217 node-v20.12.2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置环境变量</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> &gt;&gt; /etc/profile &lt;&lt; <span class=\"string\">&#x27;EOF&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> NODE_HOME=/usr/local/node-v20.12.2</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$NODE_HOME</span>/bin</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使环境变量生效</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置 npm 镜像源</span></span><br><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-安装-Uptime-Kuma\"><a href=\"#4-3-安装-Uptime-Kuma\" class=\"headerlink\" title=\"4.3 安装 Uptime Kuma\"></a>4.3 安装 Uptime Kuma</h3><blockquote>\n<p><strong>注意：</strong></p>\n<ul>\n<li>安装脚本默认会将 git 分支切换回 main，需要修改 package.json 文件</li>\n<li>建议将 dist.tar.gz 下载链接修改为国内加速源</li>\n</ul>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 克隆仓库</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/louislam/uptime-kuma.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果存在网络问题，可使用加速地址</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://ghfast.top/github.com/louislam/uptime-kuma.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> uptime-kuma</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切换到指定版本分支</span></span><br><span class=\"line\">git checkout release-2.0.0-beta.2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改 package.json 文件，避免安装脚本自动切换分支</span></span><br><span class=\"line\">vim package.json</span><br></pre></td></tr></table></figure>\n\n<p>将 scripts 部分修改为：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;setup&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;npm ci --omit dev &amp;&amp; npm run download-dist&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置 dist.tar.gz 下载链接为国内加速源</span></span><br><span class=\"line\">vim extra/download-dist.js</span><br></pre></td></tr></table></figure>\n\n<p>修改为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://ghfast.top/github.com/louislam/uptime-kuma/releases/download/2.0.0-beta.2/dist.tar.gz</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 执行安装脚本</span></span><br><span class=\"line\">npm run setup</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-4-配置-PM2\"><a href=\"#4-4-配置-PM2\" class=\"headerlink\" title=\"4.4 配置 PM2\"></a>4.4 配置 PM2</h3><p>PM2 主要用于进程管理和服务守护。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 PM2</span></span><br><span class=\"line\">npm install pm2 -g</span><br><span class=\"line\">pm2 install pm2-logrotate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动进程</span></span><br><span class=\"line\">pm2 start server/server.js --name uptime-kuma</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 实时监控资源使用情况</span></span><br><span class=\"line\">pm2 monit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置开机自启</span></span><br><span class=\"line\">pm2 save &amp;&amp; pm2 startup</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-5-访问使用\"><a href=\"#4-5-访问使用\" class=\"headerlink\" title=\"4.5 访问使用\"></a>4.5 访问使用</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1:3001</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-PM2-命令清单\"><a href=\"#5-PM2-命令清单\" class=\"headerlink\" title=\"5. PM2 命令清单\"></a>5. PM2 命令清单</h2><p>以下是常用的 PM2 命令清单，适用于管理 Uptime Kuma 或其他 Node.js 应用：</p>\n<h3 id=\"5-1-安装和基础操作\"><a href=\"#5-1-安装和基础操作\" class=\"headerlink\" title=\"5.1 安装和基础操作\"></a>5.1 安装和基础操作</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 全局安装 PM2</span></span><br><span class=\"line\">npm install pm2 -g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动应用</span></span><br><span class=\"line\">pm2 start server.js --name uptime-kuma</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看运行中的进程列表</span></span><br><span class=\"line\">pm2 list</span><br><span class=\"line\">pm2 status</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-2-进程管理\"><a href=\"#5-2-进程管理\" class=\"headerlink\" title=\"5.2 进程管理\"></a>5.2 进程管理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 停止指定应用</span></span><br><span class=\"line\">pm2 stop uptime-kuma</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启指定应用</span></span><br><span class=\"line\">pm2 restart uptime-kuma</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除指定应用</span></span><br><span class=\"line\">pm2 delete uptime-kuma</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 停止/重启/删除所有应用</span></span><br><span class=\"line\">pm2 stop all</span><br><span class=\"line\">pm2 restart all</span><br><span class=\"line\">pm2 delete all</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-3-日志管理\"><a href=\"#5-3-日志管理\" class=\"headerlink\" title=\"5.3 日志管理\"></a>5.3 日志管理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看应用日志（实时输出）</span></span><br><span class=\"line\">pm2 logs uptime-kuma</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看错误日志</span></span><br><span class=\"line\">pm2 logs uptime-kuma --err</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看最近 100 行日志</span></span><br><span class=\"line\">pm2 logs uptime-kuma --lines 100</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-4-自动重启与开机自启\"><a href=\"#5-4-自动重启与开机自启\" class=\"headerlink\" title=\"5.4 自动重启与开机自启\"></a>5.4 自动重启与开机自启</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 保存当前进程列表，开机自动恢复</span></span><br><span class=\"line\">pm2 save</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成开机启动脚本</span></span><br><span class=\"line\">pm2 startup</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除开机启动设置</span></span><br><span class=\"line\">pm2 unstartup</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-5-资源监控\"><a href=\"#5-5-资源监控\" class=\"headerlink\" title=\"5.5 资源监控\"></a>5.5 资源监控</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 实时监控 CPU/内存等资源使用情况</span></span><br><span class=\"line\">pm2 monit</span><br></pre></td></tr></table></figure>"},{"title":"KVM","date":"2025-03-12T03:09:50.000Z","_content":"# 1. Archlinux使用KVM\n\n## 1.1. 安装KVM包\n\n安装运行KVM所需的所有软件包\n\n```bash\nsudo pacman -Syy\n\nsudo pacman -S qemu virt-manager virt-viewer dnsmasq vde2 bridge-utils openbsd-netcat dmidecode\n```\n\n## 1.2. 安装ebtbles和iptables\n\n```bash\nsudo pacman -S ebtables iptables\n```\n\n## 1.3. 启动KVM libvirt服务\n\n```bash\nsystemctl enable libvirtd.service\n\nsystemctl start libvirtd.service\n\nsystemctl status libvirtd.service\n```\n\n## 1.4. 设置网桥\n\n安装后会生成一个默认网桥配置文件/etc/libvirt/qemu/networks/default.xml，但是默认处于不活跃状态！需要手动启用！\n\n```bash\n# 定义网桥\nsudo virsh net-define /etc/libvirt/qemu/networks/default.xml\n\n# 启动网桥\nsudo virsh net-start default\n\n# 设置网桥开机启动\nsudo virsh net-autostart default\n\n# 查看网桥状态 \nbrctl show\n```\n\n# 2. 常用命令\n\n```bash\n# 进入root\nsu\n\n# 创建虚拟磁盘\nqemu-img create -f qcow2 /var/lib/libvirt/images/vm1 10G\n\n# 创建虚拟机\nvirt-install \\\n--name vm1 \\\n--ram 4096 \\\n--disk path=/var/lib/libvirt/images/vm1.img,size=10 \\\n--vcpus 4 \\\n--cpu host-model,topology.sockets=1,topology.cores=4,topology.threads=1 \\\n--os-variant centos7 \\\n--network bridge=virbr0 \\\n--console pty,target_type=serial \\\n--cdrom=/var/lib/libvirt/images/CentOS-7-x86_64-Minimal-2009.iso \\\n--graphics vnc,password=geek,port=-1,listen=0.0.0.0\n\n# 列出已创建的虚拟机\nvirsh list --all\n\n# 启动虚拟机\nvirsh start vm1\n\n# 开机启动虚拟机\nvirsh autostart vm1\n\n# 关闭虚拟机\nvirsh destroy vm1\n\n# 导出虚拟机配置\nvirsh dumpxml vm1 > vm1.xml\n\n# 从xml文件定义虚拟机\nvirsh define vm1.xml\n\n# 取消定义虚拟机\nvirsh undefine vm1.xml\n\n# 如果创建了虚拟机而忘记记录IP，可以用这条命令连接虚拟机\nvirt-viewer -c qemu:///system vm1\n```\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/KVM.md","raw":"---\ntitle: KVM\ndate: 2025-03-12 11:09:50\ntags: KVM\ncategories: KVM\n---\n# 1. Archlinux使用KVM\n\n## 1.1. 安装KVM包\n\n安装运行KVM所需的所有软件包\n\n```bash\nsudo pacman -Syy\n\nsudo pacman -S qemu virt-manager virt-viewer dnsmasq vde2 bridge-utils openbsd-netcat dmidecode\n```\n\n## 1.2. 安装ebtbles和iptables\n\n```bash\nsudo pacman -S ebtables iptables\n```\n\n## 1.3. 启动KVM libvirt服务\n\n```bash\nsystemctl enable libvirtd.service\n\nsystemctl start libvirtd.service\n\nsystemctl status libvirtd.service\n```\n\n## 1.4. 设置网桥\n\n安装后会生成一个默认网桥配置文件/etc/libvirt/qemu/networks/default.xml，但是默认处于不活跃状态！需要手动启用！\n\n```bash\n# 定义网桥\nsudo virsh net-define /etc/libvirt/qemu/networks/default.xml\n\n# 启动网桥\nsudo virsh net-start default\n\n# 设置网桥开机启动\nsudo virsh net-autostart default\n\n# 查看网桥状态 \nbrctl show\n```\n\n# 2. 常用命令\n\n```bash\n# 进入root\nsu\n\n# 创建虚拟磁盘\nqemu-img create -f qcow2 /var/lib/libvirt/images/vm1 10G\n\n# 创建虚拟机\nvirt-install \\\n--name vm1 \\\n--ram 4096 \\\n--disk path=/var/lib/libvirt/images/vm1.img,size=10 \\\n--vcpus 4 \\\n--cpu host-model,topology.sockets=1,topology.cores=4,topology.threads=1 \\\n--os-variant centos7 \\\n--network bridge=virbr0 \\\n--console pty,target_type=serial \\\n--cdrom=/var/lib/libvirt/images/CentOS-7-x86_64-Minimal-2009.iso \\\n--graphics vnc,password=geek,port=-1,listen=0.0.0.0\n\n# 列出已创建的虚拟机\nvirsh list --all\n\n# 启动虚拟机\nvirsh start vm1\n\n# 开机启动虚拟机\nvirsh autostart vm1\n\n# 关闭虚拟机\nvirsh destroy vm1\n\n# 导出虚拟机配置\nvirsh dumpxml vm1 > vm1.xml\n\n# 从xml文件定义虚拟机\nvirsh define vm1.xml\n\n# 取消定义虚拟机\nvirsh undefine vm1.xml\n\n# 如果创建了虚拟机而忘记记录IP，可以用这条命令连接虚拟机\nvirt-viewer -c qemu:///system vm1\n```\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"KVM","published":1,"updated":"2025-10-02T08:02:41.085Z","comments":1,"layout":"post","photos":[],"_id":"cmg94vmfs0000j4j8bt4i4rf5","content":"<h1 id=\"1-Archlinux使用KVM\"><a href=\"#1-Archlinux使用KVM\" class=\"headerlink\" title=\"1. Archlinux使用KVM\"></a>1. Archlinux使用KVM</h1><h2 id=\"1-1-安装KVM包\"><a href=\"#1-1-安装KVM包\" class=\"headerlink\" title=\"1.1. 安装KVM包\"></a>1.1. 安装KVM包</h2><p>安装运行KVM所需的所有软件包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> pacman -Syy</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> pacman -S qemu virt-manager virt-viewer dnsmasq vde2 bridge-utils openbsd-netcat dmidecode</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-2-安装ebtbles和iptables\"><a href=\"#1-2-安装ebtbles和iptables\" class=\"headerlink\" title=\"1.2. 安装ebtbles和iptables\"></a>1.2. 安装ebtbles和iptables</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> pacman -S ebtables iptables</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-3-启动KVM-libvirt服务\"><a href=\"#1-3-启动KVM-libvirt服务\" class=\"headerlink\" title=\"1.3. 启动KVM libvirt服务\"></a>1.3. 启动KVM libvirt服务</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">enable</span> libvirtd.service</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl start libvirtd.service</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl status libvirtd.service</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-4-设置网桥\"><a href=\"#1-4-设置网桥\" class=\"headerlink\" title=\"1.4. 设置网桥\"></a>1.4. 设置网桥</h2><p>安装后会生成一个默认网桥配置文件&#x2F;etc&#x2F;libvirt&#x2F;qemu&#x2F;networks&#x2F;default.xml，但是默认处于不活跃状态！需要手动启用！</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义网桥</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> virsh net-define /etc/libvirt/qemu/networks/default.xml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动网桥</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> virsh net-start default</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置网桥开机启动</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> virsh net-autostart default</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看网桥状态 </span></span><br><span class=\"line\">brctl show</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2-常用命令\"><a href=\"#2-常用命令\" class=\"headerlink\" title=\"2. 常用命令\"></a>2. 常用命令</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入root</span></span><br><span class=\"line\">su</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建虚拟磁盘</span></span><br><span class=\"line\">qemu-img create -f qcow2 /var/lib/libvirt/images/vm1 10G</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建虚拟机</span></span><br><span class=\"line\">virt-install \\</span><br><span class=\"line\">--name vm1 \\</span><br><span class=\"line\">--ram 4096 \\</span><br><span class=\"line\">--disk path=/var/lib/libvirt/images/vm1.img,size=10 \\</span><br><span class=\"line\">--vcpus 4 \\</span><br><span class=\"line\">--cpu host-model,topology.sockets=1,topology.cores=4,topology.threads=1 \\</span><br><span class=\"line\">--os-variant centos7 \\</span><br><span class=\"line\">--network bridge=virbr0 \\</span><br><span class=\"line\">--console pty,target_type=serial \\</span><br><span class=\"line\">--cdrom=/var/lib/libvirt/images/CentOS-7-x86_64-Minimal-2009.iso \\</span><br><span class=\"line\">--graphics vnc,password=geek,port=-1,listen=0.0.0.0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列出已创建的虚拟机</span></span><br><span class=\"line\">virsh list --all</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动虚拟机</span></span><br><span class=\"line\">virsh start vm1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开机启动虚拟机</span></span><br><span class=\"line\">virsh autostart vm1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭虚拟机</span></span><br><span class=\"line\">virsh destroy vm1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导出虚拟机配置</span></span><br><span class=\"line\">virsh dumpxml vm1 &gt; vm1.xml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 从xml文件定义虚拟机</span></span><br><span class=\"line\">virsh define vm1.xml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取消定义虚拟机</span></span><br><span class=\"line\">virsh undefine vm1.xml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果创建了虚拟机而忘记记录IP，可以用这条命令连接虚拟机</span></span><br><span class=\"line\">virt-viewer -c qemu:///system vm1</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n","excerpt":"","more":"<h1 id=\"1-Archlinux使用KVM\"><a href=\"#1-Archlinux使用KVM\" class=\"headerlink\" title=\"1. Archlinux使用KVM\"></a>1. Archlinux使用KVM</h1><h2 id=\"1-1-安装KVM包\"><a href=\"#1-1-安装KVM包\" class=\"headerlink\" title=\"1.1. 安装KVM包\"></a>1.1. 安装KVM包</h2><p>安装运行KVM所需的所有软件包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> pacman -Syy</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> pacman -S qemu virt-manager virt-viewer dnsmasq vde2 bridge-utils openbsd-netcat dmidecode</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-2-安装ebtbles和iptables\"><a href=\"#1-2-安装ebtbles和iptables\" class=\"headerlink\" title=\"1.2. 安装ebtbles和iptables\"></a>1.2. 安装ebtbles和iptables</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> pacman -S ebtables iptables</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-3-启动KVM-libvirt服务\"><a href=\"#1-3-启动KVM-libvirt服务\" class=\"headerlink\" title=\"1.3. 启动KVM libvirt服务\"></a>1.3. 启动KVM libvirt服务</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">enable</span> libvirtd.service</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl start libvirtd.service</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl status libvirtd.service</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-4-设置网桥\"><a href=\"#1-4-设置网桥\" class=\"headerlink\" title=\"1.4. 设置网桥\"></a>1.4. 设置网桥</h2><p>安装后会生成一个默认网桥配置文件&#x2F;etc&#x2F;libvirt&#x2F;qemu&#x2F;networks&#x2F;default.xml，但是默认处于不活跃状态！需要手动启用！</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义网桥</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> virsh net-define /etc/libvirt/qemu/networks/default.xml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动网桥</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> virsh net-start default</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置网桥开机启动</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> virsh net-autostart default</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看网桥状态 </span></span><br><span class=\"line\">brctl show</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2-常用命令\"><a href=\"#2-常用命令\" class=\"headerlink\" title=\"2. 常用命令\"></a>2. 常用命令</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入root</span></span><br><span class=\"line\">su</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建虚拟磁盘</span></span><br><span class=\"line\">qemu-img create -f qcow2 /var/lib/libvirt/images/vm1 10G</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建虚拟机</span></span><br><span class=\"line\">virt-install \\</span><br><span class=\"line\">--name vm1 \\</span><br><span class=\"line\">--ram 4096 \\</span><br><span class=\"line\">--disk path=/var/lib/libvirt/images/vm1.img,size=10 \\</span><br><span class=\"line\">--vcpus 4 \\</span><br><span class=\"line\">--cpu host-model,topology.sockets=1,topology.cores=4,topology.threads=1 \\</span><br><span class=\"line\">--os-variant centos7 \\</span><br><span class=\"line\">--network bridge=virbr0 \\</span><br><span class=\"line\">--console pty,target_type=serial \\</span><br><span class=\"line\">--cdrom=/var/lib/libvirt/images/CentOS-7-x86_64-Minimal-2009.iso \\</span><br><span class=\"line\">--graphics vnc,password=geek,port=-1,listen=0.0.0.0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列出已创建的虚拟机</span></span><br><span class=\"line\">virsh list --all</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动虚拟机</span></span><br><span class=\"line\">virsh start vm1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开机启动虚拟机</span></span><br><span class=\"line\">virsh autostart vm1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭虚拟机</span></span><br><span class=\"line\">virsh destroy vm1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导出虚拟机配置</span></span><br><span class=\"line\">virsh dumpxml vm1 &gt; vm1.xml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 从xml文件定义虚拟机</span></span><br><span class=\"line\">virsh define vm1.xml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取消定义虚拟机</span></span><br><span class=\"line\">virsh undefine vm1.xml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果创建了虚拟机而忘记记录IP，可以用这条命令连接虚拟机</span></span><br><span class=\"line\">virt-viewer -c qemu:///system vm1</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"title":"Mysql","date":"2025-03-14T02:35:03.000Z","_content":"\n# 1. 安装Mysql\n\n## 1.1 Archlinux\n\n### 1.1.1. 安装并初始化Mysql\n\n```bash\nsudo pacman -S mysql\n\nsudo mysqld --initialize --user=mysql --basedir=/usr --datadir=/var/lib/mysql\n```\n\n观察终端输出可以发现初始化完成后，随机生成了初始帐号密码：\n\n- root@localhost\n- o,FRbratO8U6\n  帐号密码是随即生成的，请注意自行保存，后面有用！\n\n<font color=red>*终端输出*</font>\n\n```terminal\n2025-03-14T02:41:41.212250Z 0 [System] [MY-015017] [Server] MySQL Server Initialization - start.\n2025-03-14T02:41:41.213204Z 0 [Warning] [MY-010915] [Server] 'NO_ZERO_DATE', 'NO_ZERO_IN_DATE' and 'ERROR_FOR_DIVISION_BY_ZERO' sql modes should be used with strict mode. They will be merged with strict mode in a future release.\n2025-03-14T02:41:41.213243Z 0 [System] [MY-013169] [Server] /usr/bin/mysqld (mysqld 9.2.0) initializing of server in progress as process 19340\n2025-03-14T02:41:41.225654Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.\n2025-03-14T02:41:41.492273Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.\n2025-03-14T02:41:42.326345Z 6 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: o,FRbratO8U6\n2025-03-14T02:41:44.238961Z 0 [System] [MY-015018] [Server] MySQL Server Initialization - end.\n[zcx@archlinux LogBuild]$ grep 'temporary password' /var/log/mysqld.log\n```\n\n### 1.1.2. 启动Mysql服务\n\n```bash\nsystemctl start mysqld.service\n\nsystemctl status mysqld.service\n\nsystemctl enable mysqld.service\n```\n\n### 1.1.3. 登陆Mysql\n\n```bash\n# 输入密码即可\nmysql -u root -p \nEnter password:\n```\n\n### 1.1.4. 修改root密码\n\n```bash\nalter user 'root'@'localhost' identified by 'geek';\n```\n\n<font color=red>下次登陆时，使用更改后的密码即可！</font>\n\n## 1.2. CentOS\n\n### 1.2.1. 新增Yum仓库\n\n*新增仓库*\n\n```bash\nyum install -y https://dev.mysql.com/get/mysql80-community-release-el7-7.noarch.rpm\n```\n\n*导入公钥*\n\n```bash\nrpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql*\n```\n\n*默认禁用MySQL仓库*\n\n```bash\nyum-config-manager --disable mysql-connectors-community | egrep '(\\[mysql-connectors-community\\])|enabled'\nyum-config-manager --disable mysql-tools-community | egrep '(\\[mysql-tools-community\\])|enabled'\nyum-config-manager --disable mysql80-community | egrep '(\\[mysql80-community\\])|enabled'\n```\n\n### 1.2.2. 安装Mysql5.7\n\n```bash\nyum --enablerepo=mysql57-community install -y mysql-community-server\n```\n\n### 1.2.3. 初始化Mysql5.7\n\n*设置日志*\n\n```bash\nmkdir -p /var/log/mysqld\ntouch /var/log/mysqld/error.log\nchown -R mysql:mysql /var/log/mysqld\n\ncrudini --set --existing /etc/my.cnf mysqld log-error /var/log/mysqld/error.log\n```\n\n*设置MySQL数据目录*\n\n```bash\nmkdir -p /data/mysql\n\ncrudini --set --existing /etc/my.cnf mysqld datadir /data/mysql\n```\n\n### 1.2.4. 配置Mysql5.7\n\n```bash\ncrudini --set /etc/my.cnf mysqld default-storage-engine InnoDB\ncrudini --set /etc/my.cnf mysqld disabled_storage_engines '\"MyISAM\"'\n\ncrudini --set /etc/my.cnf mysqld bind-address 0.0.0.0\ncrudini --set /etc/my.cnf mysqld max_connections 1000\n\ncrudini --set /etc/my.cnf mysqld general_log OFF\ncrudini --set /etc/my.cnf mysqld general_log_file /var/log/mysqld/general.log\n\ncrudini --set /etc/my.cnf mysqld long_query_time 3\ncrudini --set /etc/my.cnf mysqld slow_query_log ON\ncrudini --set /etc/my.cnf mysqld slow_query_log_file /var/log/mysqld/slow_query.log\n\n# 开启兼容模式，兼容老MySQL代码，比如使用空字符串代替NULL插入数据\ncrudini --set /etc/my.cnf mysqld sql_mode '\"\"'\n\ncrudini --set /etc/my.cnf mysqld skip-name-resolve 'OFF'\n\ncrudini --set /etc/my.cnf mysqldump max_allowed_packet 100M\necho \"quick\" >> /etc/my.cnf\necho \"quote-names\" >> /etc/my.cnf\n```\n\n### 1.2.5. 启动Mysql5.7\n\n```bash\nsystemctl enable mysqld\n\nsystemctl start mysqld\n\nsystemctl status mysqld\n```\n\n### 1.2.6. 修改密码\n\n*临时密码有不常用的特殊字符，不便日常管理。不降低安全性的前提性，更改MySQL密码*\n\n```bash\nMYSQL_TMP_ROOT_PASSWORD=$(grep 'A temporary password' /var/log/mysqld/error.log | tail -n 1 | awk '{print $NF}')\n\n# 这里我的密码设置为geek\nexport BY_MYSQL_ROOT_PASSWORD=geek\n# 永久保存临时配置（重新登录或重启都有效）\nsed -i '/export BY_/d' ~/.bash_profile && env | grep BY_ | awk '{print \"export \"$1}' >> ~/.bash_profile\n\necho -e \"  MySQL用户名：root\\nMySQL临时密码：${MYSQL_TMP_ROOT_PASSWORD}\\n  MySQL新密码：${BY_MYSQL_ROOT_PASSWORD}\"\n\nmysqladmin -uroot -p\"${MYSQL_TMP_ROOT_PASSWORD}\" password ${BY_MYSQL_ROOT_PASSWORD}\n```\n\n*<font color=red>终端输出</font>*\n\n```terminal\nMySQL用户名：root\nMySQL临时密码：caJ<TYnjX8iC\nMySQL新密码：geek\n```\n\n### 1.2.7. 本机无密码配置\n\n*脚本无人化配置（自动输入密码）*\n\n```bash\nunbuffer expect -c \"\nspawn mysql_config_editor set --skip-warn --login-path=client --host=localhost --user=root --password\nexpect -nocase \\\"Enter password:\\\" {send \\\"${BY_MYSQL_ROOT_PASSWORD}\\n\\\"; interact}\n\"\n```\n\n*<font color=red>终端输出</font>*\n\n```terminal\nspawn mysql_config_editor set --skip-warn --login-path=client --host=localhost --user=root --password\nEnter password: \n```\n\n*查看MySQL无密码配置清单*\n\n```bash\nmysql_config_editor print --all\n```\n\n*<font color=red>终端输出</font>*\n\n```terminal\n[client]\nuser = root\npassword = *****\nhost = localhost\n```\n\n*<font color=red>无密码登录测试</font>*\n\n```bash\nmysql -e \"show databases;\"\n```\n\n### 1.2.8. 修改密码策略(可选)\n\n*默认的密码复杂度要求太高导致修改密码报错可以执行*\n\n```mysql\nset global validate_password_policy=0;\nset global validate_password_length=0;\n```\n","source":"_posts/Mysql.md","raw":"---\ntitle: Mysql\ndate: 2025-03-14 10:35:03\ntags: Mysql\ncategories: Mysql\n---\n\n# 1. 安装Mysql\n\n## 1.1 Archlinux\n\n### 1.1.1. 安装并初始化Mysql\n\n```bash\nsudo pacman -S mysql\n\nsudo mysqld --initialize --user=mysql --basedir=/usr --datadir=/var/lib/mysql\n```\n\n观察终端输出可以发现初始化完成后，随机生成了初始帐号密码：\n\n- root@localhost\n- o,FRbratO8U6\n  帐号密码是随即生成的，请注意自行保存，后面有用！\n\n<font color=red>*终端输出*</font>\n\n```terminal\n2025-03-14T02:41:41.212250Z 0 [System] [MY-015017] [Server] MySQL Server Initialization - start.\n2025-03-14T02:41:41.213204Z 0 [Warning] [MY-010915] [Server] 'NO_ZERO_DATE', 'NO_ZERO_IN_DATE' and 'ERROR_FOR_DIVISION_BY_ZERO' sql modes should be used with strict mode. They will be merged with strict mode in a future release.\n2025-03-14T02:41:41.213243Z 0 [System] [MY-013169] [Server] /usr/bin/mysqld (mysqld 9.2.0) initializing of server in progress as process 19340\n2025-03-14T02:41:41.225654Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.\n2025-03-14T02:41:41.492273Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.\n2025-03-14T02:41:42.326345Z 6 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: o,FRbratO8U6\n2025-03-14T02:41:44.238961Z 0 [System] [MY-015018] [Server] MySQL Server Initialization - end.\n[zcx@archlinux LogBuild]$ grep 'temporary password' /var/log/mysqld.log\n```\n\n### 1.1.2. 启动Mysql服务\n\n```bash\nsystemctl start mysqld.service\n\nsystemctl status mysqld.service\n\nsystemctl enable mysqld.service\n```\n\n### 1.1.3. 登陆Mysql\n\n```bash\n# 输入密码即可\nmysql -u root -p \nEnter password:\n```\n\n### 1.1.4. 修改root密码\n\n```bash\nalter user 'root'@'localhost' identified by 'geek';\n```\n\n<font color=red>下次登陆时，使用更改后的密码即可！</font>\n\n## 1.2. CentOS\n\n### 1.2.1. 新增Yum仓库\n\n*新增仓库*\n\n```bash\nyum install -y https://dev.mysql.com/get/mysql80-community-release-el7-7.noarch.rpm\n```\n\n*导入公钥*\n\n```bash\nrpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql*\n```\n\n*默认禁用MySQL仓库*\n\n```bash\nyum-config-manager --disable mysql-connectors-community | egrep '(\\[mysql-connectors-community\\])|enabled'\nyum-config-manager --disable mysql-tools-community | egrep '(\\[mysql-tools-community\\])|enabled'\nyum-config-manager --disable mysql80-community | egrep '(\\[mysql80-community\\])|enabled'\n```\n\n### 1.2.2. 安装Mysql5.7\n\n```bash\nyum --enablerepo=mysql57-community install -y mysql-community-server\n```\n\n### 1.2.3. 初始化Mysql5.7\n\n*设置日志*\n\n```bash\nmkdir -p /var/log/mysqld\ntouch /var/log/mysqld/error.log\nchown -R mysql:mysql /var/log/mysqld\n\ncrudini --set --existing /etc/my.cnf mysqld log-error /var/log/mysqld/error.log\n```\n\n*设置MySQL数据目录*\n\n```bash\nmkdir -p /data/mysql\n\ncrudini --set --existing /etc/my.cnf mysqld datadir /data/mysql\n```\n\n### 1.2.4. 配置Mysql5.7\n\n```bash\ncrudini --set /etc/my.cnf mysqld default-storage-engine InnoDB\ncrudini --set /etc/my.cnf mysqld disabled_storage_engines '\"MyISAM\"'\n\ncrudini --set /etc/my.cnf mysqld bind-address 0.0.0.0\ncrudini --set /etc/my.cnf mysqld max_connections 1000\n\ncrudini --set /etc/my.cnf mysqld general_log OFF\ncrudini --set /etc/my.cnf mysqld general_log_file /var/log/mysqld/general.log\n\ncrudini --set /etc/my.cnf mysqld long_query_time 3\ncrudini --set /etc/my.cnf mysqld slow_query_log ON\ncrudini --set /etc/my.cnf mysqld slow_query_log_file /var/log/mysqld/slow_query.log\n\n# 开启兼容模式，兼容老MySQL代码，比如使用空字符串代替NULL插入数据\ncrudini --set /etc/my.cnf mysqld sql_mode '\"\"'\n\ncrudini --set /etc/my.cnf mysqld skip-name-resolve 'OFF'\n\ncrudini --set /etc/my.cnf mysqldump max_allowed_packet 100M\necho \"quick\" >> /etc/my.cnf\necho \"quote-names\" >> /etc/my.cnf\n```\n\n### 1.2.5. 启动Mysql5.7\n\n```bash\nsystemctl enable mysqld\n\nsystemctl start mysqld\n\nsystemctl status mysqld\n```\n\n### 1.2.6. 修改密码\n\n*临时密码有不常用的特殊字符，不便日常管理。不降低安全性的前提性，更改MySQL密码*\n\n```bash\nMYSQL_TMP_ROOT_PASSWORD=$(grep 'A temporary password' /var/log/mysqld/error.log | tail -n 1 | awk '{print $NF}')\n\n# 这里我的密码设置为geek\nexport BY_MYSQL_ROOT_PASSWORD=geek\n# 永久保存临时配置（重新登录或重启都有效）\nsed -i '/export BY_/d' ~/.bash_profile && env | grep BY_ | awk '{print \"export \"$1}' >> ~/.bash_profile\n\necho -e \"  MySQL用户名：root\\nMySQL临时密码：${MYSQL_TMP_ROOT_PASSWORD}\\n  MySQL新密码：${BY_MYSQL_ROOT_PASSWORD}\"\n\nmysqladmin -uroot -p\"${MYSQL_TMP_ROOT_PASSWORD}\" password ${BY_MYSQL_ROOT_PASSWORD}\n```\n\n*<font color=red>终端输出</font>*\n\n```terminal\nMySQL用户名：root\nMySQL临时密码：caJ<TYnjX8iC\nMySQL新密码：geek\n```\n\n### 1.2.7. 本机无密码配置\n\n*脚本无人化配置（自动输入密码）*\n\n```bash\nunbuffer expect -c \"\nspawn mysql_config_editor set --skip-warn --login-path=client --host=localhost --user=root --password\nexpect -nocase \\\"Enter password:\\\" {send \\\"${BY_MYSQL_ROOT_PASSWORD}\\n\\\"; interact}\n\"\n```\n\n*<font color=red>终端输出</font>*\n\n```terminal\nspawn mysql_config_editor set --skip-warn --login-path=client --host=localhost --user=root --password\nEnter password: \n```\n\n*查看MySQL无密码配置清单*\n\n```bash\nmysql_config_editor print --all\n```\n\n*<font color=red>终端输出</font>*\n\n```terminal\n[client]\nuser = root\npassword = *****\nhost = localhost\n```\n\n*<font color=red>无密码登录测试</font>*\n\n```bash\nmysql -e \"show databases;\"\n```\n\n### 1.2.8. 修改密码策略(可选)\n\n*默认的密码复杂度要求太高导致修改密码报错可以执行*\n\n```mysql\nset global validate_password_policy=0;\nset global validate_password_length=0;\n```\n","slug":"Mysql","published":1,"updated":"2025-10-02T08:03:03.130Z","comments":1,"layout":"post","photos":[],"_id":"cmg94vmfu0003j4j8d3q65v7z","content":"<h1 id=\"1-安装Mysql\"><a href=\"#1-安装Mysql\" class=\"headerlink\" title=\"1. 安装Mysql\"></a>1. 安装Mysql</h1><h2 id=\"1-1-Archlinux\"><a href=\"#1-1-Archlinux\" class=\"headerlink\" title=\"1.1 Archlinux\"></a>1.1 Archlinux</h2><h3 id=\"1-1-1-安装并初始化Mysql\"><a href=\"#1-1-1-安装并初始化Mysql\" class=\"headerlink\" title=\"1.1.1. 安装并初始化Mysql\"></a>1.1.1. 安装并初始化Mysql</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> pacman -S mysql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> mysqld --initialize --user=mysql --basedir=/usr --datadir=/var/lib/mysql</span><br></pre></td></tr></table></figure>\n\n<p>观察终端输出可以发现初始化完成后，随机生成了初始帐号密码：</p>\n<ul>\n<li>root@localhost</li>\n<li>o,FRbratO8U6<br>帐号密码是随即生成的，请注意自行保存，后面有用！</li>\n</ul>\n<p><font color=red><em>终端输出</em></font></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2025-03-14T02:41:41.212250Z 0 [System] [MY-015017] [Server] MySQL Server Initialization - start.</span><br><span class=\"line\">2025-03-14T02:41:41.213204Z 0 [Warning] [MY-010915] [Server] &#x27;NO_ZERO_DATE&#x27;, &#x27;NO_ZERO_IN_DATE&#x27; and &#x27;ERROR_FOR_DIVISION_BY_ZERO&#x27; sql modes should be used with strict mode. They will be merged with strict mode in a future release.</span><br><span class=\"line\">2025-03-14T02:41:41.213243Z 0 [System] [MY-013169] [Server] /usr/bin/mysqld (mysqld 9.2.0) initializing of server in progress as process 19340</span><br><span class=\"line\">2025-03-14T02:41:41.225654Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class=\"line\">2025-03-14T02:41:41.492273Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class=\"line\">2025-03-14T02:41:42.326345Z 6 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: o,FRbratO8U6</span><br><span class=\"line\">2025-03-14T02:41:44.238961Z 0 [System] [MY-015018] [Server] MySQL Server Initialization - end.</span><br><span class=\"line\">[zcx@archlinux LogBuild]$ grep &#x27;temporary password&#x27; /var/log/mysqld.log</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-1-2-启动Mysql服务\"><a href=\"#1-1-2-启动Mysql服务\" class=\"headerlink\" title=\"1.1.2. 启动Mysql服务\"></a>1.1.2. 启动Mysql服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start mysqld.service</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl status mysqld.service</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> mysqld.service</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-1-3-登陆Mysql\"><a href=\"#1-1-3-登陆Mysql\" class=\"headerlink\" title=\"1.1.3. 登陆Mysql\"></a>1.1.3. 登陆Mysql</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 输入密码即可</span></span><br><span class=\"line\">mysql -u root -p </span><br><span class=\"line\">Enter password:</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-1-4-修改root密码\"><a href=\"#1-1-4-修改root密码\" class=\"headerlink\" title=\"1.1.4. 修改root密码\"></a>1.1.4. 修改root密码</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alter user <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> identified by <span class=\"string\">&#x27;geek&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><font color=red>下次登陆时，使用更改后的密码即可！</font></p>\n<h2 id=\"1-2-CentOS\"><a href=\"#1-2-CentOS\" class=\"headerlink\" title=\"1.2. CentOS\"></a>1.2. CentOS</h2><h3 id=\"1-2-1-新增Yum仓库\"><a href=\"#1-2-1-新增Yum仓库\" class=\"headerlink\" title=\"1.2.1. 新增Yum仓库\"></a>1.2.1. 新增Yum仓库</h3><p><em>新增仓库</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y https://dev.mysql.com/get/mysql80-community-release-el7-7.noarch.rpm</span><br></pre></td></tr></table></figure>\n\n<p><em>导入公钥</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql*</span><br></pre></td></tr></table></figure>\n\n<p><em>默认禁用MySQL仓库</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum-config-manager --<span class=\"built_in\">disable</span> mysql-connectors-community | egrep <span class=\"string\">&#x27;(\\[mysql-connectors-community\\])|enabled&#x27;</span></span><br><span class=\"line\">yum-config-manager --<span class=\"built_in\">disable</span> mysql-tools-community | egrep <span class=\"string\">&#x27;(\\[mysql-tools-community\\])|enabled&#x27;</span></span><br><span class=\"line\">yum-config-manager --<span class=\"built_in\">disable</span> mysql80-community | egrep <span class=\"string\">&#x27;(\\[mysql80-community\\])|enabled&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-2-安装Mysql5-7\"><a href=\"#1-2-2-安装Mysql5-7\" class=\"headerlink\" title=\"1.2.2. 安装Mysql5.7\"></a>1.2.2. 安装Mysql5.7</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum --enablerepo=mysql57-community install -y mysql-community-server</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-3-初始化Mysql5-7\"><a href=\"#1-2-3-初始化Mysql5-7\" class=\"headerlink\" title=\"1.2.3. 初始化Mysql5.7\"></a>1.2.3. 初始化Mysql5.7</h3><p><em>设置日志</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /var/log/mysqld</span><br><span class=\"line\"><span class=\"built_in\">touch</span> /var/log/mysqld/error.log</span><br><span class=\"line\"><span class=\"built_in\">chown</span> -R mysql:mysql /var/log/mysqld</span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> --existing /etc/my.cnf mysqld log-error /var/log/mysqld/error.log</span><br></pre></td></tr></table></figure>\n\n<p><em>设置MySQL数据目录</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /data/mysql</span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> --existing /etc/my.cnf mysqld datadir /data/mysql</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-4-配置Mysql5-7\"><a href=\"#1-2-4-配置Mysql5-7\" class=\"headerlink\" title=\"1.2.4. 配置Mysql5.7\"></a>1.2.4. 配置Mysql5.7</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld default-storage-engine InnoDB</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld disabled_storage_engines <span class=\"string\">&#x27;&quot;MyISAM&quot;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld bind-address 0.0.0.0</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld max_connections 1000</span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld general_log OFF</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld general_log_file /var/log/mysqld/general.log</span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld long_query_time 3</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld slow_query_log ON</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld slow_query_log_file /var/log/mysqld/slow_query.log</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开启兼容模式，兼容老MySQL代码，比如使用空字符串代替NULL插入数据</span></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld sql_mode <span class=\"string\">&#x27;&quot;&quot;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld skip-name-resolve <span class=\"string\">&#x27;OFF&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqldump max_allowed_packet 100M</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;quick&quot;</span> &gt;&gt; /etc/my.cnf</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;quote-names&quot;</span> &gt;&gt; /etc/my.cnf</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-5-启动Mysql5-7\"><a href=\"#1-2-5-启动Mysql5-7\" class=\"headerlink\" title=\"1.2.5. 启动Mysql5.7\"></a>1.2.5. 启动Mysql5.7</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">enable</span> mysqld</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl start mysqld</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl status mysqld</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-6-修改密码\"><a href=\"#1-2-6-修改密码\" class=\"headerlink\" title=\"1.2.6. 修改密码\"></a>1.2.6. 修改密码</h3><p><em>临时密码有不常用的特殊字符，不便日常管理。不降低安全性的前提性，更改MySQL密码</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MYSQL_TMP_ROOT_PASSWORD=$(grep <span class=\"string\">&#x27;A temporary password&#x27;</span> /var/log/mysqld/error.log | <span class=\"built_in\">tail</span> -n 1 | awk <span class=\"string\">&#x27;&#123;print $NF&#125;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这里我的密码设置为geek</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> BY_MYSQL_ROOT_PASSWORD=geek</span><br><span class=\"line\"><span class=\"comment\"># 永久保存临时配置（重新登录或重启都有效）</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;/export BY_/d&#x27;</span> ~/.bash_profile &amp;&amp; <span class=\"built_in\">env</span> | grep BY_ | awk <span class=\"string\">&#x27;&#123;print &quot;export &quot;$1&#125;&#x27;</span> &gt;&gt; ~/.bash_profile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">&quot;  MySQL用户名：root\\nMySQL临时密码：<span class=\"variable\">$&#123;MYSQL_TMP_ROOT_PASSWORD&#125;</span>\\n  MySQL新密码：<span class=\"variable\">$&#123;BY_MYSQL_ROOT_PASSWORD&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysqladmin -uroot -p<span class=\"string\">&quot;<span class=\"variable\">$&#123;MYSQL_TMP_ROOT_PASSWORD&#125;</span>&quot;</span> password <span class=\"variable\">$&#123;BY_MYSQL_ROOT_PASSWORD&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><em><font color=red>终端输出</font></em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MySQL用户名：root</span><br><span class=\"line\">MySQL临时密码：caJ&lt;TYnjX8iC</span><br><span class=\"line\">MySQL新密码：geek</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-7-本机无密码配置\"><a href=\"#1-2-7-本机无密码配置\" class=\"headerlink\" title=\"1.2.7. 本机无密码配置\"></a>1.2.7. 本机无密码配置</h3><p><em>脚本无人化配置（自动输入密码）</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unbuffer expect -c <span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">spawn mysql_config_editor set --skip-warn --login-path=client --host=localhost --user=root --password</span></span><br><span class=\"line\"><span class=\"string\">expect -nocase \\&quot;Enter password:\\&quot; &#123;send \\&quot;<span class=\"variable\">$&#123;BY_MYSQL_ROOT_PASSWORD&#125;</span>\\n\\&quot;; interact&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p><em><font color=red>终端输出</font></em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spawn mysql_config_editor set --skip-warn --login-path=client --host=localhost --user=root --password</span><br><span class=\"line\">Enter password: </span><br></pre></td></tr></table></figure>\n\n<p><em>查看MySQL无密码配置清单</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql_config_editor <span class=\"built_in\">print</span> --all</span><br></pre></td></tr></table></figure>\n\n<p><em><font color=red>终端输出</font></em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[client]</span><br><span class=\"line\">user = root</span><br><span class=\"line\">password = *****</span><br><span class=\"line\">host = localhost</span><br></pre></td></tr></table></figure>\n\n<p><em><font color=red>无密码登录测试</font></em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -e <span class=\"string\">&quot;show databases;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-8-修改密码策略-可选\"><a href=\"#1-2-8-修改密码策略-可选\" class=\"headerlink\" title=\"1.2.8. 修改密码策略(可选)\"></a>1.2.8. 修改密码策略(可选)</h3><p><em>默认的密码复杂度要求太高导致修改密码报错可以执行</em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set global validate_password_policy=0;</span><br><span class=\"line\">set global validate_password_length=0;</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"1-安装Mysql\"><a href=\"#1-安装Mysql\" class=\"headerlink\" title=\"1. 安装Mysql\"></a>1. 安装Mysql</h1><h2 id=\"1-1-Archlinux\"><a href=\"#1-1-Archlinux\" class=\"headerlink\" title=\"1.1 Archlinux\"></a>1.1 Archlinux</h2><h3 id=\"1-1-1-安装并初始化Mysql\"><a href=\"#1-1-1-安装并初始化Mysql\" class=\"headerlink\" title=\"1.1.1. 安装并初始化Mysql\"></a>1.1.1. 安装并初始化Mysql</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> pacman -S mysql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> mysqld --initialize --user=mysql --basedir=/usr --datadir=/var/lib/mysql</span><br></pre></td></tr></table></figure>\n\n<p>观察终端输出可以发现初始化完成后，随机生成了初始帐号密码：</p>\n<ul>\n<li>root@localhost</li>\n<li>o,FRbratO8U6<br>帐号密码是随即生成的，请注意自行保存，后面有用！</li>\n</ul>\n<p><font color=red><em>终端输出</em></font></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2025-03-14T02:41:41.212250Z 0 [System] [MY-015017] [Server] MySQL Server Initialization - start.</span><br><span class=\"line\">2025-03-14T02:41:41.213204Z 0 [Warning] [MY-010915] [Server] &#x27;NO_ZERO_DATE&#x27;, &#x27;NO_ZERO_IN_DATE&#x27; and &#x27;ERROR_FOR_DIVISION_BY_ZERO&#x27; sql modes should be used with strict mode. They will be merged with strict mode in a future release.</span><br><span class=\"line\">2025-03-14T02:41:41.213243Z 0 [System] [MY-013169] [Server] /usr/bin/mysqld (mysqld 9.2.0) initializing of server in progress as process 19340</span><br><span class=\"line\">2025-03-14T02:41:41.225654Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class=\"line\">2025-03-14T02:41:41.492273Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class=\"line\">2025-03-14T02:41:42.326345Z 6 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: o,FRbratO8U6</span><br><span class=\"line\">2025-03-14T02:41:44.238961Z 0 [System] [MY-015018] [Server] MySQL Server Initialization - end.</span><br><span class=\"line\">[zcx@archlinux LogBuild]$ grep &#x27;temporary password&#x27; /var/log/mysqld.log</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-1-2-启动Mysql服务\"><a href=\"#1-1-2-启动Mysql服务\" class=\"headerlink\" title=\"1.1.2. 启动Mysql服务\"></a>1.1.2. 启动Mysql服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start mysqld.service</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl status mysqld.service</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> mysqld.service</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-1-3-登陆Mysql\"><a href=\"#1-1-3-登陆Mysql\" class=\"headerlink\" title=\"1.1.3. 登陆Mysql\"></a>1.1.3. 登陆Mysql</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 输入密码即可</span></span><br><span class=\"line\">mysql -u root -p </span><br><span class=\"line\">Enter password:</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-1-4-修改root密码\"><a href=\"#1-1-4-修改root密码\" class=\"headerlink\" title=\"1.1.4. 修改root密码\"></a>1.1.4. 修改root密码</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alter user <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> identified by <span class=\"string\">&#x27;geek&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><font color=red>下次登陆时，使用更改后的密码即可！</font></p>\n<h2 id=\"1-2-CentOS\"><a href=\"#1-2-CentOS\" class=\"headerlink\" title=\"1.2. CentOS\"></a>1.2. CentOS</h2><h3 id=\"1-2-1-新增Yum仓库\"><a href=\"#1-2-1-新增Yum仓库\" class=\"headerlink\" title=\"1.2.1. 新增Yum仓库\"></a>1.2.1. 新增Yum仓库</h3><p><em>新增仓库</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y https://dev.mysql.com/get/mysql80-community-release-el7-7.noarch.rpm</span><br></pre></td></tr></table></figure>\n\n<p><em>导入公钥</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql*</span><br></pre></td></tr></table></figure>\n\n<p><em>默认禁用MySQL仓库</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum-config-manager --<span class=\"built_in\">disable</span> mysql-connectors-community | egrep <span class=\"string\">&#x27;(\\[mysql-connectors-community\\])|enabled&#x27;</span></span><br><span class=\"line\">yum-config-manager --<span class=\"built_in\">disable</span> mysql-tools-community | egrep <span class=\"string\">&#x27;(\\[mysql-tools-community\\])|enabled&#x27;</span></span><br><span class=\"line\">yum-config-manager --<span class=\"built_in\">disable</span> mysql80-community | egrep <span class=\"string\">&#x27;(\\[mysql80-community\\])|enabled&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-2-安装Mysql5-7\"><a href=\"#1-2-2-安装Mysql5-7\" class=\"headerlink\" title=\"1.2.2. 安装Mysql5.7\"></a>1.2.2. 安装Mysql5.7</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum --enablerepo=mysql57-community install -y mysql-community-server</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-3-初始化Mysql5-7\"><a href=\"#1-2-3-初始化Mysql5-7\" class=\"headerlink\" title=\"1.2.3. 初始化Mysql5.7\"></a>1.2.3. 初始化Mysql5.7</h3><p><em>设置日志</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /var/log/mysqld</span><br><span class=\"line\"><span class=\"built_in\">touch</span> /var/log/mysqld/error.log</span><br><span class=\"line\"><span class=\"built_in\">chown</span> -R mysql:mysql /var/log/mysqld</span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> --existing /etc/my.cnf mysqld log-error /var/log/mysqld/error.log</span><br></pre></td></tr></table></figure>\n\n<p><em>设置MySQL数据目录</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /data/mysql</span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> --existing /etc/my.cnf mysqld datadir /data/mysql</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-4-配置Mysql5-7\"><a href=\"#1-2-4-配置Mysql5-7\" class=\"headerlink\" title=\"1.2.4. 配置Mysql5.7\"></a>1.2.4. 配置Mysql5.7</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld default-storage-engine InnoDB</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld disabled_storage_engines <span class=\"string\">&#x27;&quot;MyISAM&quot;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld bind-address 0.0.0.0</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld max_connections 1000</span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld general_log OFF</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld general_log_file /var/log/mysqld/general.log</span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld long_query_time 3</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld slow_query_log ON</span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld slow_query_log_file /var/log/mysqld/slow_query.log</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开启兼容模式，兼容老MySQL代码，比如使用空字符串代替NULL插入数据</span></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld sql_mode <span class=\"string\">&#x27;&quot;&quot;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqld skip-name-resolve <span class=\"string\">&#x27;OFF&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">crudini --<span class=\"built_in\">set</span> /etc/my.cnf mysqldump max_allowed_packet 100M</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;quick&quot;</span> &gt;&gt; /etc/my.cnf</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;quote-names&quot;</span> &gt;&gt; /etc/my.cnf</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-5-启动Mysql5-7\"><a href=\"#1-2-5-启动Mysql5-7\" class=\"headerlink\" title=\"1.2.5. 启动Mysql5.7\"></a>1.2.5. 启动Mysql5.7</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">enable</span> mysqld</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl start mysqld</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl status mysqld</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-6-修改密码\"><a href=\"#1-2-6-修改密码\" class=\"headerlink\" title=\"1.2.6. 修改密码\"></a>1.2.6. 修改密码</h3><p><em>临时密码有不常用的特殊字符，不便日常管理。不降低安全性的前提性，更改MySQL密码</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MYSQL_TMP_ROOT_PASSWORD=$(grep <span class=\"string\">&#x27;A temporary password&#x27;</span> /var/log/mysqld/error.log | <span class=\"built_in\">tail</span> -n 1 | awk <span class=\"string\">&#x27;&#123;print $NF&#125;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这里我的密码设置为geek</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> BY_MYSQL_ROOT_PASSWORD=geek</span><br><span class=\"line\"><span class=\"comment\"># 永久保存临时配置（重新登录或重启都有效）</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;/export BY_/d&#x27;</span> ~/.bash_profile &amp;&amp; <span class=\"built_in\">env</span> | grep BY_ | awk <span class=\"string\">&#x27;&#123;print &quot;export &quot;$1&#125;&#x27;</span> &gt;&gt; ~/.bash_profile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">&quot;  MySQL用户名：root\\nMySQL临时密码：<span class=\"variable\">$&#123;MYSQL_TMP_ROOT_PASSWORD&#125;</span>\\n  MySQL新密码：<span class=\"variable\">$&#123;BY_MYSQL_ROOT_PASSWORD&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysqladmin -uroot -p<span class=\"string\">&quot;<span class=\"variable\">$&#123;MYSQL_TMP_ROOT_PASSWORD&#125;</span>&quot;</span> password <span class=\"variable\">$&#123;BY_MYSQL_ROOT_PASSWORD&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><em><font color=red>终端输出</font></em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MySQL用户名：root</span><br><span class=\"line\">MySQL临时密码：caJ&lt;TYnjX8iC</span><br><span class=\"line\">MySQL新密码：geek</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-7-本机无密码配置\"><a href=\"#1-2-7-本机无密码配置\" class=\"headerlink\" title=\"1.2.7. 本机无密码配置\"></a>1.2.7. 本机无密码配置</h3><p><em>脚本无人化配置（自动输入密码）</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unbuffer expect -c <span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">spawn mysql_config_editor set --skip-warn --login-path=client --host=localhost --user=root --password</span></span><br><span class=\"line\"><span class=\"string\">expect -nocase \\&quot;Enter password:\\&quot; &#123;send \\&quot;<span class=\"variable\">$&#123;BY_MYSQL_ROOT_PASSWORD&#125;</span>\\n\\&quot;; interact&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p><em><font color=red>终端输出</font></em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spawn mysql_config_editor set --skip-warn --login-path=client --host=localhost --user=root --password</span><br><span class=\"line\">Enter password: </span><br></pre></td></tr></table></figure>\n\n<p><em>查看MySQL无密码配置清单</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql_config_editor <span class=\"built_in\">print</span> --all</span><br></pre></td></tr></table></figure>\n\n<p><em><font color=red>终端输出</font></em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[client]</span><br><span class=\"line\">user = root</span><br><span class=\"line\">password = *****</span><br><span class=\"line\">host = localhost</span><br></pre></td></tr></table></figure>\n\n<p><em><font color=red>无密码登录测试</font></em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -e <span class=\"string\">&quot;show databases;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-8-修改密码策略-可选\"><a href=\"#1-2-8-修改密码策略-可选\" class=\"headerlink\" title=\"1.2.8. 修改密码策略(可选)\"></a>1.2.8. 修改密码策略(可选)</h3><p><em>默认的密码复杂度要求太高导致修改密码报错可以执行</em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set global validate_password_policy=0;</span><br><span class=\"line\">set global validate_password_length=0;</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cmg7teed30000g8j8dwp085vx","category_id":"cmg7sgfys00010wj8af214822","_id":"cmg7teed40002g8j86i8i4s57"},{"post_id":"cmg7tp60d0000f8j86ppeh8vn","category_id":"cmg7sgfys00010wj8af214822","_id":"cmg7tp60g0002f8j82n4q1jm7"},{"post_id":"cmg936blx00008gj88bag6b3z","category_id":"cmg7sgfys00010wj8af214822","_id":"cmg936blz00028gj8cw9vh75q"},{"post_id":"cmg94bm7600005kj8fmlpdak2","category_id":"cmg94bm7900015kj8equt0p3v","_id":"cmg94bm7a00045kj86c7q88cc"},{"post_id":"cmg94du2v000048j8ffqd16j3","category_id":"cmg94du2y000148j8bd6525nb","_id":"cmg94du2z000448j80wk06zzc"},{"post_id":"cmg94h9eh0000r8j89k6xh8sb","category_id":"cmg94h9ej0001r8j882jd44ot","_id":"cmg94h9ek0004r8j8bg1kcg7c"},{"post_id":"cmg94h9ek0005r8j8a35qcp15","category_id":"cmg94h9el0006r8j8ht1l785d","_id":"cmg94h9el0009r8j8hipq86k6"},{"post_id":"cmg94vmfs0000j4j8bt4i4rf5","category_id":"cmg94vmft0001j4j8a5ro59xa","_id":"cmg94vmfv0007j4j87hgu5gy2"},{"post_id":"cmg94vmfu0003j4j8d3q65v7z","category_id":"cmg94vmfu0004j4j8fj8m0a5v","_id":"cmg94vmfv0009j4j8d1cx68lk"}],"PostTag":[{"post_id":"cmg7teed30000g8j8dwp085vx","tag_id":"cmg7sgfyt00020wj8a9477d1h","_id":"cmg7teed40001g8j8foq20n1a"},{"post_id":"cmg7tp60d0000f8j86ppeh8vn","tag_id":"cmg7sgfyt00020wj8a9477d1h","_id":"cmg7tp60g0001f8j8abdg5p10"},{"post_id":"cmg936blx00008gj88bag6b3z","tag_id":"cmg7sgfyt00020wj8a9477d1h","_id":"cmg936blz00018gj80xd969el"},{"post_id":"cmg94bm7600005kj8fmlpdak2","tag_id":"cmg94bm7a00025kj88vjkfdep","_id":"cmg94bm7a00035kj80oxf4god"},{"post_id":"cmg94du2v000048j8ffqd16j3","tag_id":"cmg94du2y000248j88ebpdkk8","_id":"cmg94du2z000348j84lpmawkj"},{"post_id":"cmg94h9eh0000r8j89k6xh8sb","tag_id":"cmg94h9ej0002r8j883r7hfxo","_id":"cmg94h9ek0003r8j840op98xd"},{"post_id":"cmg94h9ek0005r8j8a35qcp15","tag_id":"cmg94h9el0007r8j82rg810yd","_id":"cmg94h9el0008r8j8bclidyna"},{"post_id":"cmg94vmfs0000j4j8bt4i4rf5","tag_id":"cmg94vmfu0002j4j81ib6dqnw","_id":"cmg94vmfv0006j4j83b9ecxsn"},{"post_id":"cmg94vmfu0003j4j8d3q65v7z","tag_id":"cmg94vmfv0005j4j8e5xqejoe","_id":"cmg94vmfv0008j4j878zectpk"}],"Tag":[{"name":"CentOS7","_id":"cmg7sgfyt00020wj8a9477d1h"},{"name":"ArchLinux","_id":"cmg94bm7a00025kj88vjkfdep"},{"name":"Nginx","_id":"cmg94du2y000248j88ebpdkk8"},{"name":"phpipam","_id":"cmg94h9ej0002r8j883r7hfxo"},{"name":"Uptime-Kuma","_id":"cmg94h9el0007r8j82rg810yd"},{"name":"KVM","_id":"cmg94vmfu0002j4j81ib6dqnw"},{"name":"Mysql","_id":"cmg94vmfv0005j4j8e5xqejoe"}]}}